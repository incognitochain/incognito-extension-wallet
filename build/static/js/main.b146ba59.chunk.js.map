{"version":3,"sources":["components/index.ts","styles/colors.ts","styles/fontSize.ts","styles/globalStyles.ts","module/Token/index.ts","module/Configs/index.ts","module/Send/Send.constant.ts","constants/server.ts","constants/config.ts","constants/keys.ts","constants/common.ts","constants/coin.ts","constants/url.ts","configs/configsEnvs.ts","module/Account/index.ts","module/Preload/index.ts","components/ErrorBoundary/ErrorBoundary.tsx","utils/convert.ts","module/Wallet/index.ts","module/Send/Send.selector.ts","components/Layout/Layout.tsx","components/Layout/Layout.app.tsx","module/Account/Account.constant.ts","module/Token/Token.selector.ts","utils/format.ts","components/Icons/Setting.tsx","components/Icons/ArrowLeft.tsx","components/Icons/VerifiedToken.tsx","components/Icons/Copy.tsx","components/Icons/OpenLink.tsx","components/Icons/Question.tsx","components/Icons/Info.tsx","components/Icons/Infinite.tsx","components/Icons/Scan.tsx","components/Icons/AddressBook.tsx","components/Icons/ArrowUp.tsx","components/Icons/ArrowDown.tsx","components/ReduxForm/validator.ts","module/Token/Token.constant.ts","components/Header/Header.enhance.tsx","components/Header/Header.tsx","components/Header/Header.app.tsx","components/Header/Header.useEffect.tsx","module/Account/Account.selector.ts","module/Account/features/AccountItem/index.ts","module/Token/Token.styled.ts","module/AddressBook/AddressBook.constant.ts","module/Send/Send.actions.ts","module/Preload/Preload.constant.ts","module/AddressBook/AddressBook.utils.ts","module/History/index.ts","module/AddressBook/index.ts","module/Send/Send.utils.ts","utils/separator.ts","components/Modal/index.ts","services/api.ts","services/storage.ts","services/server.ts","services/cache.ts","module/Token/Token.tsx","module/History/History.constant.ts","http/index.ts","module/History/History.selector.ts","components/Core/index.ts","module/Wallet/Wallet.selector.ts","module/Wallet/Wallet.constant.ts","module/Configs/Configs.constant.ts","module/Setting/Setting.constant.ts","module/Token/Token.utils.ts","module/Preload/Preload.selector.ts","module/Account/features/SelectAccount/index.ts","module/Token/features/Detail/index.ts","module/AddressBook/AddressBook.selector.ts","components/Core/Toast/Toast.reducer.ts","utils/index.ts","module/Wallet/Wallet.route.ts","module/Account/features/AccountItem/AccountItem.route.ts","module/Account/features/AccountDetail/index.ts","module/Token/Token.list.tsx","components/Modal/Modal.constant.ts","components/ReduxForm/InputField/index.ts","components/Header/Header.searchBox.tsx","module/index.ts","module/Preload/Preload.actions.ts","module/Setting/index.ts","module/Account/features/Receive/index.tsx","module/Setting/features/SettingItem/index.ts","module/AddressBook/AddressBook.actions.ts","module/Keychain/index.ts","module/Setting/Setting.actions.ts","module/Setting/Setting.selector.ts","module/Setting/features/Network/index.ts","module/History/History.item.tsx","module/Send/index.ts","module/Token/features/TokenInfo/index.ts","module/Send/features/ConfirmTx/index.ts","module/Token/features/AddToken/index.ts","components/ReduxForm/InputField/InputField.styled.ts","components/ReduxForm/InputField/InputField.tsx","components/Core/Toast/Toast.constant.ts","components/Header/Header.selector.ts","module/Token/Token.enhance.tsx","redux/reducers.ts","redux/store.ts","redux/selector.ts","components/ReduxForm/InputField/InputField.constant.ts","http/exception/customError/types.ts","http/exception/customError/utils.ts","http/exception/customError/code/apiCode.ts","http/exception/customError/code/knownCode.ts","http/exception/customError/code/webjsCode.ts","http/exception/customError/code/index.ts","http/exception/customError/message.ts","http/exception/customError/customError.ts","http/exception/ex.ts","module/Account/Account.route.ts","module/Account/features/AccountDetail/AccountDetail.route.ts","module/Account/features/BackupAccount/BackupAccount.route.ts","module/Account/features/CreateAccount/CreateAccount.route.ts","module/Account/features/ImportAccount/ImportAccount.route.ts","module/Account/features/Receive/Receive.route.ts","module/AddressBook/AddressBook.route.ts","module/Configs/Configs.route.ts","module/History/History.route.ts","module/Keychain/Keychain.route.ts","module/Send/Send.route.ts","module/Send/features/ConfirmTx/ConfirmTx.route.ts","module/Setting/Setting.route.ts","module/Setting/features/Network/Network.route.ts","module/Token/features/AddToken/AddToken.route.ts","module/Token/features/Detail/Detail.route.ts","module/Token/features/TokenInfo/TokenInfo.route.ts","module/Account/Account.tsx","module/Preload/Preload.reducer.ts","module/Configs/Configs.tsx","module/Configs/Configs.reducer.ts","module/Setting/Setting.tsx","module/Account/features/SelectAccount/SelectAccount.tsx","module/Account/features/Receive/Receive.tsx","module/AddressBook/AddressBook.tsx","module/Keychain/Keychain.tsx","module/Account/features/AccountDetail/AccountDetail.tsx","module/Setting/features/Network/Network.tsx","module/Setting/Setting.reducer.ts","module/Token/Token.reducer.ts","module/Account/features/BackupAccount/BackupAccount.tsx","module/Account/features/CreateAccount/CreateAccount.tsx","module/Account/features/ImportAccount/ImportAccount.tsx","module/AddressBook/features/Create/Create.tsx","module/History/History.tsx","module/Send/Send.tsx","module/Token/features/Detail/Detail.tsx","module/Token/features/TokenInfo/TokenInfo.tsx","module/Send/features/ConfirmTx/ConfirmTx.tsx","module/Token/features/AddToken/AddToken.tsx","module/Account/features/SelectAccount/SelectAccount.route.ts","module/Token/Token.services.ts","module/Wallet/Wallet.utils.ts","module/History/History.utils.ts","database/IndexedDB.ts","database/IncognitoDB.ts","database/tables/wallet.ts","module/Account/Account.actions.ts","module/Configs/Configs.actions.ts","module/Configs/Configs.selector.ts","module/Account/features/AccountItem/AccountItem.tsx","module/Account/features/SelectAccount/SelectAccount.btn.tsx","module/Setting/features/SettingItem/SettingItem.tsx","module/Token/Token.actions.ts","module/Token/Token.enhanceAllList.tsx","module/Token/Token.allList.tsx","module/Token/Token.basic.tsx","module/Preload/Preload.enhance.tsx","module/Account/Account.useEffect.ts","module/Account/features/BackupAccount/index.ts","module/Account/features/CreateAccount/index.ts","module/Account/features/ImportAccount/index.ts","module/AddressBook/features/Create/index.ts","module/History/History.list.tsx","module/History/History.actions.ts","module/Wallet/Wallet.actions.ts","configs/walletConfigs.ts","components/Core/Toast/Toast.selector.ts","components/Core/Toast/Toast.actions.ts","components/Icons/QrCode.tsx","module/Setting/features/SettingItem/SettingItem.styled.ts","module/Setting/Setting.enhance.tsx","module/AddressBook/AddressBook.enhance.tsx","module/Keychain/Keychain.styled.ts","module/Token/Token.model.ts","module/Account/features/CreateAccount/CreateAccount.enhance.tsx","module/Account/features/CreateAccount/CreateAccount.styled.ts","module/Account/features/ImportAccount/ImportAccount.styled.ts","module/AddressBook/features/Create/Create.enhance.tsx","module/History/History.enhance.tsx","components/Modal/Modal.selector.ts","module/Token/features/TokenInfo/TokenInfo.enhance.tsx","module/Token/features/TokenInfo/TokenInfo.verify.tsx","module/Token/features/TokenInfo/TokenInfo.styled.ts","module/Token/features/Detail/Detail.enhance.tsx","module/Send/Send.enhanceSend.tsx","module/Send/Send.enhanceAddressValidator.tsx","module/Send/Send.enhanceAmountValidator.tsx","module/Send/Send.enhanceInit.tsx","module/Send/Send.enhanceFee.tsx","module/Send/Send.styled.ts","module/Token/features/AddToken/AddToken.enhance.tsx","module/Wallet/Wallet.enhance.tsx","utils/randomName.ts","module/Account/features/ImportAccount/ImportAccount.enhance.tsx","components/QrReader/index.tsx","module/Send/Send.enhance.tsx","components/Copy/Copy.tsx","components/QrCode/QrCode.tsx","i18n/en.ts","module/AddressBook/features/Create/Create.route.ts","components/Modal/Modal.reducer.ts","module/Account/Account.reducer.ts","module/AddressBook/AddressBook.reducer.ts","module/History/History.reducer.ts","module/Send/Send.reducer.ts","module/Wallet/Wallet.reducer.ts","module/Account/features/AccountItem/AccountItem.modal.tsx","module/Wallet/Wallet.tsx","i18n/index.ts","components/Core/Toast/index.ts","components/Core/Toast/Toast.tsx","http/http.js","module/Account/Account.enhance.tsx","module/Account/Account.styled.ts","module/Account/features/BackupAccount/BackupAccount.styled.ts","module/AddressBook/AddressBook.styled.ts","module/Configs/Configs.enhance.tsx","module/Configs/Configs.styled.ts","module/History/History.styled.ts","components/Modal/Modal.tsx","components/Modal/Modal.actions.ts","module/Send/Send.services.ts","module/Setting/Setting.styled.ts","module/Setting/features/Network/Network.styled.ts","module/Token/features/AddToken/AddToken.styled.ts","module/Token/features/Detail/Detail.styled.ts","components/Core/Checkbox/Checkbox.tsx","components/Core/SpinnerContainer/SpinnerContainer.tsx","components/Core/Button/Button.tsx","components/Core/ToggleSwitch/ToggleSwitch.tsx","i18n/vi.ts","module sync //.route.tsx?","module sync /^.*$","../src sync //.reducer.ts","components/Templates/Templates.reducer.ts","App.enhance.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["COLORS","transparent","orange","white","black","blue","blue1","blue2","blue3","blue4","blue5","blue6","red","green","pink","dark1","dark2","dark3","dark4","dark5","dark6","lightGrey1","lightGrey2","lightGrey3","lightGrey4","lightGrey5","lightGrey6","lightGrey7","lightGrey8","lightGrey9","lightGrey10","lightGrey11","lightGrey12","lightGrey13","lightGrey14","lightGrey15","lightGrey16","lightGrey17","lightGrey18","lightGrey19","newGrey","toastBackgroundDefault","toastBackgroundError","toastBackgroundWarning","toastBackgroundSuccess","overlayBlack","overlayBlackDark","overlayBlackLight","errorMessage","mottoGrey","colorGrey","colorGreyMedium","colorGreyBold","colorPrimary","colorGreyLight","colorBlue","green2","green3","FONT_SIZES","superSmall","small","regular","medium","superMedium","large","avgLarge","veryLarge","superLarge","lightTheme","body","text","subText","toggleBorder","gradient","button","textButton","width","minWidth","maxWidth","height","DEFAULT_THEME","GlobalStyled","createGlobalStyle","props","theme","isDev","ENVS","REACT_APP_DOMAIN_URL","ACTION_FETCHING_FEE","ACTION_FETCHED_FEE","ACTION_FETCH_FAIL_FEE","ACTION_ADD_FEE_TYPE","ACTION_CHANGE_FEE_TYPE","ACTION_FETCHED_PTOKEN_FEE","ACTION_INIT","ACTION_INIT_FETCHED","ACTION_FETCHED_MIN_PTOKEN_FEE","ACTION_CHANGE_FEE","ACTION_FETCHED_MAX_FEE_PRV","ACTION_FETCHED_MAX_FEE_PTOKEN","ACTION_USE_FEE_MAX","ACTION_FETCHED_VALID_ADDR","ACTION_FETCHED_USER_FEES","ACTION_FETCHING_USER_FEES","ACTION_FETCH_FAIL_USER_FEES","ACTION_TOGGLE_FAST_FEE","ACTION_REMOVE_FEE_TYPE","FORM_CONFIGS","formName","amount","toAddress","fee","memo","MAINNET_FULLNODE","TESTNET_FULLNODE","homeConfig","REACT_APP_HOME_CONFIG","BUILD_VERSION","REACT_APP_VERSION","HOME_CONFIG_DATA","CONSTANT_CONFIGS","CRYPTO_ICON_URL","INCOGNITO_TOKEN_ICON_URL","API_BASE_URL","REACT_APP_PASSWORD_SECRET_KEY","REACT_APP_PASSPHRASE_WALLET_DEFAULT","EXPLORER_CONSTANT_CHAIN_URL","MASTER_NODE_ADDRESS","DEX_BINANCE_TOKEN_URL","ETHERSCAN_URL","BINANCE_EXPLORER_URL","USDT_TOKEN_ID","NODE_URL","TRACK_LOG_URL","MAIN_WEBSITE","ETH_TOKEN_ID","API_BASE_URL2","APP_VERSION","HOME_CONFIG_EVENT","content","title","url","prefixNetwork","isMainnet","PASSPHRASE_KEY","DEFAULT_ACCOUNT_NAME","DISPLAYED_WIZARD","GAME_PLAYER_ID","USER","LIST_DEVICE","LIST_TOKEN","USER_UNFOLLOWING_TOKEN_ID_LIST","DEX","UNISWAP_HISTORY","DEX_HISTORY","SEEN_DEPOSIT_GUIDE","PIN","IS_CHECK_FOLLOWED_TOKEN","IS_BACKEDUP_ACCOUNT","REDUX_STATE_RECEIVERS_IN_NETWORK","REDUX_STATE_RECEIVERS_OUT_NETWORK","WITHDRAWAL_DATA","SUBSCRIBE_TOPIC_KEY","BACKUP_STAKE_KEY","SCREEN_STAKE_GUIDE","PROVIDE_TXS","SHOW_WIZARD","IS_FOLLOW_DEFAULT_PTOKENS","DETECT_NETWORK_NAME","DEV_TEST_MODE_CENTRALIZED","DEV_TEST_MODE_DECENTRALIZED","UNSHIELD_DATA_DECENTRALIZED","UNSHIELD_DATA_CENTRALIZED","DEV_TEST_TOGGLE_UTXOS","UTXOS_DATA","DEV_TEST_TOGGLE_HISTORY_DETAIL","DEV_TEST_TOGGLE_LOG_APP","CRYPTO_SYMBOL","PRV","BTC","ETH","BNB","USD","KCS","TOMO","NEO","XMR","ZEN","ZCL","ZEC","VOT","VTC","SNG","XRP","XRB","QTUM","PTS","PPC","GAS","NMC","MEC","LTC","KMD","HUSH","GRLC","FRC","DOGE","DGB","DCR","CLO","BTG","BCH","BIO","BVC","BKX","AUR","ZIL","POPULAR_COIN","MAIN_CRYPTO_CURRENCY","USDT","id","name","displayName","symbol","pDecimals","hasIcon","originalSymbol","isVerified","COIN_CONSTANT","POPULAR_COIN_IDS","PRV_ID","NETWORK_NAME","BINANCE","ETHEREUM","PRIVATE_TOKEN_TYPE","COIN","TOKEN","PRIVATE_TOKEN_CURRENCY_TYPE","ERC20","BNB_BEP2","POPULAR_COINS_SYMBOL","COMMUNITY_URL","defaultEnvs","REACT_APP_MODE","REACT_APP_IS_DEV","REACT_APP_WALLET_NAME","envs","PROCCESS_ENV","process","isEmpty","Object","keys","map","key","error","console","debug","getEnvs","ErrorBoundary","componentDidCatch","errorInfo","log","state","hasError","this","children","message","JSON","stringify","React","Component","getDerivedStateFromError","replaceDecimals","autoCorrect","result","decimalSeparator","getDecimalSeparator","includes","replace","convert","checkAmount","Number","isFinite","Error","toHumanAmount","payload","originalAmount","decimals","BigNumber","isNaN","indexNumber","pow","dividedBy","toNumber","toOriginalAmount","humanAmount","round","amountRepDecimals","bnAmount","multipliedBy","Math","floor","number","toString","sendSelector","createSelector","send","sendDataSelector","selectedPrivacySelector","selectedPrivacy","getSendData","Styled","styled","div","compose","WrappedComponent","className","ACTION_FETCHED","ACTION_FETCHING_CREATE_ACCOUNT","ACTION_FETCHED_CREATE_ACCOUNT","ACTION_FETCHING_IMPORT_ACCOUNT","ACTION_FETCHED_IMPORT_ACCOUNT","ACTION_SELECT_ACCOUNT","ACTION_SET_LIST_ACCOUNT","ACTION_SWITCH_ACCOUNT_FETCHING","ACTION_SWITCH_ACCOUNT_FETCHED","ACTION_GET_ACCOUNT_BALANCE_FETCHING","ACTION_GET_ACCOUNT_BALANCE_FETCHED","tokenSelector","token","pTokensSelector","tokenState","pTokens","pToken","pairPrv","CurrentPrvPool","isGreaterThan","change","PercentChangePrv1h","PercentChange1h","ID","tokenId","TokenID","Symbol","pSymbol","PSymbol","Decimals","PDecimals","currencyType","CurrencyType","type","Type","Name","contractId","ContractID","verified","Verified","pricePrv","PricePrv","priceUsd","PriceUsd","pCustomTokensSelector","pCustomTokens","cToken","totalSupply","Amount","image","Image","ownerName","OwnerName","ownerAddress","OwnerAddress","ownerEmail","OwnerEmail","ownerWebsite","OwnerWebsite","followedTokensIdsSelector","defaultAccountSelector","defaultAccount","excludePRV","privacyTokenIds","Array","reverse","COINS","findPTokenBySymbolSelector","find","t","followedTokensSelect","followed","popularCoinIdsSeletor","preloadSelector","preload","configs","mainnet","getPrivacyDataByTokenIDSelector","accountBalanceSelector","followedTokensIds","accountBalance","coins","memoize","tokenID","followedIds","pTokenData","pCustomTokenData","SelectedPrivacy","isNativeToken","isFollowed","some","tokenUSDT","price","getPrice","formatAmount","format","formatPriceByUsd","getFormatAmountByUSD","formatBalanceByUsd","availableTokensSelector","getPrivacyDataByTokenID","pTokensIds","pCustomTokensIds","filter","tokens","uniqBy","pUSDTSelector","selectedTokenIdSelector","selectedTokenId","bridgeTokensSelector","chainTokensSelector","totalShieldedTokensSelector","totalShieldedTokens","compact","reduce","prevValue","currentValue","totalShieldByPRV","totalShieldByUSD","currentPrvVal","currentUsdVal","plus","formatTotalAmountPRV","formatTotalAmountUSD","isTokenBySymbolSelector","isErc20TokenSelector","isErc20Token","gettingBalanceSelector","gettingBalance","isGettingBalanceTokenByIdSelector","removeTrailingZeroes","formattedString","amountString","length","slice","toFixed","bigNumber","formatedAmount","clipAmount","decimalDigits","fmt","groupSeparator","getGroupSeparator","groupSize","convertHumanAmount","maxDigits","getMaxDecimalDigits","fixedNumber","min","fixedString","toFormat","ROUND_DOWN","formatUnixDateTime","dateTime","formatPattern","moment","unix","num","rs","Link","Setting","to","routeSetting","src","alt","ArrowLeft","VerifiedIcon","Copy","OpenLink","Question","Info","Infinite","Scan","AddressBook","ArrowUp","ArrowDown","max","required","value","undefined","minLength","minValue","combinedAmount","combinedNanoAmount","isInteger","combinedIncognitoAddress","keyServices","checkPaymentAddress","incognitoAddress","combinedETHAddress","walletValidator","validate","ethAddress","combinedTOMOAddress","tomoAddress","combinedBTCAddress","btcAddress","combinedNEOAddress","neoAddress","combinedBNBAddress","RegExp","test","bnbAddress","combinedZenAddress","zenAddress","combinedZCLAddress","zclAddress","combinedZECAddress","zecAddress","combinedVOTAddress","votAddress","combinedVTCAddress","vtcAddress","combinedSNGAddress","sngAddress","combinedXRPAddress","xrpAddress","combinedXRBAddress","xrbAddress","combinedQTUMAddress","qtumAddress","combinedPTSAddress","ptsAddress","combinedPPCAddress","ppcAddress","combinedGASAddress","gasAddress","combinedNMCAddress","nmcAddress","combinedMECAddress","mecAddress","combinedLTCAddress","ltcAddress","combinedKMDAddress","kmdAddress","combinedHUSHAddress","hushAddress","combinedGRLCAddress","grlcAddress","combinedFRCAddress","frcAddress","combinedDOGEAddress","dogeAddress","combinedDGBAddress","dgbAddress","combinedDCRAddress","dcrAddress","combinedCLOAddress","cloAddress","combinedBTGAddress","btgAddress","combinedBCHAddress","bchAddress","combinedBIOAddress","bioAddress","combinedBVCAddress","bvcAddress","combinedBKXAddress","bkxAddress","combinedAURAddress","aurAddress","combinedZILAddress","validation","isBech32","zilAddress","combinedUnknownAddress","validator","maxValue","combinedAccountName","pattern","regexp","invalidAddress","email","ACTION_FETCHED_PCUSTOMTOKEN_LIST","ACTION_FETCHED_PTOKEN_LIST","ACTION_GET_BALANCE_TOKEN_FETCHING","ACTION_GET_BALANCE_TOKEN_FETCHED","ACTION_FOLLOWED_POPULAR_TOKEN","ACTION_SET_FOLLOWED_TOKENS","ACTION_SET_SELECTED_TOKEN","ACTION_FOLLOW_TOKEN_BY_ID","enhance","canSearch","onGoBack","customHeader","useState","toggleSearch","setState","onHandleToggleSearch","a","history","useHistory","renderHeaderTitle","onClick","handleClick","goBack","withHeader","rightHeader","selectAccount","HeaderApp","QrCode","route","receiveRoute","useSearchBox","data","handleFilter","dispatch","useDispatch","keySearch","useSelector","keySearchSelector","useEffect","reset","accountSelector","account","listAccountSelector","list","listAccountNameSelector","listAccount","defaultAccountNameSelector","defaultAccountName","walletSelector","walletState","loaded","wallet","masterAccount","getAccountByName","isGettingAccountBalanceSelector","switchAccountSelector","switch","createAccountSelector","create","importAccountSelector","import","getAccountByNameSelector","accounts","accountName","keySetAccountSelector","keySet","paymentAddressSelector","paymentAddressKeySerialized","NameStyled","TextStyled","p","AmountStyled","BalanceStyled","TokenStyled","ACTION_CREATE","ACTION_UPDATE","ACTION_DELETE","ACTION_SELECTED","ACTION_REMOVE_SELECTED","actionInitFetched","actionAddFeeType","actionFetchedFee","actionFetchedMinPTokenFee","actionHandleMinFeeEst","minFeePTokenEst","getState","rate","minFeePToken","minFeePTokenText","task","Promise","all","actionFetchedPTokenFee","actionHandleFeePTokenEst","feePTokenEst","feePToken","feePTokenText","totalFeePToken","totalFeePTokenText","isUseTokenFee","focus","actionHandleFeeEst","feeEst","feePrv","feePrvText","totalFeePrv","totalFeePrvText","isUsedPRVFee","minFeePrv","minFeePrvText","actionInitEstimateFee","config","screen","minAmount","minAmountText","isAddressValidated","isValidETHAddress","actionFetchedMaxFeePrv","actionFetchedMaxFeePToken","actionInit","actionFetchingFee","actionFetchFailFee","actionFetchFee","address","isFetching","init","MAX_FEE_PER_TX","bnOriginalAmount","actionChangeFeeType","actionFetchFeeByMax","isFetched","totalFee","bnFeeEst","maxAmount","minus","maxAmountText","getMaxAmount","_maxAmountText","ACTION_FETCHING","ACTION_FETCHED_INIT_DB","ACTION_SET_CONFIGS","ACTION_SET_SERVER","isAddressBookExist","oldReceivers","addressBook","item","isEqual","toLower","ADDRESS_BOOK_TYPE","1","2","filterAddressByKey","toLowerCase","DEFAULT_FEE_PER_KB_HUMAN_AMOUNT","DEFAULT_FEE_PER_KB","MAX_TX_SIZE","bnTotalFee","actived","feePDecimals","feeText","totalFeeText","titleBtnSubmit","selector","formValueSelector","inputAmount","inputAddress","inputMemo","valid","isValid","submitting","isSubmitting","feeUnitByTokenId","isUnShield","isSend","isIncognitoAddress","disabledForm","getTotalFee","userFee","fast2x","userFeesData","hasMultiLevel","userFees","PrivacyFees","TokenFees","Level1","Level2","hasMultiLevelUsersFee","removeAllSpace","str","standardizedAddress","indexParams","indexOf","newAddress","substring","DECIMAL_SEPARATOR","GROUP_SEPARATOR","loadSeparator","newSeparator","savedDecimalSeparator","getLocalDecimalSeparator","saveLocalDecimalSeparator","KEY_SAVE","CONSTANT_KEYS","VERIFY_CODE","ACCOUNT_QRCODE","DEVICE_ID","VIEW_UNISWAP_TOOLTIP","UNISWAP_AIRDROP","WEBVIEW","NODECLEARED","SHIP_ADDRESS","IS_MAINNET","getItem","localStorage","setItem","separator","PRODUCTION_API","MAINNET_SERVER","default","chainURL","apiURL","api2URL","exploreChainURL","exploreBinanceURL","etherscanURL","DEFAULT_LIST_SERVER","caches","cache","expiredTime","Date","getTime","getCache","cacheData","cachePromise","promiseFunc","cachedData","classNameCustom","classNameTextCustom","isGettingBalanceByTokenIdSelector","animation","size","Balance","PerChange","isTokenDecrease","changeToNumber","tokenChange","style","color","Price","Followed","addTokenTs","translateSelector","addToken","added","withToken","handleOnClick","ACTION_CACHE_TX_HISTORY","LIMIT_RECEIVE_HISTORY_ITEM","MAX_LIMIT_RECEIVE_HISTORY_ITEM","ACTION_FETCHING_CACHE_HISTORY","ACTION_FETCHED_CACHE_HISTORY","HISTORY_TYPE","CONSTANT","TX_CONSTANT","historySelector","historyCacheSelector","cacheHistory","historyCacheDataSelector","historyState","histories","historyType","nativeTokenInfo","privacyTokenInfo","useNativeFee","usePrivacyFee","paymentAddress","SEND_NATIVE_TOKEN","paymentInfoList","paymentAddressStr","SEND_PRIVACY_TOKEN","feeSymbol","amountFormated","feeFormated","statusMessage","getStatusData","timeFormated","lockTime","getTypeData","isIncognitoTx","historyCacheByTxIdSelector","txId","h","walletDataSelector","walletIdSelector","walletId","ACTION_LOAD_WALLET","ACTION_CHANGE_LANGUAGE","ACTION_TOGGLE_HOME_CONFIGS","handleFilterTokenByKeySearch","networkName","defaultValue","bnHumanAmount","String","chainURLSelector","isMainnetSelector","serverSelector","server","apiURLSelector","apiURL2Selector","addressBookSelector","incognitoAddrSelector","externalAddrSelector","externalAddress","keychainAddrSelector","TOAST_CONFIGS","success","warning","custom","TOAST_CONFIGS_CLASSNAME","initialState","toggle","reducer","action","ACTION_TOGGLE_TOAST","walletRoute","path","exact","component","lazy","accountRoute","ListToken","visible","renderItem","Fragment","ACTION_TOGGLE_MODAL","ACTION_TOGGLE_LOADING_MODAL","searchBox","SearchBox","Input","componentProps","placeholder","autoFocus","reduxForm","form","routes","require","forEach","push","actionFetching","actionFetched","actionFetch","storageService","implement","setMethod","getMethod","removeMethod","removeItem","namespace","setConfig","wasmPath","logMethod","goServices","implementGoMethodUseWasm","actionFetchPTokenList","actionFetchPCustomTokenList","actionHandleLoadWallet","actionInitWallet","actionSetServer","actionSetConfigs","actionCreate","actionUpdate","actionDelete","actionSelectedReceiver","actionRemoveSelectedReceiver","actionToggleHomeConfigs","settingSelector","setting","devSettingSelector","dev","HistoryItem","desc","copyData","link","copy","actionToggleToast","window","open","inputProps","input","InputField","meta","inputType","onClickMax","onClickAddressBook","onClickScan","INPUT_FIELD","renderInput","searchBoxValue","trim","handleSelectToken","e","preventDefault","requireModule","reducers","fileName","reducerName","camelCase","match","combineReducers","formReducer","saga","createSagaMiddleware","configStore","preloadedState","persistConfig","storage","whitelist","blacklist","persistedReducer","persistReducer","middlewareEnhancer","applyMiddleware","thunk","composedEnhancers","composeWithDevTools","store","createStore","persistor","persistStore","getAccountBalance","getTokenBalanceById","getAccBal","getTokenBal","types","API_ERROR","KNOWN_ERROR","WEB_JS_ERROR","genCode","codeCreator","codes","apiError","TYPES","api","api_email_invalid","api_email_existed","api_device_id_existed","api_invalid_arguments","api_invalid_limit","api_paymentaddres_existed","api_transfer_fail","api_add_private_token_already_existed","api_qrcode_fail_ProductNotFound","api_qrcode_fail_QRCodeAlreadyStaked","api_invalid_size_upload_file","api_invalid_type_upload_file","api_bnb_memo_required","api_unstake_fail","api_tx_added","api_amount_invalid","api_trade_maintain","api_insufficient_funds","api_tx_hash_invalid","game","player_have_pending_transactions","apiCode","knownError","app","timeout_promise","firebase_init_failed","network_make_request_failed","wallet_can_not_create_new_wallet","wallet_can_not_load_existed_wallet","user_login_failed","documentPicker","document_picker_oversize","document_picker_must_be_png","estimateFee","estimate_fee_with_zero_balance","estimate_fee_does_not_support_type_of_fee","getStarted","getStarted_can_not_create_wallet_on_existed","getStarted_load_token_failed","withdraw","withdraw_balance_must_not_be_zero","withdraw_gen_withdraw_address_failed","createAccount","createAccount_failed","createAccount_existed_name","home","home_load_following_token_failed","home_load_balance_failed","importAccount","importAccount_failed","importAccount_existed","node","node_duplicate","node_invalid_host","node_auth_firebase_fail","node_verify_code_fail","node_create_account_fail","node_can_not_connect_hotspot","node_pending_withdrawal","node_can_not_get_wifi_name","payment_address_empty","staking","click_stake","papps","paaps_invalid_daap_url","papp_can_not_opened","papp_the_token_is_not_supported","addBep2Token","addBep2Token_not_found","addErc20Token","addErc20Token_not_found","dex","WITHDRAW_FAIL","NOT_ENOUGH_NETWORK_FEE_ADD","chain","INVALID_ACCOUNT","INVALID_TIME","INVALID_FEE","PENDING_TX","FULLNODE_DOWN","knowCode","webjsError","webJs","web_js_token_balance_is_zero","web_js_import_existed_account","web_js_import_invalid_key","web_js_import_invalid_key_2","web_js_can_not_use_this_token_for_fee","web_js_not_enough_coin","web_js_can_not_created_tx","web_js_can_not_send_main_crypto","webjsCode","code","knownCode","CODE","CustomError","rawError","captureStackTrace","MESSAGE","handleApiError","handleWebJsError","date","CODES","MESSAGES","isValidException","exception","stack","Exception","defaultMessage","debugMessage","Message","_getUnexpectedMessageError","_log2Console","toUTCString","stackTrace","stackTraceCode","_getLog","useDisk","useConsole","__DEV__","showCode","msg","getMessage","stackCode","_","ERROR","getMessageError","accountDetailRoute","templatesRoute","createAccountRoute","importAccountRoute","addressBookRoute","configsRoute","historyRoute","keychainRoute","sendRoute","confirmTxRoute","settingRoute","networkRoute","addTokenRoute","detailRoute","tokenInfoRoute","Account","stateReconciler","autoMergeLevel2","Configs","language","settingTranslate","settingFactories","headerTitle","withSetting","SelectAccount","translate","handleSelectAccount","actionSwitchAccount","hasCopy","hasQrCode","selectable","onSelectAccount","withLayout","Receive","translateByFieldSelector","receive","qrCodeProps","hook","split","Item","onSelectedAddrBook","setToggle","onSelectedAddress","withAddressBook","Hook","AccountItem","isSelected","YourKeychains","keychain","yourKeychain","Keychain","translateKeychain","hookFactories","useMemo","backup","location","useLocation","translateAccountDetail","accountDetail","privateKeySerialized","publicKeyCheckEncode","validatorKey","publicKeySerialized","useCallback","factories","title1","title2","title3","title4","title5","devFactories","title6","title7","title8","actionFetchRemoveAccount","delete","NetworkItem","onChangeNetwork","Network","networkTranslate","network","handleChangeNetwork","assign","stagingHomeConfigs","following","toggleUnVerified","followedPopularIds","testnet","field","stateField","uniq","Backup","copied","backupData","join","limit","copyAll","withCreateAccount","handleCreateAccount","handleSubmit","onSubmit","label","disabled","withImportAccount","handleImportAccount","readOnlyName","handleChangeRandomName","readOnly","rightLabel","withCreate","handleCreate","headerTitleCreate","maxLength","btnCreate","History","useParams","historyLanguage","historyFactories","status","time","coin","FeeType","selected","FeeTypes","EstimateFee","withSend","handleSend","validateAddress","validateAmount","onChangeField","balance","onChange","target","placeholderMemo","TokenBalance","showVerifiedToken","GroupButton","translateDetail","detail","btnSend","routeSend","Detail","themeSelector","routeWallet","routeTokenInfo","withDetail","InfoItem","copyable","withTokenInfo","infosFactories","handlePressVerifiedInfo","infoToken","info","ConfirmTx","confirmLanguage","tx","itemsFactories","routeDetail","sent","withAddToken","addTokenTranslate","handleToggleFollowTokenById","showFollowed","apiGetPTokenList","http","get","then","res","apiGetPCustomTokenList","initWallet","walletName","WalletInstance","encryptWallet","createWallet","loadWallet","researchWallet","walletData","restore","HISTORY","TX_STATUS","statusColor","isShieldTx","statusCode","STATUS_CODE_SHIELD_CENTRALIZED","STATUS_CODE_SHIELD_DECENTRALIZED","isDecentralized","COMPLETE","getStatusDataShield","isUnshieldTx","STATUS_CODE_UNSHIELD_CENTRALIZED","STATUS_CODE_UNSHIELD_DECENTRALIZED","getStatusDataUnShield","STATUS_TEXT","PENDING","CONFIRMED","SUCCESS","FAILED","EXPIRED","typeText","metaData","META_DATA_TYPE","metaDataType","IndexedDb","database","db","tableNames","openDB","upgrade","tableName","objectStoreNames","contains","createObjectStore","autoIncrement","keyPath","transaction","objectStore","getAll","add","values","put","getAllValue","initIncognitoDB","incognitoDB","IndexedDB","TABLE_NAME","addValue","stored","getValue","updateWallet","curWallet","updateByKey","updated","actionFetchingCreateAccount","actionFetchedCreateAccount","actionFetchCreateAccount","addAccount","actionSaveWallet","actionFetchingImportAccount","actionFetchedImportAccount","actionFetchImportAccount","privateKey","removeAccount","actionSelectAccount","actionSetListAccount","actionSwitchAccountFetching","actionSwitchAccountFetched","actionGetAccountBalanceFetching","actionGetAccountBalanceFetched","actionGetAccountBalance","nativeToken","getTotalBalance","actionChangeLanguage","configsSelector","translateByLanguage","CustomLink","BtnSelectAccount","defaultName","ToggleItem","toggleValue","onToggle","SettingItem","child","actionFetchedPTokenList","actionFetchedPCustomTokenList","actionGetBalanceTokenFetching","actionGetBalanceTokenFetched","actionGetBalanceToken","tokenTranslate","tokenIdRequired","totalBalance","actionFollowedPopularTokenIds","actionSetFollowedTokens","actionFollowPopularToken","envToken","popularCoinIds","entries","followTokenById","actionGetPrivacyTokensBalance","bridgeTokens","chainTokens","getPrivacyTokenById","actionSetSelectedToken","WrappedComp","onToggleUnVerifiedTokens","availableTokens","verifiedTokens","unVerifiedTokens","_verifiedTokens","_unVerifiedTokens","tokensFactories","ListAllToken","onHandleChecked","checked","showAmount","handlePreload","actionPreloadApp","useAccount","accountList","isFormValid","accountNameToLowercase","lowerCase","isPrivateKeyExist","getPrivateKeyValidator","isAccountExist","sort","b","withHistory","actionFetchingCacheHistory","actionFetchedCacheHistory","actionFetchCacheHistory","fetching","getTxHistories","isPrivacyToken","actionLoadWallet","dataInit","getAccounts","toastSelector","toast","homeConfigs","incognitoAddr","externalAddr","keychainAddr","filterBySelectedPrivacy","extAddrFilBySelPrivacy","rootNetworkName","keychainAddrFil","incognitoAddrFil","externalAddrFil","keychains","incognito","external","getNetworkName","isETH","isBNB","isPrivateCoin","isBep2Token","isIncognitoToken","combineData","defaultData","getIconUrl","chainTokenImageUri","uri","formatedSymbol","isToken","isPrivateToken","isWithdrawable","isDeposable","isCentralized","incognitoTotalSupply","iconUrl","pairWithPrv","call","oldAddressedBook","modalSelector","modal","actionToggleModal","NormalText","sub","marginBottom","CoinInfoVerified","CoinInfoUnVerified","CoinInfoVerify","selectedPrivacyTokenId","fetchData","paymentInfos","transfer","routeConfirmTx","enhanceAddressValidation","isERC20","sendData","isTokenBySymbol","maxAmountValidator","minAmountValidator","setFormValidator","debounce","maxAmountNum","minAmountNum","currentState","val","isArray","getAmountValidator","enhanceInit","setInit","isGettingBalance","handleFetchedMaxPrv","accBalance","maxFeePrv","maxFeePrvText","handleFetchedMaxFeePToken","amountText","initData","handleChangeForm","deHandleChangeForm","useRef","current","withAllListToken","unfollowTokenById","nameList","params","accountNameList","randomName","excludes","random","handleRandomName","QrReaderComponent","withInit","withFee","withValAddress","withValAmount","handleStandardizedAddress","handleScanQrCode","isString","handleErrorQrCode","QrReader","delay","onScan","onError","setCopied","en","general","addCoin","walletNotExisted","blockShield","totalShielded","btnShield","followToken","addManually","dontSeeYourCoin","btnReceive","accountNotExisted","confirm","btnEdit","btnRemove","msgExist","headerTitleEdit","createRoute","createdAt","isNameExisted","updatedAt","isExist","receiveHistory","oversize","page","refreshing","notEnoughData","feeBurnPToken","feeBurnPTokenText","maxFeePToken","maxFeePTokenText","isMemoRequired","isValidating","userFeePrv","userFeePToken","sendReducer","isExisted","valueOriginal","fieldOriginal","prevIsMemoRequired","totalFeeField","totalFeeTextField","userFeeField","ids","cloneDeep","AccountItemQRCode","ListFollowToken","listFollowTokenIds","showBalance","TotalShield","totalShield","AddCoin","routeAddToken","Wallet","withWallet","vi","Toast","handleCloseToast","setTimeout","getIcons","currentAccessToken","instance","axios","timeout","headers","Authorization","pendingSubscribers","isAlreadyFetchingAccessToken","interceptors","request","use","reject","response","Result","resolve","errorData","errResponse","originalRequest","isAxiosError","ExHandler","ErrorCode","throw","global","login","accessToken","callback","defaults","setTokenHeader","Code","Modal","modalState","apiGetEstimateFeeFromChain","post","apiCheckIfValidAddressETH","apiCheckValidAddress","apiGenCenUnShieldAddr","apiUnShield","apiUpdatePTokenFee","apiEstimateUserFees","Checkbox","SpinnerContainer","Spinner","Button","customContent","rest","ToggleSwitch","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","loading","withPreload","handleLoadWallet","withLayoutApp","createBrowserHistory","createMemoryHistory","App","Header","fallback","withApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootEl","document","getElementById","ReactDOM","render"],"mappings":"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OY,UAAWC,KAAKC,UAAUd,GACxCgG,KAAM0iB,gBAAc1oB,oB,6BCxCxC,2CAce4D,uBARC,SAACC,GAAD,OAA+C,SAACxO,GAC5D,OACI,kBAAC,IAAD,KACI,kBAACwO,EAAqBxO,S,oMCT5Bk8C,EAAW,CACb,WACA,YACA,YACA,SACA,MACA,WACA,WACA,MACA,YACA,SACA,SACA,SACA,YACA,MACA,OACA,SACA,MACA,QACA,OACA,UACA,YACA,QACA,WACA,UACA,YACA,MACA,cACA,SACA,UACA,UACA,UACA,aACA,aACA,SACA,OACA,QACA,YACA,MACA,YACA,SACA,OACA,QACA,YACA,OACA,SACA,OACA,WACA,MACA,UACA,UACA,WACA,OACA,YACA,OACA,SACA,SACA,QACA,UACA,MACA,QACA,WACA,MACA,MACA,SACA,SACA,QACA,OACA,WACA,MACA,MACA,OACA,OACA,UACA,SACA,UACA,OACA,MACA,OACA,YACA,WACA,QACA,UACA,UACA,cACA,SACA,UACA,OACA,UACA,OACA,OACA,WACA,QACA,UACA,eACA,SACA,QACA,QACA,cACA,QACA,OACA,OACA,SACA,SACA,MACA,YACA,WACA,aACA,QACA,YACA,UACA,OACA,UACA,OACA,QACA,UACA,OACA,QACA,UACA,SACA,QACA,QACA,WACA,SACA,UACA,UACA,WACA,SACA,SACA,UACA,OACA,OACA,WACA,SACA,QACA,WACA,QACA,OACA,UACA,OACA,cACA,UACA,QACA,UACA,OACA,UACA,QACA,MACA,SACA,UACA,SACA,YACA,UACA,UACA,UACA,WACA,MACA,SACA,OACA,YACA,WACA,QACA,SACA,UACA,SACA,UACA,OACA,MACA,MACA,QACA,WACA,YACA,WACA,aACA,OACA,aACA,SACA,cACA,YACA,UACA,WACA,WACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,YACA,QACA,WACA,WACA,WACA,WACA,QACA,UACA,OACA,QACA,UACA,UACA,QACA,OACA,QACA,SACA,SACA,QACA,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","file":"static/js/main.b146ba59.chunk.js","sourcesContent":["export * from './Core';\nexport { default as Header } from './Header';\n","export const COLORS = {\n    transparent: 'transparent',\n    orange: '#FF8E00',\n    white: 'white',\n    black: '#000000',\n    blue: '#25CDD6',\n    blue1: '#0A3A3C',\n    blue2: '#01828A',\n    blue3: '#ACE9EC',\n    blue4: '#004AA9',\n    blue5: '#5995F0',\n    blue6: '#00407E',\n    red: '#FE4D4D',\n    green: '#34C759',\n    pink: '#E5006D',\n    dark1: '#101111',\n    dark2: '#0D3A3C',\n    dark3: '#014E52',\n    dark4: '#0A3A3C',\n    dark5: '#245153',\n    dark6: '#4D7B7A',\n    lightGrey1: '#8C9C9D',\n    lightGrey2: '#B9C9CA',\n    lightGrey3: '#9AB7B8',\n    lightGrey4: '#D1DFE0',\n    lightGrey5: '#E4EEEF',\n    lightGrey6: '#F0F5F5',\n    lightGrey7: '#F0F9F9',\n    lightGrey8: '#4A5656',\n    lightGrey9: '#657576',\n    lightGrey10: '#F6F6F6',\n    lightGrey11: '#EDEDED',\n    lightGrey12: '#F3F3F3',\n    lightGrey13: '#E6EEEF',\n    lightGrey14: '#FAFAFA',\n    lightGrey15: '#DCDDDD',\n    lightGrey16: '#8A8A9E',\n    lightGrey17: '#707070',\n    lightGrey18: '#DCDCDD',\n    lightGrey19: '#F4F4F4',\n    newGrey: '#8A8A8E',\n    toastBackgroundDefault: 'rgba(107, 141, 143, 0.8)',\n    toastBackgroundError: 'rgba(255, 101, 47, 0.8)',\n    toastBackgroundWarning: 'rgba(255, 241, 192, 0.8)',\n    toastBackgroundSuccess: 'rgba(42, 171, 160, 0.8)',\n    overlayBlack: 'rgba(6, 40, 41, 0.9)',\n    overlayBlackDark: 'rgba(0, 0, 0, 0.8)',\n    overlayBlackLight: 'rgba(0, 0, 0, 0.3)',\n    errorMessage: '#ed4337',\n    mottoGrey: '#8c9c9d',\n    colorGrey: '#ECECEC',\n    colorGreyMedium: '#C4C4C6',\n    colorGreyBold: '#8A8A8E',\n    colorPrimary: '#33373A',\n    colorGreyLight: '#D8D8D8',\n    colorBlue: '#5995F0',\n    green2: '#64A121',\n    green3: '#018775',\n};\n","export const FONT_SIZES = {\n    superSmall: 12,\n    small: 14,\n    regular: 15,\n    medium: 18,\n    superMedium: 20,\n    large: 22,\n    avgLarge: 30,\n    veryLarge: 38,\n    superLarge: 40,\n};\n","import { ENVS, isDev } from 'src/configs';\nimport { createGlobalStyle } from 'styled-components';\nimport { COLORS } from './colors';\nimport { FONT_SIZES } from './fontSize';\n\nexport interface ITheme {\n    body: string;\n    text: string;\n    subText: string;\n    toggleBorder: string;\n    gradient: string;\n    button: string;\n    textButton: string;\n    width: string;\n    minWidth: string;\n    maxWidth: string;\n    height: string;\n}\n\nexport interface IGlobalStyle {\n    theme: ITheme;\n}\n\nexport const lightTheme: ITheme = {\n    body: COLORS.white,\n    text: COLORS.black,\n    subText: COLORS.colorGreyBold,\n    toggleBorder: COLORS.white,\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\n    button: '#333335',\n    textButton: COLORS.white,\n    width: '357px',\n    minWidth: '320px',\n    maxWidth: '375px',\n    height: '600px',\n};\n\nexport const darkTheme: ITheme = {\n    body: '#363537',\n    text: '#FAFAFA',\n    subText: COLORS.colorGreyLight,\n    toggleBorder: '#6B8096',\n    gradient: 'linear-gradient(#091236, #1E215D)',\n    button: COLORS.colorGreyBold,\n    textButton: COLORS.white,\n    width: '357px',\n    minWidth: '320px',\n    maxWidth: '375px',\n    height: '600px',\n};\n\nexport const DEFAULT_THEME = lightTheme;\n\nexport const GlobalStyled = createGlobalStyle`\n    #root {\n        background: ${(props: IGlobalStyle) => props.theme.body};\n        color: ${(props: IGlobalStyle) => props.theme.text};\n        scrollbar-color: transparent transparent; /*just hides the scrollbar for firefox */\n        font-family: 'SF-Pro-Display';\n        min-width:${(props: IGlobalStyle) => props.theme.minWidth};\n        max-width: ${(props: IGlobalStyle) => props.theme.maxWidth};;\n        width: ${(props: IGlobalStyle) => props.theme.width};\n        font-style: normal;\n        font-display: swap;\n        box-sizing: border-box;\n        font-weight: 100;\n        height:${(props: IGlobalStyle) => props.theme.height};\n        border: ${isDev ? 'solid 0.5px' : 'none'};\n        overflow: hidden;\n        position: relative;\n        font-size: ${FONT_SIZES.regular}px;\n        line-height: ${FONT_SIZES.regular + 3}px;\n        font-weight: 100;\n        margin: auto;\n    }\n    \n    @font-face {\n        font-family: 'SF-Pro-Display';\n        src: url('${ENVS.REACT_APP_DOMAIN_URL}/fonts/SF-Pro-Display/SF-Pro-Display-Regular.otf'); \n        font-style: normal;\n        font-display: swap;\n        font-weight: 100;\n    }\n    @font-face {\n        font-family: 'SF-Pro-Display';\n        src: url('${ENVS.REACT_APP_DOMAIN_URL}/fonts/SF-Pro-Display/SF-Pro-Display-Bold.otf'); \n        font-style: normal;\n        font-display: swap;\n        font-weight: 500;\n    }\n    @font-face {\n        font-family: 'SF-Pro-Display';\n        src: url('${ENVS.REACT_APP_DOMAIN_URL}/fonts/SF-Pro-Display/SF-Pro-Display-Medium.otf'); \n        font-style: normal;\n        font-display: swap;\n        font-weight: 200;\n    }\n    .fw-regular{\n        font-weight: 100;\n    }\n    .fw-medium{\n        font-weight: 200;\n    }\n    .fw-bold {\n        font-weight: 500;\n    }\n    .fs-small {\n        font-size: ${FONT_SIZES.small}px;\n        line-height: ${FONT_SIZES.small + 3}px;\n    }\n    .fs-regular {\n        font-size: ${FONT_SIZES.regular}px;\n        line-height: ${FONT_SIZES.regular + 3}px;\n    }\n    .fs-medium {\n        font-size: ${FONT_SIZES.medium}px;\n        line-height: ${FONT_SIZES.medium + 3}px;\n    }\n    .fs-supermedium {\n        font-size: ${FONT_SIZES.superMedium}px;\n        line-height: ${FONT_SIZES.superMedium + 3}px;\n    }\n    .fs-large{\n        font-size: ${FONT_SIZES.large}px;\n        line-height: ${FONT_SIZES.large + 3}px;\n    }\n    .fs-avglarge{\n        font-size: ${FONT_SIZES.avgLarge}px;\n        line-height: ${FONT_SIZES.avgLarge + 3}px;\n    }\n    .fs-verylarge{\n        font-size: ${FONT_SIZES.veryLarge}px;\n        line-height: ${FONT_SIZES.veryLarge + 3}px;\n    }\n    .hook-row {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n    }\n    .hook-column {\n\n    }\n    .right-text{\n        text-align: right;\n    }\n    .center-text{\n        text-align: center;\n    }\n    .left-text{\n        text-align: left;\n    }\n    .wrapper {\n        height: 100%;\n        width: 100%;\n        position: relative;\n    }\n    .main-text {\n        color: ${(props: IGlobalStyle) => props.theme.text};\n    }\n    .sub-text {\n        color: ${(props: IGlobalStyle) => props.theme.subText};\n    }\n    .flex {\n        display: flex;\n        align-items: center;\n    }\n    .icon {\n        position: relative;\n         > img {\n            position: absolute;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            top: 0;\n         }\n    }\n    .icon-abs {\n        position: absolute;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        top: 0;\n    }\n    .icon {\n        margin-left: 5px;\n    }\n`;\n","export * from './Token';\nexport * from './Token.actions';\nexport * from './Token.constant';\nexport * from './Token.interface';\nexport * from './Token.reducer';\nexport * from './Token.selector';\nexport { default as withAllListToken } from './Token.enhanceAllList';\nexport { default as ListToken } from './Token.list';\nexport { default as ListAllToken } from './Token.allList';\nexport { default as TokenBasic } from './Token.basic';\nexport { default as Token } from './Token';\n","export { default } from './Configs';\nexport * from './Configs.actions';\nexport * from './Configs.constant';\nexport * from './Configs.interface';\nexport * from './Configs.reducer';\nexport * from './Configs.selector';\nexport * from './Configs.route';\n","export const ACTION_FETCHING_FEE = '[send] Fetching fee';\nexport const ACTION_FETCHED_FEE = '[send] Fetched fee';\nexport const ACTION_FETCH_FAIL_FEE = '[send] Fetch fail fee';\nexport const ACTION_ADD_FEE_TYPE = '[send] Add fee type';\nexport const ACTION_CHANGE_FEE_TYPE = '[send] Change fee type';\nexport const ACTION_FETCHED_PTOKEN_FEE = '[send] Fetched pToken fee';\nexport const ACTION_INIT = '[send] Init data';\nexport const ACTION_INIT_FETCHED = '[send] Fetched init data';\nexport const ACTION_FETCHED_MIN_PTOKEN_FEE = '[send] Fetched min pToken fee';\nexport const ACTION_CHANGE_FEE = '[send] Change fee';\nexport const ACTION_FETCHED_MAX_FEE_PRV = '[send] Fetched max fee prv';\nexport const ACTION_FETCHED_MAX_FEE_PTOKEN = '[send] Fetched max fee pToken';\nexport const ACTION_USE_FEE_MAX = '[send] Use fee max';\nexport const ACTION_FETCHED_VALID_ADDR = '[send] Fetched valid address';\nexport const ACTION_FETCHED_USER_FEES = '[send] Fetched user fees';\nexport const ACTION_FETCHING_USER_FEES = '[send] Fetching user fees';\nexport const ACTION_FETCH_FAIL_USER_FEES = '[send] Fetch fail user fees';\nexport const ACTION_TOGGLE_FAST_FEE = '[send] Toggle fast fee';\nexport const ACTION_REMOVE_FEE_TYPE = '[send] Remove fee type';\nexport const FORM_CONFIGS = {\n    formName: 'form-send',\n    amount: 'amount',\n    toAddress: 'toAddress',\n    fee: 'fee',\n    memo: 'memo',\n};\n","import _ from 'lodash';\n\nexport const MAINNET_FULLNODE = 'https://lb-fullnode.incognito.org/fullnode';\nexport const TESTNET_FULLNODE = 'https://testnet.incognito.org/fullnode';\nexport const TESTNET1_FULLNODE = 'http://51.83.36.184:20002/fullnode';\n\nlet cachedList: any = null;\n\nconst TEST_NODE_SERVER = {\n    id: 'testnode',\n    default: false,\n    address: 'http://51.161.117.88:6354',\n    username: '',\n    password: '',\n    name: 'Test Node',\n};\nconst MAINNET_SERVER = {\n    id: 'mainnet',\n    default: true,\n    address: MAINNET_FULLNODE,\n    username: '',\n    password: '',\n    name: 'Mainnet',\n};\nconst TESTNET_SERVER = {\n    id: 'testnet',\n    default: false,\n    address: TESTNET_FULLNODE,\n    username: '',\n    password: '',\n    name: 'Testnet',\n};\nconst LOCAL_SERVER = {\n    id: 'local',\n    default: false,\n    address: 'http://localhost:9334',\n    username: '',\n    password: '',\n    name: 'Local',\n};\nconst TEST_NET_1_SERVER = {\n    id: 'testnet1',\n    default: false,\n    address: TESTNET1_FULLNODE,\n    username: '',\n    password: '',\n    name: 'Testnet 1',\n};\nconst DEFAULT_LIST_SERVER = [LOCAL_SERVER, TESTNET_SERVER, TEST_NODE_SERVER, MAINNET_SERVER, TEST_NET_1_SERVER];\n\nexport const KEY = {\n    SERVER: '$servers',\n    DEFAULT_LIST_SERVER,\n};\n\nexport default class Server {\n    static get() {\n        if (cachedList) {\n            return Promise.resolve(cachedList);\n        }\n        const strData: string = localStorage.getItem(KEY.SERVER) || '';\n        cachedList = JSON.parse(strData) || [];\n        if (!cachedList || cachedList.length === 0) {\n            return DEFAULT_LIST_SERVER;\n        }\n        if (!cachedList.find((item: any) => item.id === TEST_NODE_SERVER.id)) {\n            cachedList.push(TEST_NODE_SERVER);\n        }\n        if (!cachedList.find((item: any) => item.id === TEST_NET_1_SERVER.id)) {\n            cachedList.push(TEST_NET_1_SERVER);\n        }\n        if (cachedList.find((item: any) => item.id === TEST_NODE_SERVER.id && !item.address.includes('http'))) {\n            const item = cachedList.find((i: any) => i.id === TEST_NODE_SERVER.id);\n            item.address = TEST_NODE_SERVER.address;\n        }\n\n        localStorage.setItem(KEY.SERVER, JSON.stringify(cachedList));\n        return cachedList;\n    }\n\n    static getDefault() {\n        return Server.get().then((result: any) => {\n            if (result && result.length) {\n                for (const s of result) {\n                    if (s.default) {\n                        return s;\n                    }\n                }\n            }\n\n            this.setDefault(MAINNET_SERVER);\n            return MAINNET_SERVER;\n        });\n    }\n\n    static async getDefaultIfNullGettingDefaulList() {\n        const list = (await Server.get().catch()) || KEY.DEFAULT_LIST_SERVER;\n        return list?.find((i: any) => i.default);\n    }\n\n    static async setDefault(defaultServer: any) {\n        try {\n            const servers = await Server.get();\n            const newServers = servers.map((server: any) => {\n                if (defaultServer.id === server.id) {\n                    return {\n                        ...defaultServer,\n                        default: true,\n                    };\n                }\n                return { ...server, default: false };\n            });\n            Server.set(newServers);\n\n            return newServers;\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    static isMainnet(network: any) {\n        return _.isEqual(network?.id, 'mainnet');\n    }\n\n    static setDefaultList() {\n        try {\n            cachedList = KEY.DEFAULT_LIST_SERVER;\n            const strData = JSON.stringify(cachedList);\n            return localStorage.setItem(KEY.SERVER, strData);\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    static set(servers: any) {\n        cachedList = servers;\n        const strData = JSON.stringify(cachedList);\n        return localStorage.setItem(KEY.SERVER, strData);\n    }\n}\n","import { ENVS } from 'src/configs';\nimport { MAINNET_FULLNODE, TESTNET_FULLNODE } from './server';\n\nexport const MAIN_WEBSITE = 'https://we.incognito.org';\nconst isMainnet = false;\nconst homeConfig = ENVS.REACT_APP_HOME_CONFIG;\nconst API_BASE_URL = isMainnet ? 'https://api-service.incognito.org' : 'https://staging-api-service.incognito.org';\nconst API_BASE_URL2 = isMainnet\n    ? 'https://device-network.incognito.org/'\n    : 'https://device-network-staging.incognito.org/';\nconst ETHERSCAN_URL = isMainnet ? 'https://etherscan.io' : 'https://kovan.etherscan.io';\nconst DEX_BINANCE_TOKEN_URL = isMainnet\n    ? 'https://dex.binance.org/api/v1/tokens'\n    : 'https://testnet-dex.binance.org/api/v1/tokens';\nconst BINANCE_EXPLORER_URL = isMainnet ? 'https://explorer.binance.org' : 'https://testnet-explorer.binance.org';\nconst INCOGNITO_TOKEN_ICON_URL = isMainnet\n    ? 'https://storage.googleapis.com/incognito/wallet/tokens/icons'\n    : 'https://storage.googleapis.com/incognito/wallet-testnet/tokens/icons';\nconst BUILD_VERSION = ENVS.REACT_APP_VERSION;\nconst EXPLORER_CONSTANT_CHAIN_URL = isMainnet ? 'https://mainnet.incognito.org' : 'https://testnet.incognito.org';\nconst MASTER_NODE_ADDRESS = isMainnet ? MAINNET_FULLNODE : TESTNET_FULLNODE;\nconst NODE_URL = 'https://node.incognito.org/node.html';\nconst USDT_TOKEN_ID = isMainnet\n    ? '716fd1009e2a1669caacc36891e707bfdf02590f96ebd897548e8963c95ebac0'\n    : '4946b16a08a9d4afbdf416edf52ef15073db0fc4a63e78eb9de80f94f6c0852a';\nconst TRACK_LOG_URL = 'https://device-network.incognito.org';\n\nconst ETH_TOKEN_ID = isMainnet\n    ? 'ffd8d42dc40a8d166ea4848baf8b5f6e912ad79875f4373070b59392b1756c8f'\n    : 'ffd8d42dc40a8d166ea4848baf8b5f6e9fe0e9c30d60062eb7d44a8df9e00854';\n\nconst CRYPTO_ICON_URL = 'https://s3.amazonaws.com/incognito-org/wallet/cryptocurrency-icons/32@2x/color';\n\nconst HOME_CONFIG_DATA =\n    homeConfig !== 'staging'\n        ? 'https://api-data.incognito.org/v2/home-configs'\n        : 'https://api-data-staging.incognito.org/v2/home-configs';\n\nconst HOME_CONFIG_EVENT = () => {\n    const isStaging = homeConfig !== 'staging';\n    const prefix = 'https://';\n    const content = `${isStaging ? 'hunt' : 'hunt-staging'}.incognito.org`;\n    return {\n        title: content,\n        url: prefix + content,\n    };\n};\n\nconst APP_VERSION = isMainnet\n    ? `https://api-service.incognito.org/system/last-version`\n    : `https://staging-api-service.incognito.org/system/last-version`;\n\nconst CONSTANT_CONFIGS = {\n    CRYPTO_ICON_URL,\n    INCOGNITO_TOKEN_ICON_URL,\n    API_BASE_URL,\n    REACT_APP_PASSWORD_SECRET_KEY: ENVS.REACT_APP_PASSWORD_SECRET_KEY,\n    REACT_APP_PASSPHRASE_WALLET_DEFAULT: ENVS.REACT_APP_PASSPHRASE_WALLET_DEFAULT,\n    EXPLORER_CONSTANT_CHAIN_URL,\n    MASTER_NODE_ADDRESS,\n    DEX_BINANCE_TOKEN_URL,\n    BUILD_VERSION,\n    ETHERSCAN_URL,\n    BINANCE_EXPLORER_URL,\n    USDT_TOKEN_ID,\n    NODE_URL,\n    TRACK_LOG_URL,\n    MAIN_WEBSITE,\n    ETH_TOKEN_ID,\n    MAINNET_FULLNODE,\n    TESTNET_FULLNODE,\n    HOME_CONFIG_DATA,\n    API_BASE_URL2,\n    APP_VERSION,\n    HOME_CONFIG_EVENT,\n};\n\nexport default CONSTANT_CONFIGS;\n","const prefixNetwork = 'testnet';\n\nconst isMainnet = false;\n\ninterface IKeys {\n    PASSPHRASE_KEY: string;\n    DEFAULT_ACCOUNT_NAME: string;\n    DISPLAYED_WIZARD: string;\n    GAME_PLAYER_ID: string;\n    USER: string;\n    LIST_DEVICE: string;\n    LIST_TOKEN: string;\n    USER_UNFOLLOWING_TOKEN_ID_LIST: string;\n    DEX: string;\n    DEX_HISTORY: string;\n    UNISWAP_HISTORY: string;\n    SEEN_DEPOSIT_GUIDE: string;\n    PIN: string;\n    IS_CHECK_FOLLOWED_TOKEN: string;\n    IS_BACKEDUP_ACCOUNT: string;\n    REDUX_STATE_RECEIVERS_IN_NETWORK: string;\n    REDUX_STATE_RECEIVERS_OUT_NETWORK: string;\n    WITHDRAWAL_DATA: string;\n    SUBSCRIBE_TOPIC_KEY: string;\n    BACKUP_STAKE_KEY: string;\n    SCREEN_STAKE_GUIDE: string;\n    WEBVIEW: string;\n    PROVIDE_TXS: string;\n    SHOW_WIZARD: string;\n    IS_FOLLOW_DEFAULT_PTOKENS: string;\n    DETECT_NETWORK_NAME: string;\n    DEV_TEST_MODE_CENTRALIZED: string;\n    DEV_TEST_MODE_DECENTRALIZED: string;\n    UNSHIELD_DATA_DECENTRALIZED: string;\n    UNSHIELD_DATA_CENTRALIZED: string;\n    DEV_TEST_TOGGLE_UTXOS: string;\n    UTXOS_DATA: string;\n    DEV_TEST_TOGGLE_HISTORY_DETAIL: string;\n    DEV_TEST_TOGGLE_LOG_APP: string;\n}\n\ninterface IKeysTestnet {\n    PASSPHRASE_KEY: string;\n    DEFAULT_ACCOUNT_NAME: string;\n    DISPLAYED_WIZARD: string;\n    GAME_PLAYER_ID: string;\n    USER: string;\n    LIST_DEVICE: string;\n    LIST_TOKEN: string;\n    USER_UNFOLLOWING_TOKEN_ID_LIST: string;\n    DEX: string;\n    UNISWAP_HISTORY: string;\n    DEX_HISTORY: string;\n    SEEN_DEPOSIT_GUIDE: string;\n    PIN: string;\n    IS_CHECK_FOLLOWED_TOKEN: string;\n    IS_BACKEDUP_ACCOUNT: string;\n    REDUX_STATE_RECEIVERS_IN_NETWORK: string;\n    REDUX_STATE_RECEIVERS_OUT_NETWORK: string;\n    WITHDRAWAL_DATA: string;\n    SUBSCRIBE_TOPIC_KEY: string;\n    BACKUP_STAKE_KEY: string;\n    SCREEN_STAKE_GUIDE: string;\n    PROVIDE_TXS: string;\n    SHOW_WIZARD: string;\n    IS_FOLLOW_DEFAULT_PTOKENS: string;\n    DETECT_NETWORK_NAME: string;\n    DEV_TEST_MODE_CENTRALIZED: string;\n    DEV_TEST_MODE_DECENTRALIZED: string;\n    UNSHIELD_DATA_DECENTRALIZED: string;\n    UNSHIELD_DATA_CENTRALIZED: string;\n    DEV_TEST_TOGGLE_UTXOS: string;\n    UTXOS_DATA: string;\n    DEV_TEST_TOGGLE_HISTORY_DETAIL: string;\n    DEV_TEST_TOGGLE_LOG_APP: string;\n}\n\nconst KEYS: IKeys = {\n    PASSPHRASE_KEY: '$password',\n    DEFAULT_ACCOUNT_NAME: '$DEFAULT_ACCOUNT_NAME',\n    DISPLAYED_WIZARD: '$DISPLAYED_WIZARD',\n    GAME_PLAYER_ID: '$GAME_PLAYER_ID',\n    USER: 'USER_OBJECT_KEY',\n    LIST_DEVICE: 'PRODUCT_LIST_KEY',\n    LIST_TOKEN: 'LIST_TOKEN',\n    USER_UNFOLLOWING_TOKEN_ID_LIST: '$USER_UNFOLLOWING_TOKEN_ID_LIST',\n    DEX: '$DEX',\n    DEX_HISTORY: '$DEX_HISTORY',\n    UNISWAP_HISTORY: '$UNISWAP_HISTORY',\n    SEEN_DEPOSIT_GUIDE: '$SEEN_DEPOSIT_GUIDE',\n    PIN: '$PIN',\n    IS_CHECK_FOLLOWED_TOKEN: '$IS_CHECK_FOLLOWED_TOKEN',\n    IS_BACKEDUP_ACCOUNT: '$IS_BACKEDUP_ACCOUNT',\n    REDUX_STATE_RECEIVERS_IN_NETWORK: '$REDUX_STATE_RECEIVERS_IN_NETWORK',\n    REDUX_STATE_RECEIVERS_OUT_NETWORK: '$REDUX_STATE_RECEIVERS_OUT_NETWORK',\n    WITHDRAWAL_DATA: '$WITHDRAWAL_DATA',\n    SUBSCRIBE_TOPIC_KEY: 'all-production',\n    BACKUP_STAKE_KEY: '$BACKUP_STAKE_KEY',\n    SCREEN_STAKE_GUIDE: '$SCREEN_STAKE_GUIDE',\n    WEBVIEW: '$WEBVIEW',\n    PROVIDE_TXS: '$PROVIDE_TXS',\n    SHOW_WIZARD: '$SHOW_WIZARD',\n    IS_FOLLOW_DEFAULT_PTOKENS: '$IS_FOLLOW_DEFAULT_PTOKENS',\n    DETECT_NETWORK_NAME: '$DETECT_NETWORK_NAME',\n    DEV_TEST_MODE_CENTRALIZED: '$DEV_TEST_MODE_CENTRALIZED',\n    DEV_TEST_MODE_DECENTRALIZED: '$DEV_TEST_MODE_DECENTRALIZED',\n    UNSHIELD_DATA_DECENTRALIZED: '$UNSHIELD_DATA_DECENTRALIZED',\n    UNSHIELD_DATA_CENTRALIZED: '$UNSHIELD_DATA_CENTRALIZED',\n    DEV_TEST_TOGGLE_UTXOS: '$DEV_TEST_TOGGLE_UTXOS',\n    UTXOS_DATA: '$UTXOS_DATA',\n    DEV_TEST_TOGGLE_HISTORY_DETAIL: '$DEV_TEST_TOGGLE_HISTORY_DETAIL',\n    DEV_TEST_TOGGLE_LOG_APP: '$DEV_TEST_TOGGLE_LOG_APP',\n};\n\nconst KEYS_TESTNET: IKeysTestnet = {\n    PASSPHRASE_KEY: `${prefixNetwork}_$password`,\n    DEFAULT_ACCOUNT_NAME: `${prefixNetwork}_$DEFAULT_ACCOUNT_NAME`,\n    DISPLAYED_WIZARD: '$DISPLAYED_WIZARD',\n    GAME_PLAYER_ID: `${prefixNetwork}_$GAME_PLAYER_ID`,\n    USER: `${prefixNetwork}_USER_OBJECT_KEY`,\n    LIST_DEVICE: `${prefixNetwork}_PRODUCT_LIST_KEY`,\n    LIST_TOKEN: `${prefixNetwork}_LIST_TOKEN`,\n    USER_UNFOLLOWING_TOKEN_ID_LIST: `${prefixNetwork}_$USER_UNFOLLOWING_TOKEN_ID_LIST`,\n    DEX: `${prefixNetwork}_DEX`,\n    UNISWAP_HISTORY: `${prefixNetwork}_UNISWAP_HISTORY`,\n    DEX_HISTORY: `${prefixNetwork}_$DEX_HISTORY`,\n    SEEN_DEPOSIT_GUIDE: `${prefixNetwork}_$SEEN_DEPOSIT_GUIDE`,\n    PIN: `${prefixNetwork}_$PIN`,\n    IS_CHECK_FOLLOWED_TOKEN: `${prefixNetwork}_$IS_CHECK_FOLLOWED_TOKEN`,\n    IS_BACKEDUP_ACCOUNT: `${prefixNetwork}_$IS_BACKEDUP_ACCOUNT`,\n    REDUX_STATE_RECEIVERS_IN_NETWORK: `${prefixNetwork}_$REDUX_STATE_RECEIVERS_IN_NETWORK`,\n    REDUX_STATE_RECEIVERS_OUT_NETWORK: `${prefixNetwork}_$REDUX_STATE_RECEIVERS_OUT_NETWORK`,\n    WITHDRAWAL_DATA: `${prefixNetwork}_$WITHDRAWAL_DATA`,\n    SUBSCRIBE_TOPIC_KEY: 'all-staging',\n    BACKUP_STAKE_KEY: `${prefixNetwork}_$BACKUP_STAKE_KEY`,\n    SCREEN_STAKE_GUIDE: `${prefixNetwork}_$SCREEN_STAKE_GUIDE`,\n    PROVIDE_TXS: `${prefixNetwork}_$PROVIDE_TXS`,\n    SHOW_WIZARD: `${prefixNetwork}_$SHOW_WIZARD`,\n    IS_FOLLOW_DEFAULT_PTOKENS: `${prefixNetwork}_$IS_FOLLOW_DEFAULT_PTOKENS`,\n    DETECT_NETWORK_NAME: `${prefixNetwork}_$DETECT_NETWORK_NAME`,\n    DEV_TEST_MODE_CENTRALIZED: `${prefixNetwork}_$DEV_TEST_MODE_CENTRALIZED`,\n    DEV_TEST_MODE_DECENTRALIZED: `${prefixNetwork}_$DEV_TEST_MODE_DECENTRALIZED`,\n    UNSHIELD_DATA_DECENTRALIZED: `${prefixNetwork}_$UNSHIELD_DATA_DECENTRALIZED`,\n    UNSHIELD_DATA_CENTRALIZED: `${prefixNetwork}_$UNSHIELD_DATA_CENTRALIZED`,\n    DEV_TEST_TOGGLE_UTXOS: `${prefixNetwork}_$DEV_TEST_TOGGLE_UTXOS`,\n    UTXOS_DATA: `${prefixNetwork}_$UTXOS_DATA`,\n    DEV_TEST_TOGGLE_HISTORY_DETAIL: `${prefixNetwork}_DEV_TEST_TOGGLE_HISTORY_DETAIL`,\n    DEV_TEST_TOGGLE_LOG_APP: `${prefixNetwork}_$DEV_TEST_TOGGLE_LOG_APP`,\n};\n\nexport default isMainnet ? KEYS : KEYS_TESTNET;\n","const CRYPTO_SYMBOL = {\n    PRV: 'PRV',\n    BTC: 'BTC',\n    ETH: 'ETH',\n    BNB: 'BNB',\n    USD: 'USD',\n    KCS: 'KCS',\n    TOMO: 'TOMO',\n    NEO: 'NEO',\n    XMR: 'XMR',\n    ZEN: 'ZEN',\n    ZCL: 'ZCL',\n    ZEC: 'ZEC',\n    VOT: 'VOT',\n    VTC: 'VTC',\n    SNG: 'SNG',\n    XRP: 'XRP',\n    XRB: 'XRB',\n    QTUM: 'QTUM',\n    PTS: 'PTS',\n    PPC: 'PPC',\n    GAS: 'GAS',\n    NMC: 'NMC',\n    MEC: 'MEC',\n    LTC: 'LTC',\n    KMD: 'KMD',\n    HUSH: 'HUSH',\n    GRLC: 'GRLC',\n    FRC: 'FRC',\n    DOGE: 'DOGE',\n    DGB: 'DGB',\n    DCR: 'DCR',\n    CLO: 'CLO',\n    BTG: 'BTG',\n    BCH: 'BCH',\n    BIO: 'BIO',\n    BVC: 'BVC',\n    BKX: 'BKX',\n    AUR: 'AUR',\n    ZIL: 'ZIL',\n};\n\nconst CRYPTO_SYMBOL_UNSHIELD = {\n    ETH: 'ETH',\n    TOMO: 'TOMO',\n    BTC: 'BTC',\n    NEO: 'NEO',\n    ZEN: 'ZEN',\n    ZCL: 'ZCL',\n    ZEC: 'ZEC',\n    VOT: 'VOT',\n    VTC: 'VTC',\n    SNG: 'SNG',\n    XRP: 'XRP',\n    XRB: 'XRB',\n    QTUM: 'QTUM',\n    PTS: 'PTS',\n    PPC: 'PPC',\n    GAS: 'GAS',\n    NMC: 'NMC',\n    MEC: 'MEC',\n    LTC: 'LTC',\n    KMD: 'KMD',\n    HUSH: 'HUSH',\n    GRLC: 'GRLC',\n    FRC: 'FRC',\n    DOGE: 'DOGE',\n    DGB: 'DGB',\n    DCR: 'DCR',\n    CLO: 'CLO',\n    BTG: 'BTG',\n    BCH: 'BCH',\n    BIO: 'BIO',\n    BVC: 'BVC',\n    BKX: 'BKX',\n    AUR: 'AUR',\n};\n\nconst TOKEN_SYMBOL = {\n    pETH: 'pETH',\n    pBTC: 'pBTC',\n    pBNB: 'pBNB',\n    pUSD: 'pUSD',\n    pKCS: 'pKCS',\n};\n\nconst TOKEN_ID = {\n    pETH: 'ffd8d42dc40a8d166ea4848baf8b5f6e912ad79875f4373070b59392b1756c8f',\n    pBTC: 'b832e5d3b1f01a4f0623f7fe91d6673461e1f5d37d91fe78c5c2e6183ff39696',\n    pBNB: 'b2655152784e8639fa19521a7035f331eea1f1e911b2f3200a507ebb4554387b',\n    pNEO: '86c45a9fdddc5546e3b4f09dba211b836aefc5d08ed22e7d33cff7f9b8b39c10',\n};\n\nconst AMOUNT_MAX_FRACTION_DIGITS = 4;\n\nconst TRACK_LOG_EVENT = {\n    CLICK_STAKING: 'click_staking',\n};\n\nconst TRACK_LOG_EVENT_STATUS = {\n    BEGIN: 'INIT',\n    DOING: 'DOING',\n    PASS: 'PASS',\n    FAIL: 'FAIL',\n};\n\nconst YEAR_SECONDS = 365 * 24 * 60 * 60;\n\nconst PRV_SPECIAL_SYMBOL = 'ℙ';\n\nconst NETWORK_NAME = {\n    BINANCE: 'Binance',\n    ETHEREUM: 'Ethereum',\n    TOMO: 'TomoChain',\n};\n\nconst COMMON_CONSTANTS = {\n    // old varibles, maybe remove later\n    STAKING_TYPES: {\n        SHARD: 0,\n        BEACON: 1,\n    },\n    STAKING_AMOUNT: 200,\n    STAKING_MIN_FEE: 0.01,\n    STAKING_ADDRESS: '1NHp2EKw7ALdXUzBfoRJvKrBBM9nkejyDcHVPvUjDcWRyG22dHHyiBKQGL1c',\n    DEFRAGMENT_DEFAULT_AMOUNT: 1,\n    DEFRAGMENT_MIN_FEE: 0.01,\n    DEFRAGMENT_SET_DEFAULT_PRIVACY: true,\n\n    AMOUNT_MAX_FRACTION_DIGITS,\n\n    // for new app\n    CRYPTO_SYMBOL,\n    CRYPTO_SYMBOL_UNSHIELD,\n    TOKEN_SYMBOL,\n    TOKEN_ID,\n    // PRV_TOKEN_ID:\n    //   '0000000000000000000000000000000000000000000000000000000000000004',\n    DECIMALS: {\n        MAIN_CRYPTO_CURRENCY: 9,\n        [CRYPTO_SYMBOL.PRV]: 9,\n    },\n    TOKEN_TX_TYPE: {\n        INIT: 0,\n        SEND: 1,\n    },\n    ADDRESS_TYPE: {\n        DEPOSIT: 1,\n        WITHDRAW: 2,\n    },\n    PRIVATE_TOKEN_CURRENCY_TYPE: {\n        ETH: 1,\n        BTC: 2,\n        ERC20: 3,\n        BNB: 4,\n        BNB_BEP2: 5,\n        USD: 6,\n    },\n    PRIVATE_TOKEN_TYPE: {\n        COIN: 0,\n        TOKEN: 1, // including ERC20, BEP1, BEP2,...\n    },\n    HISTORY: {\n        TYPE: {\n            SHIELD: 1, // same with PRIVATE_TOKEN_HISTORY_ADDRESS_TYPE.DEPOSIT\n            UNSHIELD: 2, // same with PRIVATE_TOKEN_HISTORY_ADDRESS_TYPE.WITHDRAW\n            SEND: 3, // custom\n            RECEIVE: 4, // custom\n        },\n        STATUS_TEXT: {\n            SUCCESS: 'SUCCESS',\n            FAILED: 'FAILED',\n            PENDING: 'PENDING',\n            EXPIRED: 'EXPIRED',\n        },\n        META_DATA_TYPE: {\n            44: 'Node withdraw',\n            63: 'Stake',\n            90: 'Add liquidity',\n            93: 'Remove liquidity',\n            27: 'Unshield',\n            127: 'Unstake',\n            240: 'Unshield',\n        },\n        STATUS_CODE: {\n            PENDING: 0,\n        },\n        // shield decentralized\n        STATUS_CODE_SHIELD_DECENTRALIZED: {\n            PENDING: 0,\n            PROCESSING: [1, 2, 3, 4, 5],\n            COMPLETE: 7,\n            TIMED_OUT: 14,\n            RETRYING: 6,\n        },\n        // shield centralized\n        STATUS_CODE_SHIELD_CENTRALIZED: {\n            PENDING: 0,\n            PROCESSING: [1, 2],\n            COMPLETE: [3, 5],\n            TIMED_OUT: [14, 16],\n        },\n        // unshield decentralized\n        STATUS_CODE_UNSHIELD_DECENTRALIZED: {\n            PROCESSING: [8, 11],\n            FAILED: [9, 15],\n            COMPLETE: 12,\n            RETRYING: [10, 13],\n            TIMED_OUT: 14,\n        },\n        // unshield centralized\n        STATUS_CODE_UNSHIELD_CENTRALIZED: {\n            PENDING: 0,\n            PROCESSING: [6, 7, 8, 9],\n            COMPLETE: 10,\n            RETRYING: 15,\n            TIMED_OUT: 16,\n        },\n        TYPE_HISTORY_RECEIVE: {\n            41: 'Unstake Node',\n            45: 'Node withdraw',\n            81: 'Shield', // decentralized\n            94: 'Remove liquidity',\n            95: 'Add liquidity',\n            96: 'Shield Amount',\n            25: 'Shield', // centralized\n            92: 'Trade',\n        },\n    },\n    TRACK_LOG_EVENT,\n    TRACK_LOG_EVENT_STATUS,\n    PRV: {\n        id: '0000000000000000000000000000000000000000000000000000000000000004',\n        name: 'PRV',\n        symbol: 'PRV',\n        pDecimals: 9,\n    },\n    USDT: {\n        id: '716fd1009e2a1669caacc36891e707bfdf02590f96ebd897548e8963c95ebac0',\n        pDecimals: 9,\n        name: 'Tether',\n        symbol: 'pUSDT',\n    },\n    YEAR_SECONDS,\n    PRV_SPECIAL_SYMBOL,\n    NETWORK_NAME,\n};\n\nexport default COMMON_CONSTANTS;\n","const POPULAR_COIN = {\n    BTC: 'b832e5d3b1f01a4f0623f7fe91d6673461e1f5d37d91fe78c5c2e6183ff39696',\n    ETH: 'ffd8d42dc40a8d166ea4848baf8b5f6e912ad79875f4373070b59392b1756c8f',\n    USDT: '716fd1009e2a1669caacc36891e707bfdf02590f96ebd897548e8963c95ebac0',\n    BNB: 'b2655152784e8639fa19521a7035f331eea1f1e911b2f3200a507ebb4554387b',\n    XMR: 'c01e7dc1d1aba995c19b257412340b057f8ad1482ccb6a9bb0adce61afbf05d4',\n};\n\nconst POPULAR_COINS_SYMBOL = ['BTC', 'ETH', 'USDT', 'BNB', 'XMR'];\n\nconst POPULAR_COIN_IDS = [POPULAR_COIN.XMR, POPULAR_COIN.BNB, POPULAR_COIN.USDT, POPULAR_COIN.ETH, POPULAR_COIN.BTC];\n\nconst PRV = {\n    id: '0000000000000000000000000000000000000000000000000000000000000004',\n    name: 'Privacy',\n    displayName: 'Privacy',\n    symbol: 'PRV',\n    pDecimals: 9,\n    hasIcon: true,\n    originalSymbol: 'PRV',\n    isVerified: true,\n};\n\nconst CRYPTO_SYMBOL = {\n    PRV: 'PRV',\n    BTC: 'BTC',\n    ETH: 'ETH',\n    BNB: 'BNB',\n    USD: 'USD',\n    KCS: 'KCS',\n    TOMO: 'TOMO',\n    NEO: 'NEO',\n    XMR: 'XMR',\n    ZEN: 'ZEN',\n    ZCL: 'ZCL',\n    ZEC: 'ZEC',\n    VOT: 'VOT',\n    VTC: 'VTC',\n    SNG: 'SNG',\n    XRP: 'XRP',\n    XRB: 'XRB',\n    QTUM: 'QTUM',\n    PTS: 'PTS',\n    PPC: 'PPC',\n    GAS: 'GAS',\n    NMC: 'NMC',\n    MEC: 'MEC',\n    LTC: 'LTC',\n    KMD: 'KMD',\n    HUSH: 'HUSH',\n    GRLC: 'GRLC',\n    FRC: 'FRC',\n    DOGE: 'DOGE',\n    DGB: 'DGB',\n    DCR: 'DCR',\n    CLO: 'CLO',\n    BTG: 'BTG',\n    BCH: 'BCH',\n    BIO: 'BIO',\n    BVC: 'BVC',\n    BKX: 'BKX',\n    AUR: 'AUR',\n    ZIL: 'ZIL',\n    USDT: 'USDT',\n};\n\nconst NETWORK_NAME = {\n    BINANCE: 'Binance',\n    ETHEREUM: 'Ethereum',\n    TOMO: 'TomoChain',\n};\n\nconst PRIVATE_TOKEN_TYPE = {\n    COIN: 0,\n    TOKEN: 1, // including ERC20, BEP1, BEP2,...\n};\n\nconst PRIVATE_TOKEN_CURRENCY_TYPE = {\n    ETH: 1,\n    BTC: 2,\n    ERC20: 3,\n    BNB: 4,\n    BNB_BEP2: 5,\n    USD: 6,\n};\n\nconst COIN_CONSTANT = {\n    POPULAR_COIN,\n    POPULAR_COIN_IDS,\n    PRV,\n    PRV_ID: PRV.id,\n    CRYPTO_SYMBOL,\n    NETWORK_NAME,\n    PRIVATE_TOKEN_TYPE,\n    PRIVATE_TOKEN_CURRENCY_TYPE,\n    POPULAR_COINS_SYMBOL,\n};\n\nexport default COIN_CONSTANT;\n","const COMMUNITY_URL = 'https://we.incognito.org';\nconst VALIDATOR_LIFECYCLE = `${COMMUNITY_URL}/t/the-validator-lifecycle/5797`;\nconst UNSTAKING_PROCESS = `${COMMUNITY_URL}/t/the-waiting-time-of-unstaking-process/933`;\n\nconst URL_CONSTANT = {\n    COMMUNITY_URL,\n    VALIDATOR_LIFECYCLE,\n    UNSTAKING_PROCESS,\n};\n\nexport default URL_CONSTANT;\n","import isEmpty from 'lodash/isEmpty';\n\ninterface IENVS {\n    REACT_APP_MODE: string;\n    REACT_APP_IS_DEV: boolean;\n    REACT_APP_DOMAIN_URL: string;\n    REACT_APP_PASSWORD_SECRET_KEY: string;\n    REACT_APP_PASSPHRASE_WALLET_DEFAULT: string;\n    REACT_APP_HOME_CONFIG: string;\n    REACT_APP_VERSION: string;\n    REACT_APP_WALLET_NAME: string;\n}\n\nconst defaultEnvs = {\n    REACT_APP_MODE: 'development',\n    REACT_APP_IS_DEV: 'true',\n    REACT_APP_DOMAIN_URL: 'http://192.168.0.124:3000',\n    REACT_APP_PASSPHRASE_WALLET_DEFAULT: '',\n    REACT_APP_PASSWORD_SECRET_KEY: '',\n    REACT_APP_HOME_CONFIG: 'staging',\n    REACT_APP_VERSION: '1.0',\n    REACT_APP_WALLET_NAME: '',\n};\n\nexport const getEnvs = () => {\n    let envs: any = {};\n    try {\n        const PROCCESS_ENV = process.env;\n        if (!isEmpty(PROCCESS_ENV)) {\n            Object.keys(PROCCESS_ENV).map((key: string) => {\n                envs[key] = PROCCESS_ENV[key];\n                return key;\n            });\n        }\n    } catch (error) {\n        console.debug(error);\n    } finally {\n        envs = isEmpty(envs) ? defaultEnvs : envs;\n    }\n    return envs;\n};\n\nexport const ENVS: IENVS = getEnvs();\n\nexport const isDev: boolean = ENVS.REACT_APP_MODE === 'development';\n","export { default } from './Account';\nexport * from './Account.actions';\nexport * from './Account.constant';\nexport * from './Account.interface';\nexport * from './Account.selector';\nexport * from './Account.useEffect';\nexport * from './Account.route';\n","export * from './Preload.reducer';\nexport * from './Preload.selector';\nexport * from './Preload.actions';\nexport * from './Preload.constant';\nexport { default as withPreload } from './Preload.enhance';\n","import React from 'react';\n\ninterface IProps {}\n\ninterface IState {\n    hasError: boolean;\n    error: any;\n}\n\nclass ErrorBoundary extends React.Component<IProps, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = { hasError: false, error: {} };\n    }\n\n    static getDerivedStateFromError = (error: any) => {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true, error };\n    };\n\n    componentDidCatch = (error: any, errorInfo: any) => {\n        // You can also log the error to an error reporting service\n        console.log(error, errorInfo);\n    };\n\n    render() {\n        const { hasError, error } = this.state;\n        const { children } = this.props;\n        if (hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong. {error?.message || JSON.stringify(error)}</h1>;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import BigNumber from 'bignumber.js';\nimport { getDecimalSeparator } from './separator';\n\nconst checkAmount = (amount: number) => {\n    if (!Number.isFinite(amount)) throw new Error('Can not format invalid amount');\n};\n\nconst replaceDecimals = ({ text, autoCorrect = false }: { text: string; autoCorrect?: boolean }) => {\n    let result = text;\n    const decimalSeparator = getDecimalSeparator();\n    if (typeof result !== 'string') {\n        return result;\n    }\n    if (decimalSeparator === ',' && !result?.includes?.('e+') && !result?.includes?.('e-')) {\n        result = result.replace(/\\./g, '_');\n        result = result.replace(/,/g, '.');\n        result = result.replace(/_/g, ',');\n    }\n    if (autoCorrect) {\n        result = result.replace(/,/g, '');\n    }\n    return result;\n};\n\ninterface IHunmanAmount {\n    originalAmount?: number;\n    decimals: number;\n}\n\nconst toHumanAmount = (payload: IHunmanAmount) => {\n    const { originalAmount = 0, decimals } = payload;\n    const amount = new BigNumber(originalAmount);\n    if (amount.isNaN()) {\n        return 0;\n    }\n    const indexNumber = new BigNumber(10).pow(decimals);\n    return amount.dividedBy(indexNumber).toNumber();\n};\n\nconst toOriginalAmount = ({\n    humanAmount,\n    decimals,\n    round = true,\n}: {\n    humanAmount: string;\n    decimals: number;\n    round?: boolean;\n}) => {\n    let amount = 0;\n    try {\n        const amountRepDecimals = replaceDecimals({\n            text: humanAmount,\n        });\n        const bnAmount = new BigNumber(amountRepDecimals);\n        if (bnAmount.isNaN()) {\n            return 0;\n        }\n        const indexNumber = new BigNumber(10).pow(decimals || 0).toNumber();\n        amount = bnAmount.multipliedBy(new BigNumber(indexNumber)).toNumber();\n        if (round) {\n            amount = Math.floor(amount);\n        }\n    } catch (error) {\n        amount = 0;\n        throw error;\n    }\n    return amount;\n};\n\nconst toNumber = ({ text, autoCorrect = false }: { text: string; autoCorrect?: boolean }) => {\n    const number = replaceDecimals({\n        text,\n        autoCorrect,\n    });\n    return new BigNumber(number).toNumber();\n};\n\nconst toString = ({ text, autoCorrect = false }: { text: string; autoCorrect?: boolean }) => {\n    const number = replaceDecimals({\n        text,\n        autoCorrect,\n    });\n    return new BigNumber(number).toString();\n};\n\nconst convert = {\n    checkAmount,\n    replaceDecimals,\n    toHumanAmount,\n    toOriginalAmount,\n    toNumber,\n    toString,\n};\n\nexport default convert;\n","export { default } from './Wallet.route';\nexport * from './Wallet.actions';\nexport * from './Wallet.constant';\nexport * from './Wallet.selector';\nexport * from './Wallet.route';\nexport * from './Wallet.interface';\n","import { createSelector } from 'reselect';\nimport { IRootState } from 'src/redux/interface';\nimport { selectedPrivacySelector } from 'src/module/Token';\nimport { getSendData } from './Send.utils';\n\nexport const sendSelector = createSelector(\n    (state: IRootState) => state.send,\n    (send) => send,\n);\n\nexport const sendDataSelector = createSelector(\n    sendSelector,\n    selectedPrivacySelector,\n    (state: IRootState) => state,\n    (send, selectedPrivacy, state) =>\n        getSendData({\n            send,\n            selectedPrivacy,\n            state,\n        }),\n);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport styled from 'styled-components';\n\nconst Styled = styled.div``;\n\ninterface IProps {}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: IProps & any) => {\n    return (\n        <Styled className=\"wrapper\">\n            <WrappedComponent {...props} />\n        </Styled>\n    );\n};\n\nexport default compose<IProps & any, any>(enhance);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport styled from 'styled-components';\n\nconst Styled = styled.div`\n    padding: 30px;\n`;\n\ninterface IProps {}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: IProps & any) => {\n    return (\n        <Styled className=\"wrapper\">\n            <WrappedComponent {...props} />\n        </Styled>\n    );\n};\n\nexport default compose<IProps & any, any>(enhance);\n","export const ACTION_FETCHED = `[account] Fetched data`;\nexport const ACTION_FETCHING_CREATE_ACCOUNT = `[account] Creating account`;\nexport const ACTION_FETCHED_CREATE_ACCOUNT = `[account] Created account`;\nexport const ACTION_FETCHING_IMPORT_ACCOUNT = `[account] Importing account`;\nexport const ACTION_FETCHED_IMPORT_ACCOUNT = `[account] Imported account`;\nexport const ACTION_SELECT_ACCOUNT = `[account] Select account`;\nexport const ACTION_SET_LIST_ACCOUNT = `[account] Set list account`;\nexport const ACTION_SWITCH_ACCOUNT_FETCHING = `[account] Switching account`;\nexport const ACTION_SWITCH_ACCOUNT_FETCHED = `[account] Switched account`;\nexport const ACTION_GET_ACCOUNT_BALANCE_FETCHING = `[account] Get account balance fetching`;\nexport const ACTION_GET_ACCOUNT_BALANCE_FETCHED = `[account] Get account balance fetched`;\n","import memoize from 'lodash/memoize';\nimport isEmpty from 'lodash/isEmpty';\nimport { createSelector } from 'reselect';\nimport { COINS } from 'src/constants';\nimport { IRootState } from 'src/redux/interface';\nimport uniqBy from 'lodash/uniqBy';\nimport { preloadSelector } from 'src/module/Preload';\nimport { format } from 'src/utils';\nimport convert from 'src/utils/convert';\nimport { compact, reverse } from 'lodash';\nimport BigNumber from 'bignumber.js';\nimport { accountBalanceSelector, defaultAccountSelector } from 'src/module/Account/Account.selector';\nimport { AccountInstance } from 'incognito-js/build/web/browser';\nimport { getFormatAmountByUSD, getPrice } from './Token.utils';\nimport SelectedPrivacy from './Token.model';\nimport { ITokenReducer } from './Token.reducer';\nimport {\n    IFollowedToken,\n    IPCustomToken,\n    IPCustomTokenFromApi,\n    IPToken,\n    IPTokenFromApi,\n    ISelectedPrivacy,\n} from './Token.interface';\n\nexport const tokenSelector = createSelector(\n    (state: IRootState) => state.token,\n    (token: ITokenReducer) => token,\n);\n\nexport const pTokensSelector = createSelector(\n    tokenSelector,\n    (tokenState) =>\n        tokenState.pTokens.map((pToken: IPTokenFromApi) => {\n            const pairPrv = new BigNumber(pToken.CurrentPrvPool).isGreaterThan(new BigNumber(0));\n            const change = pairPrv ? pToken?.PercentChangePrv1h : pToken?.PercentChange1h;\n            const token: IPToken = {\n                id: pToken.ID,\n                tokenId: pToken.TokenID,\n                symbol: pToken.Symbol,\n                pSymbol: pToken.PSymbol,\n                decimals: pToken.Decimals,\n                pDecimals: pToken.PDecimals,\n                currencyType: pToken.CurrencyType,\n                type: pToken.Type,\n                name: pToken.Name,\n                contractId: pToken.ContractID,\n                verified: pToken.Verified,\n                pricePrv: pToken.PricePrv,\n                priceUsd: pToken.PriceUsd,\n                pairPrv,\n                change,\n            };\n            return token;\n        }) || [],\n);\n\nexport const pCustomTokensSelector = createSelector(\n    tokenSelector,\n    (tokenState) =>\n        tokenState.pCustomTokens.map((cToken: IPCustomTokenFromApi) => {\n            const token: IPCustomToken = {\n                id: cToken.ID,\n                tokenId: cToken.TokenID || '',\n                symbol: cToken.Symbol,\n                name: cToken.Name,\n                totalSupply: cToken?.Amount || 0,\n                verified: cToken.Verified,\n                image: cToken.Image,\n                ownerName: cToken.OwnerName,\n                ownerAddress: cToken.OwnerAddress,\n                ownerEmail: cToken.OwnerEmail,\n                ownerWebsite: cToken.OwnerWebsite,\n            };\n            return token;\n        }) || [],\n);\n\nexport const followedTokensIdsSelector = createSelector(\n    defaultAccountSelector,\n    (defaultAccount: AccountInstance) => (excludePRV = true) => {\n        if (defaultAccount?.privacyTokenIds instanceof Array) {\n            const privacyTokenIds = reverse([...defaultAccount.privacyTokenIds]);\n            return excludePRV ? privacyTokenIds : [COINS.PRV.id, ...privacyTokenIds];\n        }\n        return [];\n    },\n);\n\nexport const findPTokenBySymbolSelector = createSelector(pTokensSelector, (pTokens: IPToken[]) => (symbol: string) => {\n    const token = pTokens.find((t) => t.symbol === symbol);\n    return token?.tokenId;\n});\n\nexport const followedTokensSelect = createSelector(tokenSelector, (token) => token.followed || []);\nexport const popularCoinIdsSeletor = createSelector(preloadSelector, (preload) => {\n    const { mainnet } = preload.configs;\n    let result: { [symbol: string]: any } = {};\n    if (mainnet) {\n        result = {\n            BTC: 'b832e5d3b1f01a4f0623f7fe91d6673461e1f5d37d91fe78c5c2e6183ff39696',\n            ETH: 'ffd8d42dc40a8d166ea4848baf8b5f6e912ad79875f4373070b59392b1756c8f',\n            USDT: '716fd1009e2a1669caacc36891e707bfdf02590f96ebd897548e8963c95ebac0',\n            BNB: 'b2655152784e8639fa19521a7035f331eea1f1e911b2f3200a507ebb4554387b',\n            XMR: 'c01e7dc1d1aba995c19b257412340b057f8ad1482ccb6a9bb0adce61afbf05d4',\n        };\n    } else {\n        result = {\n            BTC: '4584d5e9b2fc0337dfb17f4b5bb025e5b82c38cfa4f54e8a3d4fcdd03954ff82',\n            ETH: 'ffd8d42dc40a8d166ea4848baf8b5f6e9fe0e9c30d60062eb7d44a8df9e00854',\n            USDT: '4946b16a08a9d4afbdf416edf52ef15073db0fc4a63e78eb9de80f94f6c0852a',\n            BNB: '9fca0a0947f4393994145ef50eecd2da2aa15da2483b310c2c0650301c59b17d',\n            XMR: 'c01e7dc1d1aba995c19b257412340b057f8ad1482ccb6a9bb0adce61afbf05d4',\n        };\n    }\n    return result;\n});\n\nexport const getPrivacyDataByTokenIDSelector = createSelector(\n    pCustomTokensSelector,\n    pTokensSelector,\n    followedTokensIdsSelector,\n    followedTokensSelect,\n    accountBalanceSelector,\n    popularCoinIdsSeletor,\n    (pCustomTokens, pTokens, followedTokensIds, followed, accountBalance, coins) =>\n        memoize((tokenID: string) => {\n            const followedIds = followedTokensIds();\n            const pTokenData = pTokens?.find((token: IPToken) => token?.tokenId === tokenID);\n            const pCustomTokenData = pCustomTokens?.find(\n                (token) => token?.tokenId === tokenID && token?.tokenId !== pTokenData?.tokenId,\n            );\n            if (!pCustomTokenData && !pTokenData && tokenID !== COINS.PRV.id) {\n                throw new Error(`Can not find coin with id ${tokenID}`);\n            }\n            const token = new SelectedPrivacy(pCustomTokenData, pTokenData);\n            const amount = token.isNativeToken\n                ? accountBalance\n                : followed.find((t: IFollowedToken) => t?.tokenId === tokenID)?.amount || 0;\n            const isFollowed = followedIds.some((tokenId: string) => tokenId === tokenID);\n            const tokenUSDT = pTokens.find((t) => t?.tokenId === coins.USDT);\n            const price = getPrice({ token, tokenUSDT });\n            const formatAmount = format.formatAmount({\n                originalAmount: amount,\n                decimals: token.pDecimals,\n            });\n            const formatPriceByUsd = getFormatAmountByUSD({\n                amount: 1,\n                priceUsd: price.priceUsd,\n                decimals: tokenUSDT?.pDecimals,\n            });\n            const formatBalanceByUsd = getFormatAmountByUSD({\n                amount: convert.toHumanAmount({\n                    originalAmount: amount,\n                    decimals: token.pDecimals,\n                }),\n                priceUsd: price.priceUsd,\n                decimals: tokenUSDT?.pDecimals,\n            });\n            const data = {\n                ...token,\n                ...price,\n                isFollowed,\n                amount,\n                formatAmount,\n                formatPriceByUsd,\n                formatBalanceByUsd,\n            };\n            return data;\n        }),\n);\n\nexport const availableTokensSelector = createSelector(\n    pTokensSelector,\n    pCustomTokensSelector,\n    getPrivacyDataByTokenIDSelector,\n    (pTokens, pCustomTokens, getPrivacyDataByTokenID) => {\n        const pTokensIds = pTokens.map((token: IPToken) => token.tokenId);\n        const pCustomTokensIds = pCustomTokens\n            .filter((token: IPCustomToken) => !isEmpty(token?.name) && !isEmpty(token?.symbol))\n            .filter((token) => !pTokensIds.includes(token?.tokenId))\n            .map((token) => token?.tokenId);\n        const allTokenIds = [...pTokensIds, ...pCustomTokensIds];\n        const tokens: ISelectedPrivacy[] = allTokenIds\n            .map((tokenId: string) => getPrivacyDataByTokenID(tokenId))\n            .filter((token) => token?.name && token?.symbol && token.tokenId);\n        return uniqBy(tokens, 'tokenId') || [];\n    },\n);\n\nexport const pUSDTSelector = createSelector(\n    popularCoinIdsSeletor,\n    getPrivacyDataByTokenIDSelector,\n    (coins, getPrivacyDataByTokenID) => getPrivacyDataByTokenID(coins.USDT),\n);\n\nexport const selectedTokenIdSelector = createSelector(tokenSelector, (token) => token.selectedTokenId || COINS.PRV.id);\n\nexport const selectedPrivacySelector = createSelector(\n    getPrivacyDataByTokenIDSelector,\n    selectedTokenIdSelector,\n    (getPrivacyDataByTokenID, tokenId) => getPrivacyDataByTokenID(tokenId),\n);\n\nexport const bridgeTokensSelector = createSelector(tokenSelector, (token) => token.pTokens);\n\nexport const chainTokensSelector = createSelector(tokenSelector, (token) => token.pCustomTokens);\n\nexport const totalShieldedTokensSelector = createSelector(\n    getPrivacyDataByTokenIDSelector,\n    followedTokensIdsSelector,\n    pUSDTSelector,\n    (getPrivacyDataByTokenID, followedIds, USDT) => {\n        const followed = followedIds(false);\n        const tokens = followed.map((tokenId) => getPrivacyDataByTokenID(tokenId));\n        const totalShieldedTokens = compact([...tokens]).reduce(\n            (\n                prevValue: {\n                    totalShieldByPRV: number;\n                    totalShieldByUSD: number;\n                },\n                currentValue: ISelectedPrivacy,\n            ) => {\n                const totalShieldByPRV = new BigNumber(prevValue.totalShieldByPRV);\n                const totalShieldByUSD = new BigNumber(prevValue.totalShieldByUSD);\n                const pricePrv = new BigNumber(currentValue?.pricePrv || 0);\n                const priceUsd = new BigNumber(currentValue?.priceUsd || 0);\n                const humanAmount = convert.toHumanAmount({\n                    originalAmount: currentValue.amount,\n                    decimals: currentValue.pDecimals,\n                });\n                let currentPrvVal = pricePrv.multipliedBy(humanAmount);\n                if (currentPrvVal.isNaN()) {\n                    currentPrvVal = totalShieldByPRV;\n                }\n                let currentUsdVal = priceUsd.multipliedBy(humanAmount);\n                if (currentUsdVal.isNaN()) {\n                    currentUsdVal = totalShieldByUSD;\n                }\n                return {\n                    totalShieldByPRV: totalShieldByPRV.plus(currentPrvVal).toNumber(),\n                    totalShieldByUSD: totalShieldByUSD.plus(currentUsdVal).toNumber(),\n                };\n            },\n            {\n                totalShieldByPRV: 0,\n                totalShieldByUSD: 0,\n            },\n        );\n        const { totalShieldByPRV, totalShieldByUSD } = totalShieldedTokens;\n        const formatTotalAmountPRV = format.formatAmount({\n            humanAmount: totalShieldByPRV,\n            decimals: COINS.PRV.pDecimals,\n        });\n        const formatTotalAmountUSD = format.formatAmount({\n            humanAmount: totalShieldByUSD,\n            decimals: USDT.pDecimals,\n        });\n        return {\n            formatTotalAmountPRV,\n            formatTotalAmountUSD,\n        };\n    },\n);\n\nexport const isTokenBySymbolSelector = createSelector(popularCoinIdsSeletor, (coins) => (symbol: string) =>\n    !!coins[symbol],\n);\n\nexport const isErc20TokenSelector = createSelector(\n    selectedPrivacySelector,\n    (selectedPrivacy) => selectedPrivacy.isErc20Token || selectedPrivacy.symbol === COINS.CRYPTO_SYMBOL.ETH,\n);\n\nexport const gettingBalanceSelector = createSelector(tokenSelector, (token) => token.gettingBalance);\n\nexport const isGettingBalanceTokenByIdSelector = createSelector(\n    gettingBalanceSelector,\n    (gettingBalance: string[]) => (tokenId: string) => gettingBalance.includes(tokenId),\n);\n","import { BigNumber } from 'bignumber.js';\nimport floor from 'lodash/floor';\nimport moment from 'moment';\nimport convert from './convert';\nimport { getGroupSeparator, getDecimalSeparator } from './separator';\n\ninterface IAmount {\n    originalAmount?: number;\n    humanAmount?: number;\n    decimals: number;\n    clipAmount?: boolean;\n    decimalDigits?: boolean;\n    maxDigits?: number;\n}\n\nconst removeTrailingZeroes = ({ amountString }: { amountString: string }) => {\n    let formattedString = amountString;\n    const decimalSeparator = getDecimalSeparator();\n    while (\n        formattedString.length > 0 &&\n        ((formattedString.includes(decimalSeparator) && formattedString[formattedString.length - 1] === '0') ||\n            formattedString[formattedString.length - 1] === decimalSeparator)\n    ) {\n        formattedString = formattedString.slice(0, formattedString.length - 1);\n    }\n\n    return formattedString;\n};\n\ninterface IMaxDigits {\n    decimalDigits?: boolean;\n    clipAmount?: boolean;\n    decimals: number;\n    humanAmount: number;\n}\n\nconst getMaxDecimalDigits = (payload: IMaxDigits) => {\n    const { decimals, decimalDigits = true, clipAmount = true, humanAmount } = payload;\n    let maxDigits = decimals;\n    try {\n        if (clipAmount) {\n            if (humanAmount > 0 && humanAmount < 1 && !!decimalDigits) {\n                maxDigits = 5;\n            }\n            if (humanAmount > 1) {\n                maxDigits = 4;\n            }\n            if (humanAmount > 1e3) {\n                maxDigits = 2;\n            }\n            if (humanAmount > 1e5) {\n                maxDigits = 0;\n            }\n        }\n    } catch (error) {\n        maxDigits = decimals;\n        throw error;\n    }\n    return maxDigits;\n};\n\ninterface IToFixed {\n    number: number;\n    decimals: number;\n}\n\nconst toFixed = (payload: IToFixed) => {\n    const decimalSeparator = getDecimalSeparator();\n    const { number, decimals } = payload;\n    const bigNumber = new BigNumber(number);\n    if (bigNumber.isNaN()) {\n        return '0';\n    }\n    return removeTrailingZeroes({\n        amountString: bigNumber.toFixed(decimals).replace('.', decimalSeparator),\n    });\n};\n\nconst formatAmount = (payload: IAmount) => {\n    const { originalAmount, humanAmount, decimals, clipAmount = true, decimalDigits = true } = payload;\n    const decimalSeparator = getDecimalSeparator();\n    const groupSeparator = getGroupSeparator();\n    const fmt = {\n        decimalSeparator,\n        groupSeparator,\n        groupSize: 3,\n    };\n    let formatedAmount;\n    try {\n        const convertHumanAmount =\n            humanAmount ||\n            convert.toHumanAmount({\n                originalAmount,\n                decimals,\n            });\n        const maxDigits = getMaxDecimalDigits({\n            clipAmount,\n            decimalDigits,\n            decimals,\n            humanAmount: convertHumanAmount,\n        });\n        let fixedNumber = convertHumanAmount;\n        if (decimals) {\n            fixedNumber = floor(convertHumanAmount, Math.min(decimals, maxDigits));\n        } else {\n            fixedNumber = floor(convertHumanAmount, maxDigits);\n        }\n        const fixedString = toFixed({\n            number: fixedNumber,\n            decimals,\n        });\n        const amountString = new BigNumber(fixedString).toFormat(maxDigits, BigNumber.ROUND_DOWN, fmt);\n        formatedAmount = removeTrailingZeroes({\n            amountString,\n        });\n    } catch (error) {\n        formatedAmount = '0';\n        throw error;\n    }\n    return formatedAmount;\n};\n\nconst formatUnixDateTime = (dateTime: number, formatPattern = 'MMM DD YYYY, HH:mm') =>\n    moment.unix(dateTime).format(formatPattern);\n\nconst number = (num: number) => {\n    const fmt = {\n        decimalSeparator: getDecimalSeparator(),\n        groupSeparator: getGroupSeparator(),\n        groupSize: 3,\n    };\n    const rs = new BigNumber(num);\n    return rs.isFinite() ? rs.toFormat(fmt) : num;\n};\n\nconst format = {\n    formatAmount,\n    formatUnixDateTime,\n    number,\n    toFixed,\n};\n\nexport default format;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\nimport { route as routeSetting } from 'src/module/Setting';\n\nconst Styled = styled(Link)`\n    width: 24px;\n    height: 24px;\n`;\n\nconst Setting = React.memo(() => {\n    return (\n        <Styled to={routeSetting}>\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/setting.png`} alt=\"\" />\n        </Styled>\n    );\n});\n\nexport default Setting;\n","import React from 'react';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\n\ninterface IProps {}\n\nconst Styled = styled.button`\n    width: 9px;\n    height: 100%;\n    margin-right: 15px;\n`;\n\nconst ArrowLeft = (props: IProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n    return (\n        <Styled {...props}>\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/arrow-left.png`} alt=\"\" />\n        </Styled>\n    );\n};\n\nexport default ArrowLeft;\n","import React from 'react';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\n\nconst Styled = styled.div`\n    width: 14px;\n    height: 14px;\n`;\n\nconst VerifiedIcon = () => {\n    return (\n        <Styled className=\"icon\">\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/verified-token.png`} alt=\"\" />\n        </Styled>\n    );\n};\n\nexport default React.memo(VerifiedIcon);\n","import React from 'react';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\n\ninterface IProps {}\n\nconst Styled = styled.button`\n    width: 18px;\n    height: 18px;\n`;\n\nconst Copy = (props: IProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n    return (\n        <Styled className=\"icon\" {...props}>\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/copy.png`} alt=\"\" />\n        </Styled>\n    );\n};\n\nexport default Copy;\n","import React from 'react';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\n\ninterface IProps {}\n\nconst Styled = styled.button`\n    width: 16px;\n    height: 16px;\n`;\n\nconst OpenLink = (props: IProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n    return (\n        <Styled className=\"icon\" {...props}>\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/open-link.png`} alt=\"\" />\n        </Styled>\n    );\n};\n\nexport default OpenLink;\n","import React from 'react';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\n\ninterface IProps {}\n\nconst Styled = styled.button`\n    width: 16px;\n    height: 15px;\n    > img {\n        margin-bottom: 5px;\n    }\n`;\n\nconst Question = (props: IProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n    return (\n        <Styled className=\"icon\" {...props}>\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/question.png`} alt=\"\" />\n        </Styled>\n    );\n};\n\nexport default Question;\n","import React from 'react';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\n\ninterface IProps {}\n\nconst Styled = styled.button`\n    width: 16px;\n    height: 16px;\n`;\n\nconst Info = (props: IProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n    return (\n        <Styled className=\"icon\" {...props}>\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/info.png`} alt=\"\" />\n        </Styled>\n    );\n};\n\nexport default Info;\n","import React from 'react';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\n\ninterface IProps {}\n\nconst Styled = styled.button`\n    width: 18px;\n    height: 12px;\n`;\n\nconst Infinite = (props: IProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n    const { className = '' } = props;\n    return (\n        <Styled type=\"button\" className={`icon ${className || ''}`} {...props}>\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/infinite.png`} alt=\"\" />\n        </Styled>\n    );\n};\n\nexport default Infinite;\n","import React from 'react';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\n\ninterface IProps {}\n\nconst Styled = styled.button`\n    width: 18px;\n    height: 18px;\n`;\n\nconst Scan = (props: IProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n    const { className = '' } = props;\n    return (\n        <Styled type=\"button\" className={`icon ${className || ''}`} {...props}>\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/scan.png`} alt=\"\" />\n        </Styled>\n    );\n};\n\nexport default Scan;\n","import React from 'react';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\n\ninterface IProps {}\n\nconst Styled = styled.button`\n    width: 20px;\n    height: 20px;\n`;\n\nconst AddressBook = (props: IProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n    const { className = '' } = props;\n    return (\n        <Styled type=\"button\" className={`icon ${className || ''}`} {...props}>\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/address-book.png`} alt=\"\" />\n        </Styled>\n    );\n};\n\nexport default AddressBook;\n","import React from 'react';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\n\ninterface IProps {}\n\nconst Styled = styled.button`\n    width: 15px;\n    height: 100%;\n`;\n\nconst ArrowUp = (props: IProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n    return (\n        <Styled {...props}>\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/arrow-up.png`} alt=\"\" />\n        </Styled>\n    );\n};\n\nexport default ArrowUp;\n","import React from 'react';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\n\ninterface IProps {}\n\nconst Styled = styled.button`\n    width: 15px;\n    height: 100%;\n`;\n\nconst ArrowDown = (props: IProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n    return (\n        <Styled {...props}>\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/arrow-down.png`} alt=\"\" />\n        </Styled>\n    );\n};\n\nexport default ArrowDown;\n","import walletValidator from 'wallet-address-validator';\nimport { validation } from '@zilliqa-js/util';\nimport BigNumber from 'bignumber.js';\nimport isEmpty from 'lodash/isEmpty';\nimport convert from 'src/utils/convert';\nimport format from 'src/utils/format';\nimport { keyServices } from 'incognito-js/build/web/browser';\n\n// const isSafeInteger = (number: number) => Math.abs(number) <= Number.MAX_SAFE_INTEGER;\n\nconst required = (value: any) => (isEmpty(value) ? 'Required' : undefined);\n\nconst maxLength = (max: number) => (value: string) =>\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\n\nconst minLength = (min: number) => (value: string) =>\n    value && value.length < min ? `Must be ${min} characters or more` : undefined;\n\nconst isInteger = (value: string) =>\n    value && !new BigNumber(value).isInteger() ? 'Must be a integer number' : undefined;\n\nconst number = (value: string) => {\n    const bn = new BigNumber(value);\n    if (bn.isNaN()) {\n        return 'Must be a number';\n    }\n    return undefined;\n};\n\nconst minValue = (min: number, message?: string) => (value: string) =>\n    value && convert.toNumber({ text: value }) < min ? message || `Must be at least ${format.number(min)}` : undefined;\n\nconst maxValue = (max: number, message?: string) => (value: string) =>\n    value && convert.toNumber({ text: value }) > max\n        ? message || `Must be less than or equal ${format.number(max)}`\n        : undefined;\n\nconst largerThan = (min: number, message?: string) => (value: string) =>\n    value && convert.toNumber({ text: value }) <= min\n        ? message || `Must be larger than ${format.number(min)}`\n        : undefined;\n\nconst email = (message?: string) => (value: string) =>\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? message || 'Invalid email address' : undefined;\n\n// const notInList = (list, { message } = {}) => (value) =>\n//   list?.includes(value)\n//     ? messageHanlder(message, value, list) ?? 'Please use another value'\n//     : undefined;\n\nconst regexp = (pattern: RegExp, message = 'Invalid data') => (value: string) =>\n    pattern && !pattern.test(value) ? message : undefined;\n\n// const maxBytes = (max, { message } = {}) => (value) =>\n//   value && new Blob([String(value)])?.size > max\n//     ? messageHanlder(message, value, max) ??\n//       `Must be less than or equal ${formatUtils.number(max)} bytes`\n//     : undefined;\n\nconst incognitoAddress = (message?: string) => (value: string) => {\n    if (value?.length < 15 || !keyServices.checkPaymentAddress(value)) {\n        return message || 'Invalid address';\n    }\n    // if (value && !keyServices.checkPaymentAddress(value)) {\n    //     return message || 'Use Unshield to exit Incognito';\n    // }\n    return undefined;\n};\n\nconst ethAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'ETH', 'both') ? message || 'Invalid ETH address' : undefined;\n\nconst btcAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'BTC', 'both') ? message || 'Invalid BTC address' : undefined;\n\nconst neoAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'NEO', 'both') ? message || 'Invalid NEO address' : undefined;\n\nconst zenAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'ZEN', 'both') ? message || 'Invalid Zen address' : undefined;\n\nconst zclAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'ZCL', 'both') ? message || 'Invalid ZCL address' : undefined;\n\nconst zecAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'ZEC', 'both') ? message || 'Invalid ZEC address' : undefined;\n\nconst votAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'VOT', 'both') ? message || 'Invalid VOT address' : undefined;\n\nconst vtcAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'VTC', 'both') ? message || 'Invalid VTC address' : undefined;\n\nconst sngAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'SNG', 'both') ? message || 'Invalid SNG address' : undefined;\n\nconst xrpAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'XRP', 'both') ? message || 'Invalid XRP address' : undefined;\n\nconst xrbAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'XRB', 'both') ? message || 'Invalid XRB address' : undefined;\n\nconst qtumAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'QTUM', 'both') ? message || 'Invalid QTUM address' : undefined;\n\nconst ptsAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'PTS', 'both') ? message || 'Invalid protoshares address' : undefined;\n\nconst ppcAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'PPC', 'both') ? message || 'Invalid PPC address' : undefined;\n\nconst gasAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'GAS', 'both') ? message || 'Invalid GAS address' : undefined;\n\nconst nmcAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'NMC', 'both') ? message || 'Invalid NMC address' : undefined;\n\nconst mecAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'MEC', 'both') ? message || 'Invalid MEC address' : undefined;\n\nconst ltcAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'LTC', 'both') ? message || 'Invalid LTC address' : undefined;\n\nconst kmdAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'KMD', 'both') ? message || 'Invalid KMD address' : undefined;\n\nconst hushAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'HUSH', 'both') ? message || 'Invalid HUSH address' : undefined;\n\nconst grlcAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'GRLC', 'both') ? message || 'Invalid GRLC address' : undefined;\n\nconst frcAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'FRC', 'both') ? message || 'Invalid FRC address' : undefined;\n\nconst dogeAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'DOGE', 'both') ? message || 'Invalid DOGE address' : undefined;\n\nconst dgbAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'DGB', 'both') ? message || 'Invalid DGB address' : undefined;\n\nconst dcrAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'DCR', 'both') ? message || 'Invalid DCR address' : undefined;\n\nconst cloAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'CLO', 'both') ? message || 'Invalid CLO address' : undefined;\n\nconst btgAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'BTG', 'both') ? message || 'Invalid BTG address' : undefined;\n\nconst bchAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'BCH', 'both') ? message || 'Invalid BCH address' : undefined;\n\nconst bioAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'BIO', 'both') ? message || 'Invalid BIO address' : undefined;\n\nconst bvcAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'BVC', 'both') ? message || 'Invalid BVC address' : undefined;\n\nconst bkxAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'BKX', 'both') ? message || 'Invalid BKX address' : undefined;\n\nconst aurAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'AUR', 'both') ? message || 'Invalid AUR address' : undefined;\n\nconst bnbAddress = (message?: string) => (value: string) => {\n    const reg = new RegExp('^(t)?(bnb)([a-z0-9]{39})$'); // t(for testnet) bnb + 39 a-z0-9\n    if (!reg.test(value)) {\n        return message || 'Invalid BNB address';\n    }\n    return undefined;\n};\n\nconst zilAddress = (message?: string) => (value: string) => {\n    if (!validation.isBech32(value)) {\n        return message || 'Invalid ZIL address';\n    }\n    return undefined;\n};\n// the same as ETH\nconst tomoAddress = (message?: string) => (value: string) =>\n    !walletValidator.validate(value, 'ETH', 'both') ? message || 'Invalid TOMO address' : undefined;\n\n// /**\n//  *\n//  * image/png, image/jpg, image/jpeg,...\n//  */\n// const fileTypes = (typeList, { message } = {}) => (value) => {\n//   if (!value) return;\n\n//   const fileType = value?.type;\n//   const found = typeList.find((type) => {\n//     if (!type) return false;\n//     const pattern = new RegExp(`${type}$`, 'i');\n//     return pattern.test(fileType);\n//   });\n//   return !found\n//     ? messageHanlder(message, value, typeList) ??\n//         `Please use a valid type (${typeList?.join(', ')})`\n//     : undefined;\n// };\n\n// const maxFileSize = (sizeInKBytes, { message } = {}) => (value) => {\n//   if (!value) return;\n//   const fileSize = Math.ceil(Number(value?.size / 1024) || 0);\n\n//   if (fileSize <= 0) {\n//     return 'Invalid file, please choose another file';\n//   }\n\n//   return fileSize > sizeInKBytes\n//     ? messageHanlder(message, value, sizeInKBytes) ??\n//         `Please use a file smaller than ${sizeInKBytes}kb`\n//     : undefined;\n// };\n\n// const isUnShieldAddress = ({\n//   address,\n//   externalSymbol,\n//   isErc20Token,\n//   isBep2Token,\n// }) => {\n//   if (isBep2Token || externalSymbol === CONSTANT_COMMONS.CRYPTO_SYMBOL.BNB) {\n//     const regexp = new RegExp('^(t)?(bnb)([a-z0-9]{39})$'); // t(for testnet) bnb + 39 a-z0-9\n//     return regexp.test(address);\n//   }\n//   if (isErc20Token || CONSTANT_COMMONS.CRYPTO_SYMBOL.TOMO === externalSymbol) {\n//     return walletValidator.validate(\n//       address,\n//       CONSTANT_COMMONS.CRYPTO_SYMBOL.ETH,\n//       'both'\n//     );\n//   }\n//   if (externalSymbol === CONSTANT_COMMONS.CRYPTO_SYMBOL.ZIL) {\n//     return validation.isBech32(address);\n//   }\n//   if (address) {\n//     return walletValidator.validate(address, externalSymbol, 'both');\n//   }\n//   return false;\n// };\n\nconst combinedAmount = [required, number, largerThan(0, 'Please enter an amount greater than 0')];\n\nconst combinedNanoAmount = [required, isInteger, number, minValue(1, 'Please enter an amount greater than 1.')];\n\nconst combinedIncognitoAddress = [required, incognitoAddress()];\nconst combinedETHAddress = [required, ethAddress()];\nconst combinedTOMOAddress = [required, tomoAddress()];\nconst combinedBTCAddress = [required, btcAddress()];\nconst combinedNEOAddress = [required, neoAddress()];\n// const combinedXMRAddress = [required, xmrAddress()];\nconst combinedBNBAddress = [required, bnbAddress()];\nconst combinedZenAddress = [required, zenAddress()];\nconst combinedZCLAddress = [required, zclAddress()];\nconst combinedZECAddress = [required, zecAddress()];\nconst combinedVOTAddress = [required, votAddress()];\nconst combinedVTCAddress = [required, vtcAddress()];\nconst combinedSNGAddress = [required, sngAddress()];\nconst combinedXRPAddress = [required, xrpAddress()];\nconst combinedXRBAddress = [required, xrbAddress()];\nconst combinedQTUMAddress = [required, qtumAddress()];\nconst combinedPTSAddress = [required, ptsAddress()];\nconst combinedPPCAddress = [required, ppcAddress()];\nconst combinedGASAddress = [required, gasAddress()];\nconst combinedNMCAddress = [required, nmcAddress()];\nconst combinedMECAddress = [required, mecAddress()];\nconst combinedLTCAddress = [required, ltcAddress()];\nconst combinedKMDAddress = [required, kmdAddress()];\nconst combinedHUSHAddress = [required, hushAddress()];\nconst combinedGRLCAddress = [required, grlcAddress()];\nconst combinedFRCAddress = [required, frcAddress()];\nconst combinedDOGEAddress = [required, dogeAddress()];\nconst combinedDGBAddress = [required, dgbAddress()];\nconst combinedDCRAddress = [required, dcrAddress()];\nconst combinedCLOAddress = [required, cloAddress()];\nconst combinedBTGAddress = [required, btgAddress()];\nconst combinedBCHAddress = [required, bchAddress()];\nconst combinedBIOAddress = [required, bioAddress()];\nconst combinedBVCAddress = [required, bvcAddress()];\nconst combinedBKXAddress = [required, bkxAddress()];\nconst combinedAURAddress = [required, aurAddress()];\nconst combinedZILAddress = [required, zilAddress()];\nconst combinedUnknownAddress = [required, minLength(15)];\n// const combinedTokenName = [\n//   required(),\n//   minLength(3),\n//   maxLength(50),\n//   regexp(/\\w+$/i, {\n//     message: 'Please use a valid coin name (Ex: \"My Coin, Coin-1,..\").',\n//   }),\n// ];\n// const combinedTokenSymbol = [\n//   required(),\n//   minLength(2),\n//   maxLength(10),\n//   regexp(/^[A-Z]+$/, {\n//     message: 'Please use a valid coin ticker (Ex: \"SYM\").',\n//   }),\n// ];\nconst combinedAccountName = [\n    required,\n    minLength(1),\n    maxLength(50),\n    regexp(/\\w+$/i, 'Please use a valid account name (Ex: \"Cat, Account-1,..\").'),\n];\n\n// const isBNBAddress = (address) => {\n//   const regexp = new RegExp('^(t)?(bnb)([a-z0-9]{39})$'); // t(for testnet) bnb + 39 a-z0-9\n//   return regexp.test(address);\n// };\n\n// const isZILAddress = (address) => validation.isBech32(address);\n\nconst invalidAddress = (message: string) => () => message || 'Invalid address';\n\nconst validator = {\n    required,\n    maxValue,\n    minValue,\n    combinedAmount,\n    combinedAccountName,\n    combinedNanoAmount,\n    invalidAddress,\n    combinedIncognitoAddress,\n    combinedETHAddress,\n    combinedTOMOAddress,\n    combinedBTCAddress,\n    combinedBNBAddress,\n    combinedNEOAddress,\n    combinedZenAddress,\n    combinedZCLAddress,\n    combinedZECAddress,\n    combinedVOTAddress,\n    combinedVTCAddress,\n    combinedSNGAddress,\n    combinedXRBAddress,\n    combinedXRPAddress,\n    combinedQTUMAddress,\n    combinedPTSAddress,\n    combinedPPCAddress,\n    combinedGASAddress,\n    combinedNMCAddress,\n    combinedMECAddress,\n    combinedLTCAddress,\n    combinedKMDAddress,\n    combinedHUSHAddress,\n    combinedGRLCAddress,\n    combinedFRCAddress,\n    combinedDOGEAddress,\n    combinedDGBAddress,\n    combinedDCRAddress,\n    combinedCLOAddress,\n    combinedBTGAddress,\n    combinedBCHAddress,\n    combinedBIOAddress,\n    combinedBVCAddress,\n    combinedBKXAddress,\n    combinedAURAddress,\n    combinedZILAddress,\n    combinedUnknownAddress,\n    email,\n};\n\nexport default validator;\n","export const ACTION_FETCHED_PCUSTOMTOKEN_LIST = `[Token] Fetched pcustomtoken data`;\nexport const ACTION_FETCHED_PTOKEN_LIST = `[Token] Fetched ptoken list`;\nexport const ACTION_GET_BALANCE_TOKEN_FETCHING = `[Token] Get balance token fetching`;\nexport const ACTION_GET_BALANCE_TOKEN_FETCHED = `[Token] Get balance token fetched`;\nexport const ACTION_FOLLOWED_POPULAR_TOKEN = `[Token] Followed popular token`;\nexport const ACTION_SET_FOLLOWED_TOKENS = `[Token] Set followed tokens`;\nexport const ACTION_SET_SELECTED_TOKEN = `[Token] Set selected tokens`;\nexport const ACTION_FOLLOW_TOKEN_BY_ID = `[Token] Follow token by id`;\n","import React, { HTMLAttributes } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SearchBox from './Header.searchBox';\n\nexport interface TInner {\n    handleClick: () => void;\n    renderHeaderTitle: () => void;\n}\n\nexport interface IProps {\n    title: string;\n    onGoBack?: () => void;\n    rightHeader?: React.FunctionComponent;\n    selectAccount?: boolean;\n    canSearch?: boolean;\n    customHeader?: React.FunctionComponent | React.ReactElement;\n}\n\nexport interface IMergeProps extends TInner, IProps {}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: IProps & HTMLAttributes<HTMLElement>) => {\n    const { canSearch = false, onGoBack, title, customHeader } = props;\n    const [state, setState] = React.useState({\n        toggleSearch: false,\n    });\n    const { toggleSearch } = state;\n    const onHandleToggleSearch = async () => {\n        if (canSearch) {\n            await setState({\n                ...state,\n                toggleSearch: true,\n            });\n        }\n    };\n    const history = useHistory();\n    const handleClick = () => {\n        if (typeof onGoBack === 'function') {\n            return onGoBack();\n        }\n        history.goBack();\n        return null;\n    };\n    const renderHeaderTitle = () => {\n        if (toggleSearch) {\n            return <SearchBox title={title} />;\n        }\n        return (\n            <div className=\"header-container flex\">\n                <button\n                    type=\"button\"\n                    onClick={onHandleToggleSearch}\n                    className=\"header-title fw-medium fs-medium ellipsis\"\n                >\n                    {title}\n                </button>\n                {customHeader && customHeader}\n            </div>\n        );\n    };\n    return (\n        <WrappedComponent\n            {...{\n                ...props,\n                toggleSearch,\n                renderHeaderTitle,\n                handleClick,\n            }}\n        />\n    );\n};\n\nexport default enhance;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FONT_SIZES } from 'src/styles';\nimport { BtnSelectAccount } from 'src/module/Account/features/SelectAccount';\nimport withHeader, { IMergeProps } from './Header.enhance';\nimport { ArrowLeftIcon } from '../Icons';\n\nconst Styled = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 30px;\n    .left {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        cursor: pointer;\n    }\n    .left p.header-title {\n        line-height: ${FONT_SIZES.medium + 3}px;\n        margin-right: 10px;\n    }\n`;\n\nconst Header = (props: IMergeProps & any) => {\n    const { rightHeader, selectAccount, handleClick, renderHeaderTitle } = props;\n    return (\n        <Styled className=\"header\">\n            <div className=\"left\">\n                <ArrowLeftIcon onClick={handleClick} />\n                {renderHeaderTitle()}\n            </div>\n            <div className=\"right\">\n                {rightHeader}\n                {selectAccount && <BtnSelectAccount />}\n            </div>\n        </Styled>\n    );\n};\n\nexport default withHeader(Header);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { SettingIcon } from 'src/components/Icons';\nimport QrCode from 'src/components/Icons/QrCode';\nimport { BtnSelectAccount } from 'src/module/Account/features/SelectAccount';\nimport { route as receiveRoute } from 'src/module/Account/features/Receive';\n\nconst Styled = styled.div`\n    margin-bottom: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    .menu {\n        display: flex;\n        align-items: center;\n    }\n    .menu .btn-select-account {\n        margin-left: 10px;\n    }\n`;\n\nconst HeaderApp = React.memo(() => {\n    return (\n        <Styled>\n            <div className=\"menu\">\n                <SettingIcon />\n            </div>\n            <div className=\"menu\">\n                <QrCode route={receiveRoute} />\n                <BtnSelectAccount />\n            </div>\n        </Styled>\n    );\n});\n\nexport default HeaderApp;\n","import React from 'react';\nimport { reset } from 'redux-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport { FORM_CONFIGS } from './Header.searchBox';\nimport { keySearchSelector } from './Header.selector';\n\ninterface IProps {\n    data: any[];\n    handleFilter: () => any[];\n}\n\nexport interface ISearchBox {\n    result: any[];\n    keySearch: string;\n    handleFilter: () => any[];\n}\n\nexport const useSearchBox = (props: IProps) => {\n    const { data, handleFilter } = props;\n    const dispatch = useDispatch();\n    const keySearch = useSelector(keySearchSelector);\n    const isKeyEmpty = isEmpty(keySearch);\n    const result: any[] = isKeyEmpty ? data : handleFilter();\n    React.useEffect(() => {\n        dispatch(reset(FORM_CONFIGS.formName));\n    }, []);\n    return {\n        result,\n    };\n};\n","import { AccountInstance } from 'incognito-js/build/web/browser';\nimport memoize from 'lodash/memoize';\nimport isEmpty from 'lodash/isEmpty';\nimport { createSelector } from 'reselect';\nimport { IRootState } from 'src/redux/interface';\nimport { walletSelector } from 'src/module/Wallet/Wallet.selector';\nimport { IWalletReducer } from 'src/module/Wallet';\nimport { IAccountReducer } from './Account.interface';\n\nexport const accountSelector = createSelector(\n    (state: IRootState) => state.account,\n    (account: IAccountReducer) => account,\n);\nexport const listAccountSelector = createSelector(accountSelector, (account) => account?.list || []);\n\nexport const listAccountNameSelector = createSelector(\n    listAccountSelector,\n    (listAccount) => (listAccount && listAccount.map((account) => account.name)) || [],\n);\n\nexport const defaultAccountNameSelector = createSelector(accountSelector, (account) => account.defaultAccountName);\n\nexport const defaultAccountSelector = createSelector(\n    listAccountSelector,\n    defaultAccountNameSelector,\n    walletSelector,\n    (list, defaultAccountName, walletState) => {\n        const { loaded }: IWalletReducer = walletState;\n        if (!loaded) {\n            return {};\n        }\n        let account: any;\n        try {\n            const { wallet } = walletState;\n            const defaultAccount: AccountInstance = wallet.masterAccount.getAccountByName(defaultAccountName);\n            if (isEmpty(defaultAccount?.name)) {\n                account = list && list[0];\n            }\n            account = defaultAccount;\n        } catch (error) {\n            throw error;\n        }\n        return account;\n    },\n);\n\nexport const isGettingAccountBalanceSelector = createSelector(\n    accountSelector,\n    defaultAccountSelector,\n    (account: IAccountReducer, defaultAccount: AccountInstance | undefined) =>\n        (defaultAccount && account.gettingBalance.includes(defaultAccount.name)) || false,\n);\n\nexport const switchAccountSelector = createSelector(accountSelector, (account) => account?.switch || false);\n\nexport const createAccountSelector = createSelector(accountSelector, (account) => account?.create || false);\n\nexport const importAccountSelector = createSelector(accountSelector, (account) => account?.import || false);\n\nexport const getAccountByNameSelector = createSelector(listAccountSelector, (accounts) =>\n    memoize((accountName: string) => accounts.find((account: AccountInstance) => account?.name === accountName)),\n);\n\nexport const accountBalanceSelector = createSelector(accountSelector, (account) => account.accountBalance || 0);\n\nexport const keySetAccountSelector = createSelector(\n    defaultAccountSelector,\n    (account: AccountInstance) => account && account.key.keySet,\n);\n\nexport const paymentAddressSelector = createSelector(\n    keySetAccountSelector,\n    (keySet) => keySet.paymentAddressKeySerialized,\n);\n","export { default } from './AccountItem';\nexport * from './AccountItem.route';\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Styled = styled.div``;\n\nexport const NameStyled = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    .verified-icon {\n        margin-left: 5px;\n    }\n`;\n\nexport const TextStyled = styled.p``;\n\nexport const AmountStyled = styled.div``;\n\nexport const BalanceStyled = styled.div`\n    .price {\n        display: flex;\n    }\n    .per-change {\n        margin-left: 5px;\n    }\n`;\n\nexport const TokenStyled = styled(Link)`\n    margin-bottom: 30px;\n    .extra {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .extra .extra-item {\n        flex: 1 0 auto;\n        width: 100%;\n        max-width: 45%;\n    }\n    .extra .extra-item {\n        :last-child {\n            .text {\n                text-align: right;\n            }\n        }\n    }\n    .extra-bottom {\n        margin-top: 15px;\n    }\n`;\n","export const ACTION_CREATE = '[addressBook] Action create receiver';\nexport const ACTION_UPDATE = '[addressBook] Action update receiver';\nexport const ACTION_DELETE = '[addressBook] Action delete receiver';\nexport const ACTION_SELECTED = '[addressBook] Selected receiver';\nexport const ACTION_REMOVE_SELECTED = '[addressBook] Remove selected receiver';\n","import { change, focus } from 'redux-form';\nimport convert from 'src/utils/convert';\nimport format from 'src/utils/format';\n// import trim from 'lodash/trim';\nimport floor from 'lodash/floor';\nimport BigNumber from 'bignumber.js';\nimport { Dispatch } from 'redux';\nimport { IRootState } from 'src/redux/interface';\nimport { defaultAccountSelector } from 'src/module/Account';\n// import { apiURL2Selector } from 'src/module/Preload';\nimport { ISelectedPrivacy, selectedPrivacySelector } from 'src/module/Token';\nimport { AccountInstance } from 'incognito-js/build/web/browser';\nimport { COINS } from 'src/constants';\nimport { sendDataSelector, sendSelector } from './Send.selector';\nimport {\n    getMaxAmount,\n    MAX_FEE_PER_TX,\n    // getMaxAmount,\n    // getTotalFee\n} from './Send.utils';\n// import { apiGetEstimateFeeFromChain } from './Send.services';\nimport {\n    ACTION_FETCHING_FEE,\n    ACTION_FETCHED_FEE,\n    ACTION_FETCH_FAIL_FEE,\n    ACTION_ADD_FEE_TYPE,\n    ACTION_CHANGE_FEE_TYPE,\n    ACTION_FETCHED_PTOKEN_FEE,\n    ACTION_FETCHED_MIN_PTOKEN_FEE,\n    // ACTION_CHANGE_FEE,\n    ACTION_INIT,\n    ACTION_INIT_FETCHED,\n    ACTION_FETCHED_MAX_FEE_PRV,\n    ACTION_FETCHED_MAX_FEE_PTOKEN,\n    // ACTION_FETCHED_VALID_ADDR,\n    // ACTION_FETCHED_USER_FEES,\n    // ACTION_FETCHING_USER_FEES,\n    // ACTION_TOGGLE_FAST_FEE,\n    // ACTION_REMOVE_FEE_TYPE,\n    // ACTION_FETCH_FAIL_USER_FEES,\n    FORM_CONFIGS,\n} from './Send.constant';\nimport { ISendData, ISendReducer } from './Send.interface';\n\nexport const actionInitFetched = (payload: {\n    screen: string;\n    rate: number;\n    minAmount: number;\n    minAmountText: string;\n    isAddressValidated: boolean;\n    isValidETHAddress: boolean;\n}) => ({\n    type: ACTION_INIT_FETCHED,\n    payload,\n});\n\nexport const actionAddFeeType = (payload: { tokenId: string; symbol: string }) => ({\n    type: ACTION_ADD_FEE_TYPE,\n    payload,\n});\n\nexport const actionFetchedFee = (payload: {\n    feePrv: number;\n    feePrvText: string;\n    minFeePrv: number;\n    minFeePrvText: string;\n    totalFeePrv: number;\n    totalFeePrvText: string;\n}) => ({\n    type: ACTION_FETCHED_FEE,\n    payload,\n});\n\nexport const actionFetchedMinPTokenFee = (payload: { minFeePToken: number; minFeePTokenText: string }) => ({\n    type: ACTION_FETCHED_MIN_PTOKEN_FEE,\n    payload,\n});\n\nexport const actionHandleMinFeeEst = ({ minFeePTokenEst }: { minFeePTokenEst: number }) => async (\n    dispatch: Dispatch,\n    getState: () => IRootState,\n) => {\n    const state = getState();\n    const selectedPrivacy: ISelectedPrivacy = selectedPrivacySelector(state);\n    const {\n        rate,\n    }: // userFees\n    ISendReducer = sendSelector(state);\n    // const { isUnShield } = sendDataSelector(state);\n    // const isFreeFeePToken = !userFees?.data?.TokenFees;\n    // const isFreeFeePrivacy = !userFees?.data?.PrivacyFees;\n    // const isFreeFee = isFreeFeePToken && isFreeFeePrivacy;\n    const minFeePToken = floor(new BigNumber(minFeePTokenEst).multipliedBy(rate).toNumber());\n    const minFeePTokenText = format.toFixed({\n        number: convert.toHumanAmount({\n            originalAmount: minFeePToken,\n            decimals: selectedPrivacy?.pDecimals,\n        }),\n        decimals: selectedPrivacy?.pDecimals,\n    });\n    const task = [\n        dispatch(\n            actionFetchedMinPTokenFee({\n                minFeePToken,\n                minFeePTokenText,\n            }),\n        ),\n        dispatch(\n            actionAddFeeType({\n                tokenId: selectedPrivacy?.tokenId,\n                symbol: selectedPrivacy?.symbol || selectedPrivacy?.pSymbol,\n            }),\n        ),\n    ];\n    await Promise.all(task);\n    // if (isUnShield && !!userFees?.isFetched) {\n    //   if (isFreeFee) {\n    //     return;\n    //   }\n    //   if (isFreeFeePToken) {\n    //     return await dispatch(\n    //       actionRemoveFeeType({ tokenId: selectedPrivacy?.tokenId })\n    //     );\n    //   }\n    // }\n};\n\nexport const actionFetchedPTokenFee = (payload: {\n    feePToken: number;\n    feePTokenText: string;\n    totalFeePToken: number;\n    totalFeePTokenText: string;\n}) => ({\n    type: ACTION_FETCHED_PTOKEN_FEE,\n    payload,\n});\n\nexport const actionHandleFeePTokenEst = ({ feePTokenEst }: { feePTokenEst: number }) => async (\n    dispatch: Dispatch,\n    getState: () => IRootState,\n) => {\n    let feePToken = 0;\n    let feePTokenText = '0';\n    let totalFeePToken = 0;\n    let totalFeePTokenText = '0';\n    // userFeePToken;\n    const state = getState();\n    const selectedPrivacy: ISelectedPrivacy = selectedPrivacySelector(state);\n    const {\n        rate,\n        // userFees,\n        // fast2x\n    } = sendSelector(state);\n    const {\n        isUseTokenFee,\n        // isUnShield, hasMultiLevel\n    } = sendDataSelector(state);\n    // const { isFetched } = userFees;\n    try {\n        feePToken = floor(new BigNumber(feePTokenEst).multipliedBy(rate).toNumber());\n        feePTokenText = format.toFixed({\n            number: convert.toHumanAmount({\n                originalAmount: feePToken,\n                decimals: selectedPrivacy?.pDecimals,\n            }),\n            decimals: selectedPrivacy?.pDecimals,\n        });\n        totalFeePToken = feePToken;\n        totalFeePTokenText = feePTokenText;\n        // if (isUnShield && isFetched) {\n        //   const { totalFee, totalFeeText, userFee } = getTotalFee({\n        //     fast2x,\n        //     userFeesData: userFees?.data,\n        //     feeEst: feePToken,\n        //     rate,\n        //     pDecimals: selectedPrivacy?.pDecimals,\n        //     isUsedPRVFee: false,\n        //     hasMultiLevel,\n        //   });\n        //   totalFeePToken = totalFee;\n        //   totalFeePTokenText = totalFeeText;\n        //   userFeePToken = userFee;\n        // }\n    } catch (error) {\n        throw error;\n    } finally {\n        await dispatch(\n            actionFetchedPTokenFee({\n                feePToken,\n                feePTokenText,\n                totalFeePToken,\n                totalFeePTokenText,\n                // userFeePToken,\n            }),\n        );\n        if (isUseTokenFee) {\n            await Promise.all([\n                dispatch(change(FORM_CONFIGS.formName, 'fee', totalFeePTokenText)),\n                dispatch(focus(FORM_CONFIGS.formName, 'fee')),\n            ]);\n        }\n    }\n};\n\nexport const actionHandleFeeEst = ({ feeEst }: { feeEst: number }) => async (\n    dispatch: Dispatch,\n    getState: () => IRootState,\n) => {\n    let feePrv = 0;\n    let feePrvText = '0';\n    let totalFeePrv = 0;\n    let totalFeePrvText = '0';\n    //  userFeePrv;\n    const state = getState();\n    const {\n        //  fast2x, userFees,\n        rate,\n    } = sendSelector(state);\n    const {\n        isUsedPRVFee,\n        // isUnShield,\n        // feePDecimals,\n        // hasMultiLevel,\n    } = sendDataSelector(state);\n    // const { isFetched } = userFees;\n    try {\n        feePrv = floor(new BigNumber(feeEst).multipliedBy(rate).toNumber());\n        feePrvText = format.toFixed({\n            number: convert.toHumanAmount({\n                originalAmount: feePrv,\n                decimals: COINS.PRV.pDecimals,\n            }),\n            decimals: COINS.PRV.pDecimals,\n        });\n        totalFeePrv = feePrv;\n        totalFeePrvText = feePrvText;\n        // if (isUnShield && isFetched) {\n        //   const { totalFee, totalFeeText, userFee } = getTotalFee({\n        //     fast2x,\n        //     userFeesData: userFees?.data,\n        //     feeEst: feePrv,\n        //     rate,\n        //     pDecimals: feePDecimals,\n        //     isUsedPRVFee,\n        //     hasMultiLevel,\n        //   });\n        //   totalFeePrv = totalFee;\n        //   totalFeePrvText = totalFeeText;\n        //   userFeePrv = userFee;\n        // }\n    } catch (error) {\n        throw error;\n    } finally {\n        await dispatch(\n            actionFetchedFee({\n                feePrv,\n                feePrvText,\n                minFeePrv: feePrv,\n                minFeePrvText: feePrvText,\n                totalFeePrv,\n                totalFeePrvText,\n                // userFeePrv,\n            }),\n        );\n        if (isUsedPRVFee) {\n            await Promise.all([\n                await dispatch(change(FORM_CONFIGS.formName, 'fee', totalFeePrvText)),\n                await dispatch(focus(FORM_CONFIGS.formName, 'fee')),\n            ]);\n        }\n    }\n};\n\nexport const actionInitEstimateFee = (config: { screen: string }) => async (\n    dispatch: Dispatch,\n    getState: () => IRootState,\n) => {\n    const state = getState();\n    const selectedPrivacy: ISelectedPrivacy = selectedPrivacySelector(state);\n    const account: AccountInstance = defaultAccountSelector(state);\n    const wallet = state?.wallet;\n    if (!wallet || !account || !selectedPrivacy) {\n        return;\n    }\n    const { screen = 'Send' } = config;\n    let rate = 1;\n    let minAmount = convert.toHumanAmount({\n        originalAmount: 1,\n        decimals: selectedPrivacy.pDecimals,\n    });\n    const minAmountText = format.toFixed({\n        number: minAmount,\n        decimals: selectedPrivacy.pDecimals,\n    });\n    try {\n        switch (screen) {\n            // case 'UnShield': {\n            //   rate = 2;\n            //   break;\n            // }\n            default: {\n                rate = 1;\n                break;\n            }\n        }\n        // if (screen === 'UnShield') {\n        //   const [min] = await getMinMaxWithdrawAmount(selectedPrivacy?.tokenId);\n        //   if (min) {\n        //     minAmountText = format.toFixed(min, selectedPrivacy?.pDecimals);\n        //     minAmount = convert.toOriginalAmount(\n        //       minAmountText,\n        //       selectedPrivacy?.pDecimals\n        //     );\n        //   }\n        // }\n    } catch (error) {\n        throw error;\n    } finally {\n        await dispatch(\n            actionInitFetched({\n                screen,\n                rate,\n                minAmount,\n                minAmountText,\n                isAddressValidated: true,\n                isValidETHAddress: true,\n            }),\n        );\n    }\n};\n\nexport const actionFetchedMaxFeePrv = (payload: { maxFeePrv: number; maxFeePrvText: string }) => ({\n    type: ACTION_FETCHED_MAX_FEE_PRV,\n    payload,\n});\n\nexport const actionFetchedMaxFeePToken = (payload: { amount: number; amountText: string }) => ({\n    type: ACTION_FETCHED_MAX_FEE_PTOKEN,\n    payload,\n});\n\nexport const actionInit = () => ({\n    type: ACTION_INIT,\n});\n\nexport const actionFetchingFee = () => ({\n    type: ACTION_FETCHING_FEE,\n});\n\nexport const actionFetchFailFee = () => ({\n    type: ACTION_FETCH_FAIL_FEE,\n});\n\nexport const actionFetchFee = ({\n    amount,\n    address,\n    screen,\n}: {\n    amount: string;\n    address: string;\n    screen: string;\n    memo: string;\n}) => async (dispatch: Dispatch, getState: () => IRootState) => {\n    const state = getState();\n    const selectedPrivacy = selectedPrivacySelector(state);\n    // const api2URL = apiURL2Selector(state);\n    const { isFetching, init } = sendSelector(state);\n    let feeEst = MAX_FEE_PER_TX;\n    let feePTokenEst: any = 0;\n    let minFeePTokenEst: any = 0;\n    const originalAmount = convert.toOriginalAmount({\n        humanAmount: amount,\n        decimals: selectedPrivacy.pDecimals,\n    });\n    const bnOriginalAmount = new BigNumber(originalAmount).toNumber();\n    try {\n        if (\n            !init ||\n            !amount ||\n            !address ||\n            !selectedPrivacy?.tokenId ||\n            isFetching ||\n            bnOriginalAmount === 0 ||\n            bnOriginalAmount > selectedPrivacy?.amount\n        ) {\n            return;\n        }\n        await dispatch(actionFetchingFee());\n        await actionInitEstimateFee({ screen })(dispatch, getState);\n        // if (selectedPrivacy?.isWithdrawable && screen === 'UnShield') {\n        //   const isAddressValidated = await dispatch(actionValAddr(address));\n        //   if (isAddressValidated) {\n        //     await dispatch(actionFetchUserFees({ address, amount, memo }));\n        //   }\n        // }\n        // if (selectedPrivacy?.isToken) {\n        //     try {\n        //         const payload = {\n        //             Prv: feeEst,\n        //             TokenID: selectedPrivacy?.tokenId,\n        //         };\n        //         let feePTokenEstData: any = await apiGetEstimateFeeFromChain(api2URL, payload);\n        //         feePTokenEst = feePTokenEstData;\n        //         minFeePTokenEst = feePTokenEstData;\n        //     } catch (error) {\n        //         console.debug(error);\n        //     }\n        // }\n    } catch (error) {\n        throw error;\n    } finally {\n        if (feeEst) {\n            await actionHandleFeeEst({\n                feeEst,\n            })(dispatch, getState);\n        }\n        if (feePTokenEst) {\n            await actionHandleFeePTokenEst({ feePTokenEst })(dispatch, getState);\n        }\n        if (minFeePTokenEst) {\n            await actionHandleMinFeeEst({ minFeePTokenEst })(dispatch, getState);\n        }\n    }\n};\n\n// export const actionRemoveFeeType = (payload) => ({\n//   type: ACTION_REMOVE_FEE_TYPE,\n//   payload,\n// });\n\nexport const actionChangeFeeType = (payload: string) => ({\n    type: ACTION_CHANGE_FEE_TYPE,\n    payload,\n});\n\n// export const actionChangeFee = (payload) => ({\n//   type: ACTION_CHANGE_FEE,\n//   payload,\n// });\n\nexport const actionFetchFeeByMax = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    const state = getState();\n    const selectedPrivacy: ISelectedPrivacy = selectedPrivacySelector(state);\n    // const apiURL2 = apiURL2Selector(state);\n    const { isFetched, isFetching }: ISendReducer = sendSelector(state);\n    const { isUseTokenFee, totalFee }: ISendData = sendDataSelector(state);\n    const {\n        amount,\n        isNativeToken,\n        pDecimals,\n        //  isToken\n    } = selectedPrivacy;\n    const bnAmount = new BigNumber(amount);\n    const bnFeeEst = new BigNumber(MAX_FEE_PER_TX);\n    const maxAmount = Math.max(isNativeToken ? bnAmount.minus(bnFeeEst).toNumber() : amount, 0);\n    let maxAmountText = format.toFixed({\n        number: convert.toHumanAmount({\n            originalAmount: maxAmount,\n            decimals: pDecimals,\n        }),\n        decimals: pDecimals,\n    });\n    const feeEst = bnFeeEst.toNumber();\n    if (isFetching) {\n        return;\n    }\n    try {\n        if (isFetched) {\n            const { maxAmountText: _maxAmountText } = getMaxAmount({\n                selectedPrivacy,\n                isUseTokenFee,\n                totalFee,\n            });\n            maxAmountText = _maxAmountText;\n        } else {\n            await dispatch(actionFetchingFee());\n            // if (isToken) {\n            //     try {\n            //         const feePTokenEst: any = await apiGetEstimateFeeFromChain(apiURL2, {\n            //             Prv: feeEst,\n            //             TokenID: selectedPrivacy.tokenId,\n            //         });\n            //         if (feePTokenEst) {\n            //             await Promise.all([\n            //                 actionHandleFeePTokenEst({ feePTokenEst })(dispatch, getState),\n            //                 actionHandleMinFeeEst({ minFeePTokenEst: feePTokenEst })(dispatch, getState),\n            //             ]);\n            //         }\n            //     } catch (error) {\n            //         console.debug(error);\n            //     }\n            // }\n        }\n    } catch (error) {\n        throw error;\n    } finally {\n        if (!isFetched) {\n            await actionHandleFeeEst({\n                feeEst,\n            })(dispatch, getState);\n        }\n    }\n    // eslint-disable-next-line consistent-return\n    return maxAmountText;\n};\n\n// export const actionFetchedValidAddr = (payload) => ({\n//   type: ACTION_FETCHED_VALID_ADDR,\n//   payload,\n// });\n\n// export const actionValAddr = (address = '') => async (dispatch, getState) => {\n//   let isAddressValidated = true;\n//   let isValidETHAddress = true;\n//   const state = getState();\n//   const selectedPrivacy = selectedPrivacySeleclor.selectedPrivacy(state);\n//   const { isUnShield } = feeDataSelector(state);\n//   if (!isUnShield) {\n//     return;\n//   }\n//   try {\n//     const _address = trim(address);\n//     if (_address) {\n//       const validAddr = await apiCheckValidAddress(\n//         _address,\n//         selectedPrivacy?.currencyType\n//       );\n//       isAddressValidated = !!validAddr?.data?.Result;\n//     }\n//   } catch (error) {\n//     throw error;\n//   } finally {\n//     await dispatch(\n//       actionFetchedValidAddr({ isAddressValidated, isValidETHAddress })\n//     );\n//   }\n//   return isAddressValidated;\n// };\n\n// export const actionFetchedUserFees = (payload) => ({\n//   type: ACTION_FETCHED_USER_FEES,\n//   payload,\n// });\n\n// export const actionFetchingUserFees = () => ({\n//   type: ACTION_FETCHING_USER_FEES,\n// });\n\n// export const actionFetchFailUserFees = (payload) => ({\n//   type: ACTION_FETCH_FAIL_USER_FEES,\n//   payload,\n// });\n\n// export const actionFetchUserFees = (payload) => async (dispatch, getState) => {\n//   let userFeesData;\n//   const state = getState();\n//   const { address: paymentAddress, memo, amount: requestedAmount } = payload;\n//   const selectedPrivacy = selectedPrivacySeleclor.selectedPrivacy(state);\n//   const {\n//     tokenId,\n//     contractId,\n//     currencyType,\n//     isErc20Token,\n//     externalSymbol,\n//     paymentAddress: walletAddress,\n//     pDecimals,\n//     isDecentralized,\n//   } = selectedPrivacy;\n//   const { isETH, isUsedPRVFee, userFees, isUnShield } = feeDataSelector(state);\n//   const originalAmount = convert.toOriginalAmount(requestedAmount, pDecimals);\n//   userFeesData = { ...userFees?.data };\n//   let _error;\n//   const { isFetching } = userFees;\n//   if (isFetching || !isUnShield) {\n//     return;\n//   }\n//   try {\n//     await dispatch(actionFetchingUserFees());\n//     if (isDecentralized) {\n//       const data = {\n//         requestedAmount,\n//         originalAmount,\n//         paymentAddress,\n//         walletAddress,\n//         tokenContractID: isETH ? '' : contractId,\n//         tokenId,\n//         burningTxId: '',\n//         currencyType: currencyType,\n//         isErc20Token: isErc20Token,\n//         externalSymbol: externalSymbol,\n//         isUsedPRVFee,\n//       };\n//       userFeesData = await estimateUserFees(data);\n//     } else {\n//       const payload = {\n//         originalAmount,\n//         requestedAmount,\n//         paymentAddress,\n//         walletAddress,\n//         tokenId: tokenId,\n//         currencyType: currencyType,\n//         memo,\n//       };\n//       const _userFeesData = await genCentralizedWithdrawAddress(payload);\n//       userFeesData = {\n//         ..._userFeesData,\n//       };\n//     }\n//   } catch (error) {\n//     _error = error;\n//     throw error;\n//   } finally {\n//     if (_error && _error?.code === 'API_ERROR(-1027)') {\n//       return await dispatch(actionFetchFailUserFees(true));\n//     }\n//     if (!userFeesData.FeeAddress) {\n//       await dispatch(actionFetchFailUserFees());\n//       throw new Error(\"Can't not get master address!\");\n//     }\n//     await dispatch(actionFetchedUserFees(userFeesData));\n//   }\n// };\n\n// export const actionToggleFastFee = (payload) => ({\n//   type: ACTION_TOGGLE_FAST_FEE,\n//   payload,\n// });\n","export const ACTION_FETCHING = `[preload] Fetching data`;\nexport const ACTION_FETCHED = `[preload] Fetched data`;\nexport const ACTION_FETCHED_INIT_DB = `[preload] Fetched init incognito database`;\nexport const ACTION_SET_CONFIGS = `[preload] Set configs`;\nexport const ACTION_SET_SERVER = `[preload] Set server`;\n","import isEqual from 'lodash/isEqual';\nimport toLower from 'lodash/toLower';\nimport includes from 'lodash/includes';\nimport { IAddressBook } from './AddressBook.interface';\n\nexport const isAddressBookExist = (oldReceivers: IAddressBook[], addressBook: IAddressBook) =>\n    oldReceivers.some(\n        (item) => isEqual(item.address, addressBook.address) || isEqual(toLower(item.name), toLower(addressBook.name)),\n    );\n\nexport const ADDRESS_BOOK_TYPE: {\n    [x: number]: string;\n} = {\n    1: 'incognitoAddress',\n    2: 'externalAddress',\n};\n\nexport const filterAddressByKey = (addressBook: IAddressBook[], keySearch: string) =>\n    addressBook?.filter(\n        (item) => includes(item?.name.toLowerCase(), keySearch) || includes(item?.address.toLowerCase(), keySearch),\n    );\n","export { default } from './History';\nexport { default as HistoryItem } from './History.item';\nexport { default as HistoryList } from './History.list';\nexport * from './History.actions';\nexport * from './History.constant';\nexport * from './History.interface';\nexport * from './History.selector';\nexport * from './History.route';\n","export { default } from './AddressBook';\nexport * from './AddressBook.actions';\nexport * from './AddressBook.constant';\nexport * from './AddressBook.interface';\nexport * from './AddressBook.selector';\nexport * from './AddressBook.route';\nexport * from './AddressBook.utils';\n","import floor from 'lodash/floor';\nimport format from 'src/utils/format';\nimport BigNumber from 'bignumber.js';\nimport { keyServices } from 'incognito-js/build/web/browser';\nimport { ISelectedPrivacy } from 'src/module/Token';\nimport { COINS } from 'src/constants';\nimport { IRootState } from 'src/redux/interface';\nimport { formValueSelector, isSubmitting, isValid } from 'redux-form';\nimport { isEmpty } from 'lodash';\nimport convert from 'src/utils/convert';\nimport { FORM_CONFIGS } from './Send.constant';\nimport { IUserFeesData, ISendReducer } from './Send.interface';\n\nexport const DEFAULT_FEE_PER_KB_HUMAN_AMOUNT = 0.000000001; // in nano\nexport const DEFAULT_FEE_PER_KB = DEFAULT_FEE_PER_KB_HUMAN_AMOUNT * 1e9; // in nano\nexport const MAX_TX_SIZE = 100;\nexport const MAX_FEE_PER_TX = DEFAULT_FEE_PER_KB * MAX_TX_SIZE;\n\nexport const getMaxAmount = ({\n    selectedPrivacy,\n    isUseTokenFee,\n    totalFee,\n}: {\n    selectedPrivacy: ISelectedPrivacy;\n    isUseTokenFee: boolean;\n    totalFee: number;\n}) => {\n    const { amount, isNativeToken, pDecimals } = selectedPrivacy;\n    let bnAmount = new BigNumber(amount);\n    const bnTotalFee = new BigNumber(totalFee);\n    if (isUseTokenFee || isNativeToken) {\n        bnAmount = bnAmount.minus(bnTotalFee);\n    }\n    const maxAmount = Math.max(bnAmount.toNumber(), 0);\n    const maxAmountText = format.toFixed({\n        number: convert.toHumanAmount({\n            originalAmount: maxAmount,\n            decimals: pDecimals,\n        }),\n        decimals: pDecimals,\n    });\n    return {\n        maxAmount,\n        maxAmountText,\n    };\n};\n\nexport const getSendData = ({\n    send,\n    selectedPrivacy,\n    state,\n}: {\n    send: ISendReducer;\n    selectedPrivacy: ISelectedPrivacy;\n    state: IRootState;\n}) => {\n    const {\n        actived,\n        isFetching,\n        totalFeePrv,\n        // userFeePrv,\n        totalFeePrvText,\n        totalFeePToken,\n        // userFeePToken,\n        totalFeePTokenText,\n        feePrv,\n        feePToken,\n        screen,\n        minAmount,\n        minAmountText,\n        isAddressValidated,\n        isValidETHAddress,\n        // userFees,\n        // fast2x,\n        // feePrvText,\n        // feePTokenText,\n        // minFeePTokenText,\n        // minFeePrvText,\n        // maxFeePTokenText,\n        // maxFeePrvText,\n        // amountText,\n        // rate,\n    } = send;\n    // const { amount } = selectedPrivacy;\n    const isUseTokenFee = actived !== COINS.PRV.id;\n    // const feeUnit = isUseTokenFee\n    //   ? selectedPrivacy?.symbol || selectedPrivacy.pSymbol\n    //   : COINS.PRV.symbol;\n    const feePDecimals = isUseTokenFee ? selectedPrivacy?.pDecimals : COINS.PRV.pDecimals;\n    const fee = isUseTokenFee ? feePToken : feePrv;\n    const feeText = format.formatAmount({\n        originalAmount: fee,\n        decimalDigits: false,\n        clipAmount: false,\n        decimals: feePDecimals,\n    });\n    // const userFee = isUseTokenFee ? userFeePToken : userFeePrv;\n    const totalFeeText = isUseTokenFee ? totalFeePTokenText : totalFeePrvText;\n    const totalFee = isUseTokenFee ? totalFeePToken : totalFeePrv;\n    const { maxAmount, maxAmountText } = getMaxAmount({\n        selectedPrivacy,\n        isUseTokenFee,\n        totalFee,\n    });\n    let titleBtnSubmit = screen === 'Send' ? 'Send anonymously' : 'Unshield my crypto';\n    if (isFetching) {\n        titleBtnSubmit = 'Calculating fee...';\n    }\n\n    const selector = formValueSelector(FORM_CONFIGS.formName);\n    const inputAmount = selector(state, FORM_CONFIGS.amount);\n    const inputAddress = selector(state, FORM_CONFIGS.toAddress);\n    const inputMemo = selector(state, FORM_CONFIGS.memo);\n    const valid = isValid(FORM_CONFIGS.formName)(state);\n    const submitting = isSubmitting(FORM_CONFIGS.formName)(state);\n    const isIncognitoAddress = isEmpty(inputAddress)\n        ? false\n        : keyServices.checkPaymentAddress(inputAddress) || selectedPrivacy.isNativeToken;\n    const disabledForm = !valid || submitting || !fee || isFetching || !isAddressValidated || !isValidETHAddress;\n    return {\n        fee,\n        feeText,\n        feeUnitByTokenId: actived,\n        feePDecimals,\n\n        totalFee,\n        totalFeeText,\n\n        minAmount,\n        minAmountText,\n\n        maxAmount,\n        maxAmountText,\n\n        isUsedPRVFee: !isUseTokenFee,\n        isUseTokenFee,\n\n        isUnShield: screen === 'UnShield',\n        isSend: screen === 'Send',\n\n        // hasMultiLevel: userFees?.hasMultiLevel,\n\n        isIncognitoAddress,\n\n        inputAmount,\n        inputAddress,\n        inputMemo,\n\n        titleBtnSubmit,\n\n        disabledForm,\n\n        // amount,\n        // isUseTokenFee,\n        // feeUnit,\n        // feePDecimals,\n        // userFee,\n\n        // totalFee,\n        // totalFeeText,\n\n        // minAmount,\n        // minAmountText,\n        // maxAmount,\n        // maxAmountText,\n\n        // fee,\n        // titleBtnSubmit,\n        // feeText,\n\n        // isETH,\n        // isBTC,\n\n        // fee,\n        // feeText,\n        // feeUnit,\n        // feeUnitByTokenId: actived,\n        // feePDecimals,\n        // minFee: isUseTokenFee ? minFeePTokenText : minFeePrvText,\n        // maxFee: isUseTokenFee ? maxFeePTokenText : maxFeePrvText,\n        // amount,\n        // amountText,\n        // screen,\n        // rate,\n\n        // maxAmount,\n        // maxAmountText,\n\n        // pDecimals: selectedPrivacy?.pDecimals,\n        // titleBtnSubmit,\n\n        // isAddressValidated,\n        // isValidETHAddress,\n        // isETH,\n        // userFees,\n        // userFee,\n        // totalFee,\n        // totalFeeText,\n        // types,\n        // actived,\n        // fast2x,\n        // feePrv,\n        // feePToken,\n        // feePrvText,\n        // feePTokenText,\n        // isBTC,\n    };\n};\n\nexport const getTotalFee = ({\n    fast2x = false,\n    userFeesData,\n    feeEst,\n    decimals,\n    isUsedPRVFee,\n    hasMultiLevel,\n}: {\n    fast2x?: boolean;\n    userFeesData?: IUserFeesData;\n    feeEst?: number;\n    decimals: number;\n    isUsedPRVFee: boolean;\n    hasMultiLevel: boolean;\n}) => {\n    let totalFee;\n    let totalFeeText;\n    let userFee;\n    try {\n        const userFees = isUsedPRVFee ? userFeesData?.PrivacyFees : userFeesData?.TokenFees;\n        userFee = new BigNumber(userFees?.Level1 || '');\n        if (hasMultiLevel) {\n            userFee = new BigNumber(fast2x ? userFees?.Level2 || '' : userFees?.Level1 || '');\n        }\n        totalFee = userFee.plus(feeEst || 0);\n        totalFee = floor(totalFee.toNumber());\n        totalFeeText = format.formatAmount({\n            originalAmount: totalFee,\n            decimals,\n            clipAmount: false,\n            decimalDigits: false,\n        });\n    } catch (error) {\n        throw error;\n    }\n    return { totalFee, totalFeeText, userFee };\n};\n\nexport const hasMultiLevelUsersFee = (data: IUserFeesData) => !!data?.PrivacyFees?.Level2 || !!data?.TokenFees?.Level2;\n\nexport const removeAllSpace = (str: string) => {\n    if (isEmpty(str)) return str;\n    return str.replace(/\\s/g, '');\n};\n\nexport const standardizedAddress = (address: string) => {\n    if (!address) {\n        return '';\n    }\n    const indexParams = address?.indexOf('?');\n    let newAddress = address;\n    if (indexParams !== -1) {\n        newAddress = address.substring(0, indexParams);\n    }\n    return removeAllSpace(newAddress);\n};\n","import { getLocalDecimalSeparator, saveLocalDecimalSeparator } from 'src/services';\n\nexport let DECIMAL_SEPARATOR = '.';\nexport let GROUP_SEPARATOR = ',';\n\nexport function setDecimalSeparator(newSeparator: string) {\n    if (DECIMAL_SEPARATOR !== newSeparator) {\n        GROUP_SEPARATOR = DECIMAL_SEPARATOR;\n        DECIMAL_SEPARATOR = newSeparator;\n        saveLocalDecimalSeparator(DECIMAL_SEPARATOR);\n    }\n}\n\nexport const loadSeparator = () => {\n    const savedDecimalSeparator = getLocalDecimalSeparator();\n    if (!savedDecimalSeparator) {\n        setDecimalSeparator('.');\n        saveLocalDecimalSeparator('.');\n    } else {\n        DECIMAL_SEPARATOR = savedDecimalSeparator;\n        if (savedDecimalSeparator === '.') {\n            GROUP_SEPARATOR = ',';\n        } else {\n            GROUP_SEPARATOR = '.';\n        }\n    }\n};\n\nexport function getDecimalSeparator() {\n    return DECIMAL_SEPARATOR;\n}\n\nexport function getGroupSeparator() {\n    return GROUP_SEPARATOR;\n}\n","export { default } from './Modal';\nexport * from './Modal.actions';\nexport * from './Modal.constant';\nexport * from './Modal.interface';\nexport * from './Modal.reducer';\nexport * from './Modal.selector';\n","export const api = () => null;\n","import isEmpty from 'lodash/isEmpty';\nimport findIndex from 'lodash/findIndex';\nimport { CONSTANT_KEYS } from 'src/constants';\nimport { DECIMAL_SEPARATOR } from 'src/utils/separator';\n\nexport const KEY_SAVE = {\n    USER: CONSTANT_KEYS.USER,\n    LIST_DEVICE: CONSTANT_KEYS.LIST_DEVICE,\n    LIST_TOKEN: CONSTANT_KEYS.LIST_TOKEN,\n    DEX: CONSTANT_KEYS.DEX,\n    DEX_HISTORY: CONSTANT_KEYS.DEX_HISTORY,\n    UNISWAP_HISTORY: CONSTANT_KEYS.UNISWAP_HISTORY,\n    SEEN_DEPOSIT_GUIDE: CONSTANT_KEYS.SEEN_DEPOSIT_GUIDE,\n    PIN: CONSTANT_KEYS.PIN,\n    DECIMAL_SEPARATOR: '$decimal_separator',\n    VERIFY_CODE: '$verify_code',\n    ACCOUNT_QRCODE: '$account_qrcode',\n    DEVICE_ID: '$device_id',\n    WITHDRAWAL_DATA: CONSTANT_KEYS.WITHDRAWAL_DATA,\n    BACKUP_STAKE_KEY: CONSTANT_KEYS.BACKUP_STAKE_KEY,\n    VIEW_UNISWAP_TOOLTIP: '$uniswap_tooltip',\n    UNISWAP_AIRDROP: '$uniswap_airdrop',\n    SCREEN_STAKE_GUIDE: CONSTANT_KEYS.SCREEN_STAKE_GUIDE,\n    WEBVIEW: '$webview',\n    PROVIDE_TXS: CONSTANT_KEYS.PROVIDE_TXS,\n    NODECLEARED: '$node_cleared',\n    SHIP_ADDRESS: '$ship_address',\n    IS_MAINNET: 'IS_MAINNET',\n};\n\nexport const getItem = (key: string) => localStorage.getItem(key);\n\nexport const setItem = (key: string, value: string) => localStorage.setItem(key, value);\n\nexport const isMainnetEnv = () => getItem(KEY_SAVE.IS_MAINNET) === 'false';\n\nexport const getListDevices = () => {\n    const listDevice = getItem(KEY_SAVE.LIST_DEVICE) || '';\n    return !isEmpty(listDevice) ? JSON.parse(listDevice) : [];\n};\n\nexport const saveListDevices = (jsonListDevice: any[]) => {\n    const listDevices = JSON.stringify(jsonListDevice);\n    setItem(KEY_SAVE.LIST_DEVICE, listDevices);\n};\n\nexport const removeDevice = (device: any, list: any[]) => {\n    let listDevices: any[] = [];\n    listDevices = list.filter((item) => item.ProductId !== device.ProductId);\n    saveListDevices(listDevices);\n};\n\nexport const updateDevice = (deviceJson: any) => {\n    const list = getListDevices();\n    const index = findIndex(list, ['product_name', deviceJson.product_name]);\n    if (index >= 0) {\n        list[index] = {\n            ...list[index],\n            ...deviceJson,\n        };\n    } else {\n        list.push(deviceJson);\n    }\n    saveListDevices(list);\n};\n/**\n * return {JSON} : deviceInfo\n */\nexport const getDevice = (productId: string | number) => {\n    if (isEmpty(productId)) throw new Error('product_id is empty');\n    const list = getListDevices();\n    const index = findIndex(list, ['product_id', productId]);\n    return list[index];\n};\n\nexport const getListToken = () => {\n    const list = getItem(KEY_SAVE.LIST_TOKEN);\n    return JSON.parse(list || '[]');\n};\n\nexport const saveListToken = (listToken: any[]) => setItem(KEY_SAVE.LIST_TOKEN, JSON.stringify(listToken));\n\nexport const saveDeviceKeyInfo = (productId: string | number, keyInfo: any) => {\n    if (isEmpty(productId) && isEmpty(keyInfo)) {\n        const deviceJSON = getDevice(productId);\n        if (deviceJSON) {\n            deviceJSON.keyInfo = {\n                ...deviceJSON.keyInfo,\n                ...keyInfo,\n            };\n            updateDevice(deviceJSON);\n        }\n    }\n};\nexport const saveUpdatingFirware = (productId: string | number, isUpdating: boolean) => {\n    if (isEmpty(productId)) {\n        const deviceJSON = getDevice(productId);\n        if (deviceJSON) {\n            deviceJSON.minerInfo = {\n                ...deviceJSON.minerInfo,\n                isUpdating,\n            };\n            updateDevice(deviceJSON);\n        }\n    }\n};\n\nexport const logout = () => {\n    localStorage.removeItem(KEY_SAVE.USER);\n    localStorage.removeItem(KEY_SAVE.LIST_DEVICE);\n};\n\nexport const saveUserInfo = (jsonUser: string) => {\n    const oldUser = getItem(KEY_SAVE.USER) || '';\n    if (jsonUser !== oldUser) {\n        const data = { ...JSON.parse(oldUser), ...JSON.parse(jsonUser) };\n        setItem(KEY_SAVE.USER, JSON.stringify(data));\n    }\n};\n\nexport const saveDEXInfo = (dexInfo: any) => {\n    setItem(KEY_SAVE.DEX, JSON.stringify(dexInfo));\n};\n\nexport const getDEXInfo = () => {\n    const dexString = getItem(KEY_SAVE.DEX) || '';\n    return isEmpty(dexString) ? null : JSON.parse(dexString);\n};\n\nexport const saveDexHistory = (swapHistory: any) => {\n    setItem(KEY_SAVE.DEX_HISTORY, JSON.stringify(swapHistory));\n};\n\nexport const getDexHistory = () => {\n    const swapHistory = getItem(KEY_SAVE.DEX_HISTORY) || '';\n    return isEmpty(swapHistory) ? [] : JSON.parse(swapHistory);\n};\n\nexport const saveSeenDepositGuide = (firstTime: any) => {\n    setItem(KEY_SAVE.SEEN_DEPOSIT_GUIDE, JSON.stringify(firstTime));\n};\n\nexport const getSeenDepositGuide = () => {\n    const seenDepositGuide = getItem(KEY_SAVE.SEEN_DEPOSIT_GUIDE) || '';\n    return isEmpty(seenDepositGuide) ? false : JSON.parse(seenDepositGuide);\n};\n\nexport const getPIN = () => {\n    const pin = getItem(KEY_SAVE.PIN);\n    return pin || '';\n};\n\nexport const savePIN = (newPin: any) => {\n    setItem(KEY_SAVE.PIN, newPin);\n};\n\nexport const saveLocalDecimalSeparator = (separator: string) => {\n    return setItem(KEY_SAVE.DECIMAL_SEPARATOR, separator);\n};\n\nexport const getLocalDecimalSeparator = () => {\n    return getItem(KEY_SAVE.DECIMAL_SEPARATOR) || DECIMAL_SEPARATOR;\n};\n\nexport const saveVerifyCode = (verifyCode: string) => {\n    return setItem(KEY_SAVE.VERIFY_CODE, verifyCode);\n};\n\nexport const getVerifyCode = () => {\n    const verifyCode = getItem(KEY_SAVE.VERIFY_CODE);\n    return verifyCode;\n};\n\nexport const saveAccountWithQRCode = (account: any) => {\n    return setItem(KEY_SAVE.ACCOUNT_QRCODE, JSON.stringify(account));\n};\n\nexport const getAccountWithQRCode = () => {\n    const verifyCode = getItem(KEY_SAVE.ACCOUNT_QRCODE);\n    return verifyCode;\n};\n\nexport const getSyncReceivers = (keySync: string) => {\n    return getItem(keySync);\n};\n\nexport const setSyncReceivers = (keySync: string, value: any) => {\n    return setItem(keySync, JSON.stringify(value));\n};\n\n/**\n * @returns {Array<Object>}\n */\nexport const getWithdrawalData = () => {\n    try {\n        const jsonData = getItem(KEY_SAVE.WITHDRAWAL_DATA);\n\n        if (!jsonData || isEmpty(jsonData)) {\n            return [];\n        }\n\n        return JSON.parse(jsonData);\n    } catch {\n        return [];\n    }\n};\n\n/**\n * Add withdrawal data\n * @param {Object}data\n * @returns {Promise<void>}\n */\nexport const addWithdrawalData = (data: any) => {\n    const txs = getWithdrawalData();\n    txs.push(data);\n    return setItem(KEY_SAVE.WITHDRAWAL_DATA, JSON.stringify(txs));\n};\n\n/**\n * Remove withdrawal data\n * @param {string} burningTxId\n * @returns {Promise<void>}\n */\nexport const removeWithdrawalData = (burningTxId: string) => {\n    let txs = getWithdrawalData();\n    txs = txs.filter((tx: any) => tx.burningTxId !== burningTxId);\n    return setItem(KEY_SAVE.WITHDRAWAL_DATA, JSON.stringify(txs));\n};\n\nexport const saveDeviceId = (deviceId: string) => {\n    return setItem(KEY_SAVE.DEVICE_ID, deviceId);\n};\n\nexport const getDeviceId = () => {\n    return getItem(KEY_SAVE.DEVICE_ID) || '';\n};\n\nexport const saveBackupStakeKey = () => {\n    return setItem(KEY_SAVE.BACKUP_STAKE_KEY, JSON.stringify(true));\n};\n\nexport const getBackupStakeKey = () => {\n    return getItem(KEY_SAVE.BACKUP_STAKE_KEY);\n};\n\nexport const saveViewUniswapTooltip = (type: string) => {\n    return setItem(KEY_SAVE.VIEW_UNISWAP_TOOLTIP, type);\n};\n\nexport const getViewUniswapTooltip = (type: string) => {\n    const value = getItem(KEY_SAVE.VIEW_UNISWAP_TOOLTIP);\n    saveViewUniswapTooltip(type);\n    return value;\n};\n\nexport const resetViewUniswapTooltip = () => {\n    return setItem(KEY_SAVE.VIEW_UNISWAP_TOOLTIP, '');\n};\n\nexport const resetUniswapAirdrop = () => {\n    return setItem(KEY_SAVE.UNISWAP_AIRDROP, '');\n};\n\nexport const getScreenStakeGuilde = () => {\n    return getItem(KEY_SAVE.SCREEN_STAKE_GUIDE);\n};\n\nexport const saveScreenStakeGuide = () => {\n    return setItem(KEY_SAVE.SCREEN_STAKE_GUIDE, JSON.stringify(true));\n};\n\n// For webview caching\nexport const getUriWebviewCommunity = () => {\n    return getItem(KEY_SAVE.WEBVIEW);\n};\n\nexport const setUriWebviewCommunity = (value: string) => {\n    return setItem(KEY_SAVE.WEBVIEW, value);\n};\n\nexport const getProvideTxs = () => {\n    const value = getItem(KEY_SAVE.PROVIDE_TXS);\n    return value ? JSON.parse(value) : [];\n};\n\nexport const saveProvideTxs = (txs: any[]) => {\n    return setItem(KEY_SAVE.PROVIDE_TXS, JSON.stringify(txs || []));\n};\n\nexport const getNodeCleared = () => {\n    return getItem(KEY_SAVE.NODECLEARED);\n};\n\nexport const setNodeCleared = (value: string) => {\n    return setItem(KEY_SAVE.NODECLEARED, value);\n};\n\nexport const getShipAddress = () => {\n    const value = getItem(KEY_SAVE.SHIP_ADDRESS);\n    return JSON.parse(value || '{}');\n};\n\nexport const setShipAddress = (value: string) => {\n    return setItem(KEY_SAVE.SHIP_ADDRESS, JSON.stringify(value || {}));\n};\n","export const MAINNET_FULLNODE = 'https://lb-fullnode.incognito.org/fullnode';\nexport const TESTNET_FULLNODE = 'https://testnet.incognito.org/fullnode';\nexport const TESTNET1_FULLNODE = 'http://51.83.36.184:20002/fullnode';\nexport const PRODUCTION_API = 'https://api-service.incognito.org';\nexport const STAGING_API = 'https://staging-api-service.incognito.org';\nexport const PRODUCTION_API_2 = 'https://device-network.incognito.org';\nexport const STAGING_API_2 = 'https://device-network-staging.incognito.org';\n\nexport interface IServer {\n    id: string;\n    default?: boolean;\n    address: string;\n    name: string;\n    chainURL: string;\n    apiURL: string;\n    exploreChainURL: string;\n    api2URL: string;\n    exploreBinanceURL: string;\n    etherscanURL: string;\n}\n\nexport const TEST_NODE_SERVER = {\n    id: 'testnode',\n    default: false,\n    address: 'http://51.161.117.88:6354',\n    name: 'Test Node',\n};\n\nexport const MAINNET_SERVER: IServer = {\n    id: 'mainnet',\n    default: true,\n    address: MAINNET_FULLNODE,\n    name: 'Mainnet',\n    chainURL: MAINNET_FULLNODE,\n    apiURL: PRODUCTION_API,\n    api2URL: PRODUCTION_API_2,\n    exploreChainURL: 'https://mainnet.incognito.org',\n    exploreBinanceURL: 'https://explorer.binance.org',\n    etherscanURL: 'https://etherscan.io',\n};\n\nexport const TESTNET_SERVER: IServer = {\n    id: 'testnet',\n    default: false,\n    address: TESTNET_FULLNODE,\n    name: 'Testnet',\n    chainURL: TESTNET_FULLNODE,\n    apiURL: STAGING_API,\n    api2URL: STAGING_API_2,\n    exploreChainURL: 'https://testnet.incognito.org',\n    exploreBinanceURL: 'https://testnet-explorer.binance.org',\n    etherscanURL: 'https://kovan.etherscan.io',\n};\n\nexport const LOCAL_SERVER: IServer = {\n    id: 'local',\n    default: false,\n    address: 'http://localhost:9334',\n    name: 'Local',\n    chainURL: '',\n    apiURL: '',\n    api2URL: '',\n    exploreChainURL: '',\n    exploreBinanceURL: '',\n    etherscanURL: '',\n};\n\nexport const TEST_NET_1_SERVER = {\n    id: 'testnet1',\n    default: false,\n    address: TESTNET1_FULLNODE,\n    name: 'Testnet 1',\n};\n\nexport const DEFAULT_LIST_SERVER = [LOCAL_SERVER, MAINNET_SERVER, TESTNET_SERVER];\n","import { IObject } from 'src/utils';\n\nexport const caches: IObject = {};\n\nexport const cache = (key: string, data: any, expiredTime: number) => {\n    caches[key] = {\n        data,\n        expiredTime: new Date().getTime() + expiredTime,\n    };\n};\n\nexport function getCache(key: string) {\n    const cacheData = caches[key];\n    if (cacheData && cacheData.expiredTime > new Date().getTime()) {\n        return cacheData.data;\n    }\n    return null;\n}\n\nexport const clearCache = (key: string) => {\n    if (!caches[key]) {\n        return;\n    }\n    delete caches[key];\n};\n\nexport const cachePromise = async (key: string, promiseFunc: any, expiredTime?: number) => {\n    const cachedData = getCache(key);\n    if (cachedData !== null) {\n        return cachedData;\n    }\n    const data = await promiseFunc();\n    cache(key, data, expiredTime || 40000);\n    return data;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Spinner from 'react-bootstrap/esm/Spinner';\nimport { ILanguage } from 'src/i18n';\nimport { translateSelector } from 'src/module/Configs';\nimport { VerifiedIcon } from 'src/components/Icons';\nimport { replace, round } from 'lodash';\nimport { COLORS } from 'src/styles';\nimport { isGettingBalanceByTokenIdSelector } from 'src/redux';\nimport withToken, { IMergePropsToken } from './Token.enhance';\nimport { AmountStyled, BalanceStyled, NameStyled, TextStyled, TokenStyled as Styled } from './Token.styled';\nimport { getPrivacyDataByTokenIDSelector } from './Token.selector';\nimport { ITokenChildProps, ISelectedPrivacy } from './Token.interface';\n\nexport const Name = React.memo((props: ITokenChildProps) => {\n    const { tokenId, classNameCustom, classNameTextCustom } = props;\n    const token: ISelectedPrivacy = useSelector(getPrivacyDataByTokenIDSelector)(tokenId);\n    return (\n        <NameStyled className={classNameCustom}>\n            <TextStyled className={`fw-medium  ellipsis ${classNameTextCustom}`}>{token.name}</TextStyled>\n            {token?.isVerified && <VerifiedIcon />}\n        </NameStyled>\n    );\n});\n\nexport const Amount = React.memo((props: ITokenChildProps) => {\n    const { tokenId, classNameCustom, classNameTextCustom } = props;\n    const token: ISelectedPrivacy = useSelector(getPrivacyDataByTokenIDSelector)(tokenId);\n    const loadingBalance = useSelector(isGettingBalanceByTokenIdSelector)(token.tokenId);\n    if (loadingBalance) {\n        return <Spinner animation=\"border\" size=\"sm\" />;\n    }\n    return (\n        <AmountStyled className={classNameCustom}>\n            <TextStyled className={`fw-medium right-text ellipsis ${classNameTextCustom}`}>{`${token.formatAmount} ${\n                token.symbol || token?.pSymbol\n            }`}</TextStyled>\n        </AmountStyled>\n    );\n});\n\nexport const Balance = React.memo((props: ITokenChildProps) => {\n    const { tokenId, classNameCustom, classNameTextCustom } = props;\n    const token: ISelectedPrivacy = useSelector(getPrivacyDataByTokenIDSelector)(tokenId);\n    return (\n        <BalanceStyled className={classNameCustom}>\n            <TextStyled className={`sub-text right-text ellipsis ${classNameTextCustom}`}>\n                {`$${token.formatBalanceByUsd}`}\n            </TextStyled>\n        </BalanceStyled>\n    );\n});\n\nexport const PerChange = React.memo((props: ITokenChildProps) => {\n    const { tokenId, classNameCustom } = props;\n    const token: ISelectedPrivacy = useSelector(getPrivacyDataByTokenIDSelector)(tokenId);\n    const { change } = token;\n    const isTokenDecrease = change[0] === '-';\n    const changeToNumber = Number(replace(change, '-', ''));\n    if (changeToNumber === 0) {\n        return null;\n    }\n    const tokenChange = `${isTokenDecrease ? '-' : '+'}${round(changeToNumber, 2)}%`;\n    return (\n        <TextStyled\n            className={`per-change ${classNameCustom}`}\n            style={{\n                color: isTokenDecrease ? COLORS.red : COLORS.green,\n            }}\n        >\n            {tokenChange}\n        </TextStyled>\n    );\n});\n\nexport const Price = React.memo((props: ITokenChildProps) => {\n    const { tokenId, classNameCustom } = props;\n    const token: ISelectedPrivacy = useSelector(getPrivacyDataByTokenIDSelector)(tokenId);\n    return (\n        <BalanceStyled className={classNameCustom}>\n            <TextStyled className=\"sub-text ellipsis price\">\n                {`$${token.formatPriceByUsd}`}\n                <PerChange tokenId={tokenId} />\n            </TextStyled>\n        </BalanceStyled>\n    );\n});\n\nexport const Followed = React.memo((props: ITokenChildProps) => {\n    const { tokenId } = props;\n    const token: ISelectedPrivacy = useSelector(getPrivacyDataByTokenIDSelector)(tokenId);\n    const translate: ILanguage = useSelector(translateSelector);\n    const addTokenTs = translate.token.addToken;\n    if (token.isFollowed) {\n        return <TextStyled>{addTokenTs.added}</TextStyled>;\n    }\n    return null;\n});\n\nexport const Symbol = React.memo((props: ITokenChildProps) => {\n    const { tokenId } = props;\n    const token: ISelectedPrivacy = useSelector(getPrivacyDataByTokenIDSelector)(tokenId);\n    return <TextStyled className=\"sub-text ellipsis\">{token.symbol || token.pSymbol}</TextStyled>;\n});\n\nconst Token = (props: IMergePropsToken) => {\n    const { tokenId, handleOnClick } = props;\n    return (\n        <Styled to=\"#\" className=\"token-container\" onClick={handleOnClick}>\n            <div className=\"extra\">\n                <Name classNameCustom=\"extra-item\" tokenId={tokenId} />\n                <Amount classNameCustom=\"extra-item\" tokenId={tokenId} />\n            </div>\n            <div className=\"extra extra-bottom\">\n                <Price tokenId={tokenId} classNameCustom=\"extra-item\" />\n                <Balance tokenId={tokenId} classNameCustom=\"extra-item\" />\n            </div>\n        </Styled>\n    );\n};\n\nexport default withToken(Token);\n","export const ACTION_CACHE_TX_HISTORY = `[history] Cache tx history`;\nexport const LIMIT_RECEIVE_HISTORY_ITEM = 20;\nexport const MAX_LIMIT_RECEIVE_HISTORY_ITEM = 50;\nexport const ACTION_FETCHING_CACHE_HISTORY = `[history][cacheHistory] Fetching history cache`;\nexport const ACTION_FETCHED_CACHE_HISTORY = `[history][cacheHistory] Fetched history cache`;\n","export { default as http } from './http';\n","import BigNumber from 'bignumber.js';\nimport { TxHistoryModelParam, CONSTANT } from 'incognito-js/build/web/browser';\nimport { createSelector } from 'reselect';\nimport { keySetAccountSelector } from 'src/module/Account';\nimport { IRootState } from 'src/redux/interface';\nimport { isEmpty } from 'lodash';\nimport { format } from 'src/utils';\nimport { selectedPrivacySelector } from 'src/module/Token';\nimport { COINS } from 'src/constants';\nimport { getStatusData, getTypeData } from './History.utils';\nimport { ICacheHistoryTokenSelector } from './History.interface';\n\nconst { HISTORY_TYPE } = CONSTANT.TX_CONSTANT;\n\nexport const historySelector = createSelector(\n    (state: IRootState) => state,\n    (state) => state.history,\n);\n\nexport const historyCacheSelector = createSelector(historySelector, (history) => history.cacheHistory);\n\nexport const historyCacheDataSelector = createSelector(\n    historyCacheSelector,\n    selectedPrivacySelector,\n    keySetAccountSelector,\n    (historyState, selectedPrivacy, keySet) => {\n        const { histories } = historyState;\n        if (!histories) {\n            return [];\n        }\n        const cacheHistory: ICacheHistoryTokenSelector[] = histories.map((history: TxHistoryModelParam) => {\n            const { historyType, nativeTokenInfo, privacyTokenInfo } = history;\n            let amount = '';\n            let fee = '';\n            let useNativeFee = false;\n            let usePrivacyFee = false;\n            let paymentAddress = '';\n            if (historyType === HISTORY_TYPE.SEND_NATIVE_TOKEN) {\n                amount = nativeTokenInfo.amount;\n                fee = nativeTokenInfo.fee;\n                useNativeFee = true;\n                usePrivacyFee = false;\n                paymentAddress = nativeTokenInfo.paymentInfoList[0].paymentAddressStr || '';\n            }\n            if (historyType === HISTORY_TYPE.SEND_PRIVACY_TOKEN) {\n                amount = privacyTokenInfo?.amount || '';\n                paymentAddress = privacyTokenInfo?.paymentInfoList[0].paymentAddressStr || '';\n                if (isEmpty(nativeTokenInfo.fee)) {\n                    useNativeFee = false;\n                    usePrivacyFee = true;\n                    fee = privacyTokenInfo?.fee || '';\n                }\n                if (isEmpty(privacyTokenInfo?.fee)) {\n                    useNativeFee = true;\n                    usePrivacyFee = false;\n                    fee = nativeTokenInfo.fee;\n                }\n            }\n            const symbol = selectedPrivacy.symbol || selectedPrivacy.pSymbol;\n            const feeSymbol = useNativeFee ? COINS.PRV.symbol : selectedPrivacy.symbol || selectedPrivacy.pSymbol;\n            const amountFormated = format.formatAmount({\n                originalAmount: new BigNumber(amount).toNumber(),\n                decimals: selectedPrivacy?.pDecimals,\n            });\n            const feeFormated = format.formatAmount({\n                originalAmount: new BigNumber(fee).toNumber(),\n                decimals: selectedPrivacy?.pDecimals,\n                decimalDigits: false,\n            });\n            const { statusMessage } = getStatusData(history);\n            const historyItem = {\n                ...history,\n                amountFormated,\n                timeFormated: format.formatUnixDateTime(history?.lockTime, 'MMM DD HH:mm A'),\n                feeFormated,\n                statusMessage,\n                type: getTypeData(\n                    history?.historyType || HISTORY_TYPE.SEND_NATIVE_TOKEN,\n                    history,\n                    keySet.paymentAddressKeySerialized,\n                ),\n                isIncognitoTx: true,\n                fee,\n                amount,\n                useNativeFee,\n                usePrivacyFee,\n                symbol,\n                feeSymbol,\n                paymentAddress,\n            };\n            return historyItem;\n        });\n        return cacheHistory;\n    },\n);\n\nexport const historyCacheByTxIdSelector = createSelector(historyCacheDataSelector, (history) => (txId: string) =>\n    history && history.find((h: ICacheHistoryTokenSelector) => h.txId === txId),\n);\n","export * from './Checkbox';\nexport * from './Toast';\nexport * from './SpinnerContainer';\nexport * from './Button';\nexport * from './ToggleSwitch';\n","import { createSelector } from 'reselect';\nimport { IRootState } from 'src/redux/interface';\nimport { preloadSelector } from '../Preload';\nimport { IWalletReducer } from './Wallet.interface';\n\nexport const walletSelector = createSelector(\n    (state: IRootState) => state.wallet,\n    (wallet: IWalletReducer) => wallet,\n);\n\nexport const walletDataSelector = createSelector(walletSelector, (wallet) => wallet.wallet);\n\nexport const walletIdSelector = createSelector(walletSelector, preloadSelector, (wallet, preload) => {\n    const { mainnet } = preload.configs;\n    const field = mainnet ? 'mainnet' : 'testnet';\n    return wallet[field].walletId;\n});\n","export const ACTION_FETCHED = `[wallet] Fetched data`;\nexport const ACTION_LOAD_WALLET = `[wallet] Loaded wallet`;\n","export const ACTION_FETCHED = `[configs] Fetched data`;\nexport const ACTION_CHANGE_LANGUAGE = `[configs] Change language`;\n","export const ACTION_FETCHED = `[setting] Fetched data`;\nexport const ACTION_TOGGLE_HOME_CONFIGS = `[setting] Toggle home configs`;\n","import includes from 'lodash/includes';\nimport toLower from 'lodash/toLower';\nimport convert from 'src/utils/convert';\nimport format from 'src/utils/format';\nimport BigNumber from 'bignumber.js';\nimport { IPToken, ISelectedPrivacy } from './Token.interface';\n\nexport const handleFilterTokenByKeySearch = ({ tokens, keySearch = '' }: { tokens: any[]; keySearch?: string }) =>\n    tokens.filter(\n        (token) =>\n            includes(toLower(token?.displayName), keySearch) ||\n            includes(toLower(token?.name), keySearch) ||\n            includes(toLower(token?.symbol), keySearch) ||\n            includes(toLower(token?.pSymbol), keySearch) ||\n            includes(toLower(token?.networkName), keySearch),\n    ) || tokens;\n\nexport const getPrice = ({ token, tokenUSDT }: { token: ISelectedPrivacy; tokenUSDT: IPToken | any }) => {\n    const defaultValue = {\n        pricePrv: 0,\n        change: '0',\n        priceUsd: 0,\n    };\n    if (!tokenUSDT) {\n        return defaultValue;\n    }\n    const { pricePrv, priceUsd } = tokenUSDT;\n    if (token?.isNativeToken) {\n        return {\n            change: '0',\n            pricePrv: 1,\n            priceUsd: priceUsd / pricePrv || 0,\n        };\n    }\n    return {\n        change: token?.change || defaultValue.change,\n        pricePrv: token?.pricePrv !== 0 ? token?.pricePrv : 0,\n        priceUsd: token?.priceUsd !== 0 ? token?.priceUsd : 0,\n    };\n};\n\ninterface IGetFormatAmountByUSD {\n    amount: number;\n    priceUsd: number;\n    decimals?: number;\n}\n\nexport const getFormatAmountByUSD: (payload: IGetFormatAmountByUSD) => string = (payload: IGetFormatAmountByUSD) => {\n    const { amount, priceUsd, decimals = 6 } = payload;\n    let formatAmount = '0';\n    try {\n        const bnHumanAmount = new BigNumber(amount).multipliedBy(priceUsd).toNumber().toString();\n        const originalAmount = convert.toOriginalAmount({\n            humanAmount: String(bnHumanAmount),\n            decimals,\n        });\n        formatAmount = format.formatAmount({\n            originalAmount,\n            decimals,\n        });\n    } catch (error) {\n        formatAmount = '0';\n        throw error;\n    }\n    return formatAmount;\n};\n","import { createSelector } from 'reselect';\nimport { IRootState } from 'src/redux/interface';\n\nexport const preloadSelector = createSelector(\n    (state: IRootState) => state.preload,\n    (preload) => preload,\n);\n\nexport const chainURLSelector = createSelector(preloadSelector, (preload) => preload.configs.chainURL);\n\nexport const isMainnetSelector = createSelector(preloadSelector, (preload) => preload.configs.mainnet);\n\nexport const serverSelector = createSelector(preloadSelector, (preload) => preload.server || {});\n\nexport const apiURLSelector = createSelector(serverSelector, (server) => server.apiURL);\n\nexport const apiURL2Selector = createSelector(serverSelector, (server) => server.api2URL);\n","export { default } from './SelectAccount';\nexport * from './SelectAccount.btn';\n","export { default } from './Detail';\nexport * from './Detail.interface';\nexport * from './Detail.route';\n","import { AccountInstance } from 'incognito-js/build/web/browser';\nimport { createSelector } from 'reselect';\nimport { IRootState } from 'src/redux/interface';\nimport { isMainnetSelector } from 'src/module/Preload';\nimport { defaultAccountSelector, listAccountSelector } from 'src/module/Account/Account.selector';\n\nexport const addressBookSelector = createSelector(\n    (state: IRootState) => state.addressBook,\n    (addressBook) => addressBook,\n);\n\nexport const incognitoAddrSelector = createSelector(\n    addressBookSelector,\n    (addressBook) => addressBook.incognitoAddress || [],\n);\nexport const externalAddrSelector = createSelector(\n    addressBookSelector,\n    (addressBook) => addressBook.externalAddress || [],\n);\n\nexport const keychainAddrSelector = createSelector(\n    listAccountSelector,\n    defaultAccountSelector,\n    isMainnetSelector,\n    (accounts, defaultAccount, mainnet) =>\n        (accounts &&\n            defaultAccount &&\n            accounts\n                .filter(\n                    (account: AccountInstance) =>\n                        account.key.keySet.paymentAddressKeySerialized !==\n                        defaultAccount.key.keySet.paymentAddressKeySerialized,\n                )\n                .map((account: AccountInstance) => ({\n                    name: account.name,\n                    address: account.key.keySet.paymentAddressKeySerialized,\n                    type: 1,\n                    mainnet,\n                }))) ||\n        [],\n);\n","import { IObject } from 'src/utils';\nimport { ACTION_TOGGLE_TOAST } from './Toast.constant';\n\nexport const TOAST_CONFIGS = {\n    error: -1,\n    success: 0,\n    warning: 1,\n    custom: 2,\n};\n\nexport const TOAST_CONFIGS_CLASSNAME: IObject = {\n    '-1': 'error',\n    '0': 'success',\n    '1': 'warning',\n    '2': 'custom',\n};\n\nexport interface IToastReducer {\n    value: any;\n    type: number;\n    toggle: boolean;\n}\n\nconst initialState: IToastReducer = {\n    value: '',\n    type: 0,\n    toggle: false,\n};\n\n// eslint-disable-next-line no-unused-vars\nconst reducer: (state: IToastReducer, action: { type: string; payload: any }) => any = (\n    state = initialState,\n    action,\n) => {\n    switch (action.type) {\n        case ACTION_TOGGLE_TOAST: {\n            let {\n                type,\n                toggle,\n                value,\n            }: {\n                type: number;\n                toggle: boolean;\n                value: any;\n            } = action.payload;\n            if (type === TOAST_CONFIGS.error) {\n                if (value instanceof Error) {\n                    value = value?.message || JSON.stringify(value);\n                }\n            }\n            return {\n                ...state,\n                type,\n                toggle,\n                value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export * from './ellipsis';\nexport * from './interface';\nexport { default as convert } from './convert';\nexport { default as format } from './format';\n","import { lazy } from 'react';\nimport { IRouteProps } from '..';\n\nconst walletRoute: IRouteProps = {\n    path: '/',\n    exact: true,\n    component: lazy(() => import('./Wallet')),\n    name: 'Wallet',\n    to: '/',\n};\n\nexport const route = '/';\n\nexport default walletRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst accountRoute: IRouteProps = {\n    path: '/account-item-modal',\n    exact: true,\n    component: lazy(() => import('./AccountItem.modal')),\n    name: 'Account Item Modal',\n    to: '/account-item-modal',\n};\n\nexport const route = '/account-item-modal';\n\nexport default accountRoute;\n","export { default } from './AccountDetail';\nexport * from './AccountDetail.route';\n","import React from 'react';\n\ninterface IProps {\n    data: any[];\n    visible?: boolean;\n    renderItem: (tokenId: string) => any;\n}\n\nconst ListToken = (props: IProps) => {\n    const { data, visible = true, renderItem } = props;\n    if (!visible || data.length === 0) {\n        return null;\n    }\n    return (\n        <div className=\"list-token\">\n            {data.map((tokenId: string) => (\n                <React.Fragment key={tokenId}>{renderItem(tokenId)}</React.Fragment>\n            ))}\n        </div>\n    );\n};\n\nexport default React.memo(ListToken);\n","export const ACTION_TOGGLE_MODAL = '[modal] Toggle modal';\nexport const ACTION_TOGGLE_LOADING_MODAL = '[modal] Toggle loading modal';\n","export { default } from './InputField';\nexport * from './InputField';\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Input } from 'src/components/ReduxForm/InputField/InputField';\n\ninterface IProps {\n    title: string;\n}\n\nexport const FORM_CONFIGS = {\n    formName: 'form-create-header-search-box',\n    searchBox: 'searchBox',\n};\n\nconst SearchBox = (props: IProps) => {\n    const { title } = props;\n    return (\n        <Field\n            name={FORM_CONFIGS.searchBox}\n            component={Input}\n            componentProps={{\n                placeholder: title,\n                autoFocus: true,\n                className: 'fw-medium fs-medium',\n            }}\n        />\n    );\n};\n\nexport default reduxForm<any, any>({\n    form: FORM_CONFIGS.formName,\n})(React.memo(SearchBox));\n","import { RouteProps } from 'react-router-dom';\n\nexport interface IRouteProps extends RouteProps {\n    id?: string | number;\n    name: string;\n    to: string;\n    path: string;\n}\n\nlet routes: IRouteProps[] = [];\n\nconst context = require.context('./', true, /\\.route.tsx?/);\n\ncontext.keys().forEach((path) => {\n    routes.push(require(`${path}`).default);\n});\n\nexport default routes;\n","import { Dispatch } from 'redux';\nimport { IRootState } from 'src/redux/interface';\nimport { goServices, setConfig, storageService } from 'incognito-js/build/web/browser';\nimport { actionHandleLoadWallet, actionInitWallet, IWalletReducer, walletSelector } from 'src/module/Wallet';\nimport { ENVS } from 'src/configs';\nimport { actionFetchPCustomTokenList, actionFetchPTokenList } from 'src/module/Token';\nimport { IServer } from 'src/services';\nimport { loadSeparator } from 'src/utils/separator';\nimport { preloadSelector } from './Preload.selector';\nimport { IPreloadConfigs, IPreloadReducer } from './Preload.reducer';\nimport { ACTION_FETCHING, ACTION_FETCHED, ACTION_SET_SERVER, ACTION_SET_CONFIGS } from './Preload.constant';\n\nexport const actionFetching = () => ({\n    type: ACTION_FETCHING,\n});\n\nexport const actionFetched = (payload: any) => ({\n    type: ACTION_FETCHED,\n    payload,\n});\n\nexport const actionFetch = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    const state: IRootState = getState();\n    const preload: IPreloadReducer = preloadSelector(state);\n    const walletState: IWalletReducer = walletSelector(state);\n    const { configs } = preload;\n    const { mainnet } = configs;\n    const field = mainnet ? 'mainnet' : 'testnet';\n    const { init } = walletState[field];\n    try {\n        await dispatch(actionFetching());\n        loadSeparator();\n        storageService.implement({\n            setMethod: async (key: string, data: any) => {\n                return localStorage.setItem(key, data);\n            },\n            getMethod: async (key: string) => {\n                return localStorage.getItem(key);\n            },\n            removeMethod: async (key: string) => localStorage.removeItem(key),\n            namespace: 'EXTENSION_WALLET',\n        });\n        await setConfig({\n            ...configs,\n            wasmPath: `${ENVS.REACT_APP_DOMAIN_URL}/privacy.wasm`,\n            logMethod: (message: string) => console.debug(`MESSAGE`, message),\n        });\n        await goServices.implementGoMethodUseWasm();\n        let task: any[] = [\n            actionFetchPTokenList()(dispatch, getState),\n            actionFetchPCustomTokenList()(dispatch, getState),\n        ];\n        if (!init) {\n            task = [...task, actionInitWallet()(dispatch, getState)];\n        } else {\n            task = [...task, actionHandleLoadWallet()(dispatch, getState)];\n        }\n        await Promise.all(task);\n    } catch (error) {\n        console.debug(error);\n    } finally {\n        dispatch(actionFetched({}));\n    }\n};\n\nexport const actionSetServer = (payload: IServer) => ({\n    type: ACTION_SET_SERVER,\n    payload,\n});\n\nexport const actionSetConfigs = (payload: IPreloadConfigs) => ({\n    type: ACTION_SET_CONFIGS,\n    payload,\n});\n","export { default } from './Setting';\nexport * from './Setting.actions';\nexport * from './Setting.constant';\nexport * from './Setting.interface';\nexport * from './Setting.reducer';\nexport * from './Setting.selector';\nexport * from './Setting.route';\n","export * from './Receive.route';\nexport { default } from './Receive';\n","export * from './SettingItem';\n","import {\n    ACTION_CREATE,\n    ACTION_DELETE,\n    ACTION_UPDATE,\n    ACTION_SELECTED,\n    ACTION_REMOVE_SELECTED,\n} from './AddressBook.constant';\nimport { IPayload } from './AddressBook.interface';\n\nexport const actionCreate = (payload: IPayload) => ({\n    type: ACTION_CREATE,\n    payload,\n});\n\nexport const actionUpdate = (payload: IPayload) => ({\n    type: ACTION_UPDATE,\n    payload,\n});\n\nexport const actionDelete = (payload: IPayload) => ({\n    type: ACTION_DELETE,\n    payload,\n});\nexport const actionSelectedReceiver = (payload: IPayload) => ({\n    type: ACTION_SELECTED,\n    payload,\n});\n\nexport const actionRemoveSelectedReceiver = () => ({\n    type: ACTION_REMOVE_SELECTED,\n});\n","export { default } from './Keychain';\nexport * from './Keychain.interface';\nexport * from './Keychain.route';\n","import { ACTION_FETCHED, ACTION_TOGGLE_HOME_CONFIGS } from './Setting.constant';\n\nexport const actionFetched = (payload: any) => ({\n    type: ACTION_FETCHED,\n    payload,\n});\n\nexport const actionToggleHomeConfigs = () => ({\n    type: ACTION_TOGGLE_HOME_CONFIGS,\n});\n","import { createSelector } from 'reselect';\nimport { IRootState } from 'src/redux/interface';\n\nexport const settingSelector = createSelector(\n    (state: IRootState) => state.setting,\n    (setting) => setting,\n);\n\nexport const devSettingSelector = createSelector(settingSelector, (setting) => setting.dev);\n","export { default } from './Network';\nexport * from './Network.route';\n","import React from 'react';\nimport copy from 'copy-to-clipboard';\nimport { actionToggleToast, TOAST_CONFIGS } from 'src/components';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { CopyIcon, OpenLinkIcon } from 'src/components/Icons';\nimport { IHistoryItem } from './History.interface';\n\nconst Styled = styled.div`\n    .confirm-tx-item {\n        display: flex;\n        flex-direction: row;\n        align-items: 'center';\n        margin-bottom: 30px;\n        justify-content: space-between;\n    }\n    .confirm-tx-item label {\n        flex-basis: 30%;\n    }\n    .confirm-tx-item .hook {\n        flex-basis: 65%;\n        display: flex;\n        justify-content: space-between;\n    }\n\n    .confirm-tx-item .hook span {\n        max-width: 150px;\n    }\n`;\n\nconst HistoryItem = React.memo((props: IHistoryItem) => {\n    const { title, desc, copyData = '', link = '' } = props;\n    const dispatch = useDispatch();\n    const handleCopy = () => {\n        copy(copyData);\n        dispatch(\n            actionToggleToast({\n                toggle: true,\n                value: 'Copied',\n                type: TOAST_CONFIGS.success,\n            }),\n        );\n    };\n    const handleOpenLink = () => window.open(link);\n    return (\n        <Styled>\n            <div className=\"confirm-tx-item\">\n                <p>{title}</p>\n                <div className=\"hook\">\n                    <span className=\"ellipsis\">{desc}</span>\n                    {!!copyData && <CopyIcon onClick={handleCopy} />}\n                    {!!link && <OpenLinkIcon onClick={handleOpenLink} />}\n                </div>\n            </div>\n        </Styled>\n    );\n});\n\nexport default React.memo(HistoryItem);\n","export { default } from './Send';\nexport * from './Send.actions';\nexport * from './Send.constant';\nexport * from './Send.interface';\nexport * from './Send.selector';\nexport * from './Send.route';\n","export { default } from './TokenInfo';\nexport * from './TokenInfo.route';\n","export { default } from './ConfirmTx';\nexport * from './ConfirmTx.route';\n","export { default } from './AddToken';\nexport * from './AddToken.route';\n","import styled from 'styled-components';\nimport { COLORS } from 'src/styles';\n\nexport const Styled = styled.div`\n    margin-top: 30px;\n    .input-container {\n        position: relative;\n        height: 40px;\n    }\n    label {\n        margin-bottom: 5px;\n    }\n    > p {\n        margin-top: 10px;\n    }\n    p.error {\n        color: ${COLORS.red};\n    }\n    p.warning {\n        color: ${COLORS.orange};\n    }\n    .input-container > input {\n        position: absolute;\n        left: 0;\n        top: 0;\n        background-color: ${COLORS.colorGreyLight};\n        color: ${COLORS.black};\n        width: 100%;\n        height: 100%;\n        border-radius: 8px;\n        padding: 0 10px;\n        :focus {\n            border: solid 1px ${COLORS.black};\n        }\n    }\n    .input-container .sub-icon {\n        position: absolute;\n        top: 50%;\n        transform: translateY(-50%);\n    }\n\n    .input-amount {\n        > input {\n            padding-right: 40px;\n        }\n        .sub-icon {\n            right: 10px;\n        }\n    }\n\n    .input-address {\n        > input {\n            padding-right: 70px;\n        }\n        .sub-icon {\n            :nth-child(2) {\n                right: 40px;\n            }\n            :last-child {\n                right: 10px;\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport { WrappedFieldInputProps, WrappedFieldMetaProps } from 'redux-form';\nimport { AddressBookIcon, InfiniteIcon, ScanIcon } from 'src/components/Icons';\nimport { INPUT_FIELD } from './InputField.constant';\nimport { Styled } from './InputField.styled';\n\nexport interface IInputFieldProps {\n    meta: WrappedFieldMetaProps;\n    input: WrappedFieldInputProps;\n    componentProps: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n    inputType?: number;\n    onClickMax?: () => any;\n    onClickAddressBook?: () => any;\n    onClickScan?: () => any;\n}\n\ninterface IInputProps {\n    input: WrappedFieldInputProps;\n    componentProps: React.InputHTMLAttributes<HTMLInputElement>;\n}\n\nexport const Input = (props: IInputProps) => {\n    const { input: inputProps, componentProps } = props;\n    return <input type=\"text\" {...inputProps} {...componentProps} />;\n};\n\nconst InputField = (props: IInputFieldProps) => {\n    const { meta, input, componentProps, inputType, onClickMax, onClickAddressBook, onClickScan } = props;\n    const { error, warning } = meta;\n    const renderInput = () => {\n        switch (inputType) {\n            case INPUT_FIELD.amount:\n                return (\n                    <div className=\"input-container input-amount\">\n                        <Input {...{ input, componentProps }} />\n                        <div className=\"sub-icon\">\n                            <InfiniteIcon onClick={onClickMax} />\n                        </div>\n                    </div>\n                );\n            case INPUT_FIELD.address:\n                return (\n                    <div className=\"input-container input-address\">\n                        <Input {...{ input, componentProps }} />\n                        <div className=\"sub-icon\">\n                            <AddressBookIcon onClick={onClickAddressBook} />\n                        </div>\n                        <div className=\"sub-icon\">\n                            <ScanIcon onClick={onClickScan} />\n                        </div>\n                    </div>\n                );\n            default:\n                return (\n                    <div className=\"input-container\">\n                        <Input {...{ input, componentProps }} />\n                    </div>\n                );\n        }\n    };\n    return (\n        <Styled>\n            {renderInput()}\n            {(error && <p className=\"error fs-small fw-regular\">{error}</p>) ||\n                (warning && <p className=\"warning fs-small fw-regular\">{warning}</p>)}\n        </Styled>\n    );\n};\n\nexport default InputField;\n","export const ACTION_TOGGLE_TOAST = `[toast] Toggle toast`;\n","import toLower from 'lodash/toLower';\nimport trim from 'lodash/trim';\nimport { formValueSelector } from 'redux-form';\nimport { createSelector } from 'reselect';\nimport { IRootState } from 'src/redux/interface';\nimport { FORM_CONFIGS } from './Header.searchBox';\n\nexport const keySearchSelector = createSelector(\n    (state: IRootState) => state,\n    (state) => {\n        const selector = formValueSelector(FORM_CONFIGS.formName);\n        const searchBoxValue = selector(state, FORM_CONFIGS.searchBox);\n        return trim(toLower(searchBoxValue)) || '';\n    },\n);\n","import React, { SyntheticEvent } from 'react';\nimport { compose } from 'recompose';\nimport { ITokenProps } from './Token.interface';\n\ninterface TInner {\n    handleOnClick: () => void;\n}\n\nexport interface IMergePropsToken extends TInner, ITokenProps {}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: ITokenProps & any) => {\n    const { handleSelectToken } = props;\n    const handleOnClick = (e: SyntheticEvent) => {\n        e.preventDefault();\n        if (typeof handleSelectToken === 'function') {\n            handleSelectToken();\n        }\n    };\n    return <WrappedComponent {...{ ...props, handleOnClick }} />;\n};\n\nexport default compose<IMergePropsToken, any>(enhance);\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport { camelCase } from 'lodash';\n\nconst requireModule = require.context('../../src', true, /\\.reducer.ts/); // extract [reducerName].reducer.ts files inside redux folder\n\nconst reducers: any = {};\n\nrequireModule.keys().forEach((fileName: any) => {\n    try {\n        const reducerName = camelCase(fileName?.match(/(\\w{1,})(.reducer.ts)/)[1]);\n        reducers[reducerName] = requireModule(fileName).default;\n    } catch (error) {\n        console.debug(`ERROR`, error);\n    }\n});\n\nexport default combineReducers({\n    ...reducers,\n    form: formReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport createSagaMiddleware from 'redux-saga';\nimport { ENVS } from 'src/configs';\nimport reducers from './reducers';\n\nexport interface IConfigStore {\n    store: any;\n    persistor: any;\n}\n\nconst saga = createSagaMiddleware();\n\nexport const configStore = (preloadedState: any = {}) => {\n    const persistConfig = {\n        key: 'root',\n        storage,\n        whitelist: [],\n        blacklist: ['preload', 'wallet', 'account', 'token', 'setting', 'history', 'addressBook'],\n    };\n    const persistedReducer = persistReducer(persistConfig, reducers);\n    const middlewareEnhancer = applyMiddleware(thunk, saga);\n    const composedEnhancers =\n        ENVS.REACT_APP_MODE === 'development' ? composeWithDevTools(middlewareEnhancer) : middlewareEnhancer;\n    const store: any = createStore(persistedReducer, preloadedState, composedEnhancers);\n    const persistor = persistStore(store);\n    return { store, persistor };\n};\n","import { createSelector } from 'reselect';\nimport { isGettingAccountBalanceSelector as getAccountBalance } from 'src/module/Account/Account.selector';\nimport {\n    getPrivacyDataByTokenIDSelector,\n    isGettingBalanceTokenByIdSelector as getTokenBalanceById,\n} from 'src/module/Token/Token.selector';\n\nexport const isGettingBalanceByTokenIdSelector = createSelector(\n    getAccountBalance,\n    getTokenBalanceById,\n    getPrivacyDataByTokenIDSelector,\n    (getAccBal, getTokenBal, getPrivacyDataByTokenID) => (tokenId: string) => {\n        const token = getPrivacyDataByTokenID(tokenId);\n        if (token.isNativeToken) {\n            return getAccBal;\n        }\n        return getTokenBal(tokenId);\n    },\n);\n","export const INPUT_FIELD = {\n    amount: 1,\n    address: 2,\n};\n","const types = {\n    /**\n     * error from backend. Ex: generate deposit address, register user token,...\n     */\n    API_ERROR: 'API_ERROR',\n\n    /**\n     * Default type. Use this type for create a CustomError message, which can be displayed to user (friendly message)\n     * Ex: `new CustomError(ErrorCode.network_make_request_failed)`\n     */\n    KNOWN_ERROR: 'KNOWN_ERROR',\n\n    /**\n     * Error from web-js module\n     */\n    WEB_JS_ERROR: 'WEB_JS_ERROR',\n};\nexport default types;\n","/**\n *\n * @param {number} number\n * Make sure `number` is unique!!!\n */\nexport const genCode = (type: string, number: number) => {\n    return `${type}(${number})`;\n};\n\n/**\n *\n * @param {number} number\n * Make sure `number` is unique!!!\n */\nexport const codeCreator = (type: string) => {\n    const codes: {\n        [key: string]: any;\n    } = {};\n    return (number: number) => {\n        if (codes[number]) throw new Error(`Code ${number} is existed!`);\n        codes[number] = true;\n        return genCode(type, number);\n    };\n};\n","import TYPES from '../types';\nimport { codeCreator } from '../utils';\n\nconst apiError = codeCreator(TYPES.API_ERROR);\n\n/**\n * ONLY FOR API ERRORS\n */\n\n// place error codes here\n// should seperate codes by component\n// format: component_code_id\n\nconst api = {\n    api_email_invalid: apiError(-1000),\n    api_email_existed: apiError(-1005),\n    api_device_id_existed: apiError(-1017),\n    api_invalid_arguments: apiError(-9000),\n    api_invalid_limit: apiError(-9002),\n    api_paymentaddres_existed: apiError(-100002),\n    api_transfer_fail: apiError(-100003),\n    api_add_private_token_already_existed: apiError(-1023),\n    api_qrcode_fail_ProductNotFound: apiError(-80008),\n    api_qrcode_fail_QRCodeAlreadyStaked: apiError(-80009),\n    api_invalid_size_upload_file: apiError(-8002),\n    api_invalid_type_upload_file: apiError(-8001),\n    api_bnb_memo_required: apiError(-1027),\n    api_unstake_fail: apiError(-80011),\n    api_tx_added: apiError(-80002),\n    api_amount_invalid: apiError(-80003),\n    api_trade_maintain: apiError(-2009),\n    api_insufficient_funds: apiError(-1024),\n    api_tx_hash_invalid: apiError(-80006),\n};\n\nconst game = {\n    player_have_pending_transactions: apiError(-70000),\n};\nconst apiCode = {\n    ...api,\n    ...game,\n};\n\nexport default apiCode;\n","import TYPES from '../types';\nimport { codeCreator } from '../utils';\n\nconst knownError = codeCreator(TYPES.KNOWN_ERROR);\n\n/**\n * ONLY FOR KNOWN ERRORS (Errors are thrown in the app)\n */\n\n// place error codes here\n// should seperate codes by component\n// format: component_code_id\n\nconst app = {\n    timeout_promise: knownError(-2),\n    firebase_init_failed: knownError(-8),\n    network_make_request_failed: knownError(-9),\n    wallet_can_not_create_new_wallet: knownError(-14),\n    wallet_can_not_load_existed_wallet: knownError(-15),\n    user_login_failed: knownError(-27),\n};\n\nconst documentPicker = {\n    document_picker_oversize: knownError(-43),\n    document_picker_must_be_png: knownError(-44),\n};\n\nconst estimateFee = {\n    estimate_fee_with_zero_balance: knownError(-1),\n    estimate_fee_does_not_support_type_of_fee: knownError(-29),\n};\n\nconst getStarted = {\n    getStarted_can_not_create_wallet_on_existed: knownError(-10),\n    getStarted_load_token_failed: knownError(-24),\n};\n\nconst withdraw = {\n    withdraw_balance_must_not_be_zero: knownError(-12),\n    withdraw_gen_withdraw_address_failed: knownError(-13),\n};\n\nconst createAccount = {\n    createAccount_failed: knownError(-16),\n    createAccount_existed_name: knownError(-17),\n};\nconst home = {\n    home_load_following_token_failed: knownError(-18),\n    home_load_balance_failed: knownError(-19),\n};\n\nconst importAccount = {\n    importAccount_failed: knownError(-20),\n    importAccount_existed: knownError(-21),\n};\n\nconst node = {\n    node_duplicate: knownError(-22),\n    node_invalid_host: knownError(-23),\n    node_auth_firebase_fail: knownError(-32),\n    node_verify_code_fail: knownError(-33),\n    node_create_account_fail: knownError(-34),\n    node_can_not_connect_hotspot: knownError(-35),\n    node_pending_withdrawal: knownError(-36),\n    node_can_not_get_wifi_name: knownError(-37),\n};\n\nconst validator = {\n    payment_address_empty: knownError(-25),\n};\n\nconst staking = {\n    click_stake: knownError(-26),\n};\n\nconst papps = {\n    paaps_invalid_daap_url: knownError(-28),\n    papp_can_not_opened: knownError(-41),\n    papp_the_token_is_not_supported: knownError(-42),\n};\n\nconst addBep2Token = {\n    addBep2Token_not_found: knownError(-30),\n};\n\nconst addErc20Token = {\n    addErc20Token_not_found: knownError(-31),\n};\n\nconst dex = {\n    WITHDRAW_FAIL: knownError(-40),\n    NOT_ENOUGH_NETWORK_FEE_ADD: knownError(-61),\n};\n\nconst chain = {\n    INVALID_ACCOUNT: knownError(-1001),\n\n    INVALID_TIME: knownError(-1002),\n\n    INVALID_FEE: knownError(-1016),\n\n    PENDING_TX: knownError(-6005),\n\n    FULLNODE_DOWN: knownError(-9999),\n};\n\nconst knowCode = {\n    ...app,\n    ...estimateFee,\n    ...getStarted,\n    ...withdraw,\n    ...createAccount,\n    ...importAccount,\n    ...home,\n    ...node,\n    ...validator,\n    ...staking,\n    ...papps,\n    ...addBep2Token,\n    ...addErc20Token,\n    ...dex,\n    ...documentPicker,\n    ...chain,\n};\n\nexport default knowCode;\n","import { codeCreator } from '../utils';\nimport TYPES from '../types';\n\nconst webjsError = codeCreator(TYPES.WEB_JS_ERROR);\n\n/**\n * ONLY FOR WEBJS ERRORS\n */\n\n// place error codes here\n// should seperate codes by component\n// format: component_code_id\n\nconst webJs = {\n    web_js_token_balance_is_zero: webjsError(-4007),\n    web_js_import_existed_account: webjsError(-2001),\n    web_js_import_invalid_key: webjsError(-2005),\n    web_js_import_invalid_key_2: webjsError(-2),\n    web_js_can_not_use_this_token_for_fee: webjsError(-4009),\n    web_js_not_enough_coin: webjsError(-5),\n    web_js_can_not_created_tx: webjsError(-3002),\n    web_js_can_not_send_main_crypto: webjsError(-3006),\n};\n\nexport const STACK_TRACE = {\n    REPLACEMENT: 'Replacement or Cancel Tx Error',\n    NOT_ENOUGH_COIN: 'Not enough coin',\n};\n\nconst webjsCode = {\n    ...webJs,\n};\n\nexport default webjsCode;\n","import apiCode from './apiCode';\nimport knownCode from './knownCode';\nimport webjsCode from './webjsCode';\n\nconst code = {\n    ...knownCode,\n    ...apiCode,\n    ...webjsCode,\n};\n\nexport default code;\n","import CODE from './code';\n\nconst message = {\n    [CODE.timeout_promise]: 'Timeout excuting funtion',\n    [CODE.estimate_fee_with_zero_balance]: 'Can not calculate fee on zero balance, please check your amount.',\n    [CODE.firebase_init_failed]: 'Firebase service can not run on your app, please contact us for supporting.',\n    [CODE.network_make_request_failed]:\n        \"Something went wrong. Please make sure you're connected to the internet and try again.\",\n    [CODE.player_have_pending_transactions]: 'Player has pending transactions.',\n    [CODE.api_device_id_existed]: 'This device has been registed.',\n    [CODE.web_js_token_balance_is_zero]: 'Your balance is not enough.',\n    [CODE.withdraw_balance_must_not_be_zero]: 'Your balance is zero, please deposit more.',\n    [CODE.withdraw_gen_withdraw_address_failed]: 'Can not get withdraw address, please try again.',\n    [CODE.getStarted_can_not_create_wallet_on_existed]: 'Can not create new wallet on existing wallet.',\n    [CODE.wallet_can_not_create_new_wallet]:\n        'Sorry, we can not create new wallet, close and reopen the app can fix it.',\n    [CODE.wallet_can_not_load_existed_wallet]: 'Something’s not right. Please re-install this app and try again.',\n    [CODE.createAccount_failed]: 'Account was not created! Please try again.',\n    [CODE.createAccount_existed_name]: 'You already have an account with this name. Please try another.',\n    [CODE.home_load_following_token_failed]: 'Is your list coin not show? Pull to reload your the list.',\n    [CODE.home_load_balance_failed]: 'Refresh to reload your balance.',\n    [CODE.importAccount_failed]: 'Account was not imported, please try again.',\n    [CODE.importAccount_existed]: 'This account already exists on your device. Please try another.',\n    [CODE.web_js_import_existed_account]:\n        'Please make sure this private key is valid and does not already exist on your device.',\n    [CODE.web_js_import_invalid_key_2]: 'Please try again with a valid private key.',\n    [CODE.node_duplicate]: 'This node already exists on your device. Please try another.',\n    [CODE.node_invalid_host]: 'This address is not a valid domain or ip address. Please try another.',\n    [CODE.getStarted_load_token_failed]:\n        \"Something's gone wrong. Please check your connection and try again, or contact go@incognito.org.\",\n    [CODE.user_login_failed]: 'We have an authorization issue.',\n    [CODE.paaps_invalid_daap_url]: 'Please enter a valid pApp URL',\n    [CODE.web_js_import_invalid_key]: 'Please make sure this private key is valid.',\n    [CODE.web_js_can_not_use_this_token_for_fee]: 'Can not use this coin for fee, please try another.',\n    [CODE.estimate_fee_does_not_support_type_of_fee]: 'Can not use this coin for fee, please try another.',\n    [CODE.web_js_not_enough_coin]: 'Your balance is not enough for this transaction.',\n    [CODE.addBep2Token_not_found]: \"This BEP2 coin doesn't seem to exist. Please check and try again.\",\n    [CODE.api_add_private_token_already_existed]: 'This coin has been added.',\n    [CODE.addErc20Token_not_found]: 'This BEP2 coin has been added.',\n    [CODE.api_qrcode_fail_ProductNotFound]: 'This QR code is unfamiliar. Please try again.',\n    [CODE.api_qrcode_fail_QRCodeAlreadyStaked]: \"You've already set up this Node.\",\n    [CODE.node_auth_firebase_fail]: 'Something went wrong. Please try to set up your Node again.',\n    [CODE.node_verify_code_fail]:\n        'Something’s not right. Please send an email to go@incognito.org so we can assist you directly.',\n    [CODE.node_create_account_fail]: 'Something went wrong. Please close the app and try again.',\n    [CODE.node_can_not_connect_hotspot]:\n        'Something went wrong. Please open Wi-Fi settings on your device and connect to Node again.',\n    [CODE.node_can_not_get_wifi_name]: 'Can not get wifi name',\n    [CODE.papp_can_not_opened]: 'Sorry, we can not open this pApp. Please try again or check the pApp URL.',\n    [CODE.papp_the_token_is_not_supported]: 'This token is not supported in the pApp.',\n    [CODE.api_invalid_size_upload_file]: \"Upload file's size is invalid, file size must be less than 50kB\",\n    [CODE.document_picker_oversize]: 'File size is too large, please use a smaller one.',\n    [CODE.document_picker_must_be_png]: 'Please use a PNG image.',\n    [CODE.api_invalid_type_upload_file]: 'Your upload file type is incorrect.',\n    [CODE.NOT_ENOUGH_NETWORK_FEE_ADD]: 'Please top up PRV to cover the network fee.',\n    [CODE.node_pending_withdrawal]:\n        'Please wait for your previous withdrawal request to finish processing. Simply try again later.',\n    [CODE.api_bnb_memo_required]: 'The Memo is required',\n    [CODE.FULLNODE_DOWN]: 'The network is a little busy',\n    [CODE.api_unstake_fail]: 'Your previous withdrawal is still processing. Please wait then try again.',\n    [CODE.web_js_can_not_created_tx]: 'Something’s not quite right. Please try again later!',\n    [CODE.api_trade_maintain]: 'The exchange is down for maintenance. Please wait then try again later.',\n    [CODE.api_insufficient_funds]: 'Incognito is currently experiencing high volume. Please try again later.',\n    [CODE.web_js_can_not_send_main_crypto]: 'Streamline this keychain now for efficient transactions',\n    [CODE.api_tx_hash_invalid]:\n        'This is taking a little longer than usual, but will be automatically retried soon. Simply check back later.',\n};\n\nexport default message;\n","import MESSAGE from './message';\nimport types from './types';\nimport { genCode } from './utils';\n\nclass CustomError extends Error {\n    static TYPES: any;\n\n    [x: string]: any;\n\n    /**\n     *\n     * @param {string | number} code\n     * @param {string} name\n     * @param {string} name\n     * @param {string} message\n     * @param {object} rawError error object, ex: new Error();\n     */\n    constructor(code: number, { name, message, rawError }: { name: string; message: string; rawError: any }) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super();\n\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, CustomError);\n        }\n\n        this.name = name || CustomError.TYPES.KNOWN_ERROR;\n        this.message = message || 'Unknown error';\n        this.rawError = rawError;\n        this.code = code;\n\n        // must to check the code of KNOWN_ERROR\n        if (this.name === CustomError.TYPES.KNOWN_ERROR) {\n            if (MESSAGE[code]) {\n                this.message = MESSAGE[code];\n            } else {\n                throw new Error(`Invalid ${this.name} code! (code ${code})`);\n            }\n        } else if (this.name === CustomError.TYPES.API_ERROR) {\n            this.handleApiError(code);\n        } else if (this.name === CustomError.TYPES.WEB_JS_ERROR) {\n            this.handleWebJsError(code);\n        }\n\n        // Custom debugging information\n        this.date = new Date();\n    }\n\n    handleApiError(code: number) {\n        this.code = genCode(types.API_ERROR, code);\n    }\n\n    handleWebJsError(code: number) {\n        this.code = genCode(types.WEB_JS_ERROR, code);\n    }\n}\n\nCustomError.TYPES = types;\n\nexport default CustomError;\n","/* eslint-disable class-methods-use-this */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-unused-expressions */\nimport _ from 'lodash';\nimport Message from './customError/message';\nimport ERROR from './customError/code';\nimport CustomError from './customError/customError';\n\nconst CODES = {\n    CAN_NOT_SEND_TX: '-4002',\n    CAN_NOT_SEND_PTOKEN_TX: '-1003',\n    OLD_REPLACEMENT: '-1022',\n    REPLACEMENT: '-6009',\n    DOUBLE_SPEND: '-6005',\n    NOT_ENOUGH_COIN: 'WEB_JS_ERROR(-5)',\n    INVALID_FEE: '-1016',\n    INVALID_TX: '-1001',\n    INVALID_INPUT: '-1003',\n    INVALID_TIME: '-6008',\n};\n\nconst MESSAGES = {\n    PENDING_TX: 'Please wait for your previous transaction to finish processing. Simply try again later.',\n    CAN_NOT_SEND_TX: \"It looks like your transaction didn't go through.  Please wait a few minutes and try again\",\n    GENERAL: 'Something went wrong. Please try again.',\n    API_POOL_ERROR: 'The network is a little busy. Please try again later.',\n};\n\nconst isValidException = (exception: any) => {\n    if (exception instanceof Error) {\n        return true;\n    }\n\n    if (exception?.message && exception?.name && exception?.stack) {\n        return true;\n    }\n\n    return false;\n};\n\nclass Exception {\n    [x: string]: any;\n\n    /**\n     *\n     * @param {any} exception\n     * @param {string} defaultMessage\n     * `exception` can be a Error object or a string\n     * `defaultMessage` will be used as friendly message (which displays to users, not for debugging)\n     */\n    constructor(exception: any, defaultMessage = 'Opps! Something went wrong.') {\n        if (isValidException(exception)) {\n            this.exception = exception;\n            // find friendly message\n            if (exception.name === CustomError.TYPES.KNOWN_ERROR) {\n                this.message = exception?.message;\n                this.debugMessage = exception?.rawError?.stack;\n            } else if (exception.name === CustomError.TYPES.API_ERROR) {\n                Message[this.exception?.code] && (this.message = Message[this.exception.code]);\n            } else if (exception.name === CustomError.TYPES.WEB_JS_ERROR) {\n                Message[this.exception?.code] && (this.message = Message[this.exception.code]);\n            }\n        } else if (typeof exception === 'string') {\n            this.exception = new Error(exception);\n        }\n\n        if (!this.exception) {\n            this.exception = new Error('Unknown error');\n        }\n\n        /**\n         * Message for debug\n         */\n        this.debugMessage = this.debugMessage ?? this.exception?.message;\n\n        /**\n         * Message for UI (display to user)\n         */\n        this.message = this.message ?? this._getUnexpectedMessageError(exception, defaultMessage);\n\n        this._log2Console();\n    }\n\n    _getUnexpectedMessageError(exception: any, defaultMessage: string) {\n        const message = exception?.message || '';\n\n        if (message) {\n            return `${defaultMessage}\\n${message || ''}`;\n        }\n\n        return defaultMessage;\n    }\n\n    /**\n     *\n     * @param {string} message\n     * override exception message.\n     * Use for debug, log,...\n     */\n    setDebugMessage(message: string) {\n        this.debugMessage = message;\n        return this;\n    }\n\n    /**\n     *\n     * @param {string} message\n     * Override exception message.\n     * Use for UI\n     */\n    setMessage(message: string) {\n        this.message = message;\n        return this;\n    }\n\n    // private method\n    _getLog() {\n        const log = `\n      EXCEPTION ${this.exception?.name}\n      Time: ${new Date().toUTCString()}\n      User message: ${this.message}\n      Debug message: ${this.debugMessage}\n      Error code: ${this.exception?.code}\n      StackTrace: ${this.exception?.stackTrace}\n      StackTraceCode: ${this.exception?.stackTraceCode}\n      Stack: ${this.exception.stack}\n    `;\n\n        return log;\n    }\n\n    // private method\n    _log2Console() {\n        const log = this._getLog();\n        log && console.debug(log);\n    }\n\n    /**\n     * write log to memory or display on console.\n     * Uses both memory & console as default.\n     */\n    writeLog({ useDisk = false, useConsole = true } = {}) {\n        if (useDisk) {\n            // TODO write log to file, or memory?\n        }\n\n        if (!__DEV__ && useConsole) {\n            // only use on production, we always log to console on dev already!\n            this._log2Console();\n        }\n\n        return this;\n    }\n\n    /**\n     * Show a toast to UI, use `message` as default.\n     * If __DEV__ is true, `debugMessage` will be displayed too.\n     */\n    showErrorToast(showCode = false) {\n        let msg = this.message;\n        if (showCode) {\n            return this.getMessage(msg);\n        }\n        // msg && Toast.showError(msg);\n        return this;\n    }\n\n    /**\n     * Show a toast to UI, use `message` as default.\n     * If __DEV__ is true, `debugMessage` will be displayed too.\n     */\n    showWarningToast() {\n        // let msg = this.message;\n        // msg && Toast.showWarning(msg);\n        return this;\n    }\n\n    getMessage(defaultMessage: string) {\n        try {\n            if (this.exception.stackTrace) {\n                const stackCode = _.toString(this.exception.stackTraceCode) || '';\n                if (\n                    stackCode.indexOf(CODES.REPLACEMENT) === 0 ||\n                    stackCode.indexOf(CODES.DOUBLE_SPEND) === 0 ||\n                    stackCode.includes(`${CODES.CAN_NOT_SEND_PTOKEN_TX}: ${CODES.OLD_REPLACEMENT}`)\n                ) {\n                    return `${MESSAGES.PENDING_TX} (${ERROR.PENDING_TX})`;\n                }\n\n                if (stackCode.indexOf(CODES.INVALID_FEE) === 0) {\n                    return `${MESSAGES.CAN_NOT_SEND_TX} (${ERROR.INVALID_FEE})`;\n                }\n\n                if (\n                    stackCode === `${CODES.CAN_NOT_SEND_PTOKEN_TX}: ${CODES.INVALID_TX}` ||\n                    stackCode === `${CODES.CAN_NOT_SEND_TX}: ${CODES.INVALID_TX}`\n                ) {\n                    return `${MESSAGES.CAN_NOT_SEND_TX} (${ERROR.INVALID_ACCOUNT})`;\n                }\n\n                if (stackCode.indexOf(CODES.INVALID_TIME) === 0) {\n                    return `${MESSAGES.CAN_NOT_SEND_TX} (${ERROR.INVALID_TIME})`;\n                }\n\n                return `${MESSAGES.CAN_NOT_SEND_TX} (${stackCode})`;\n            }\n\n            if (this.exception.code === CODES.NOT_ENOUGH_COIN) {\n                return `${MESSAGES.PENDING_TX} (${ERROR.PENDING_TX}) (${CODES.NOT_ENOUGH_COIN})`;\n            }\n\n            if (\n                this.exception?.code?.toLowerCase().includes('econnaborted') ||\n                this.message?.toLowerCase().includes('lock wait timeout exceeded;')\n            ) {\n                return MESSAGES.API_POOL_ERROR;\n            }\n\n            if (this?.exception?.code?.toLowerCase().includes('api_error')) {\n                return `${this.message} (${this.exception.code})`;\n            }\n\n            return `${defaultMessage || MESSAGES.GENERAL} (${this.exception.code})`;\n        } catch (error) {\n            return error.message;\n        }\n\n        // return `${this.exception.message} ${this.exception.stack}`;\n    }\n\n    /**\n     * re-throw the exception, this must be end of chain.\n     */\n    throw() {\n        throw this.exception;\n    }\n\n    getMessageError() {\n        const { exception } = this;\n        if (isValidException(exception)) {\n            const name = exception?.name || null;\n            const code = exception?.code || null;\n            const message = exception?.message || MESSAGES.GENERAL;\n            if (name) {\n                switch (name) {\n                    case CustomError.TYPES.WEB_JS_ERROR:\n                    case CustomError.TYPES.API_ERROR: {\n                        return Message[code] ? Message[code] : message;\n                    }\n                    case CustomError.TYPES.KNOWN_ERROR: {\n                        return message;\n                    }\n                    default:\n                        return message;\n                }\n            }\n        }\n        if (typeof exception === 'string') {\n            return exception;\n        }\n        return MESSAGES.GENERAL;\n    }\n\n    toastMessageError() {\n        return this.getMessageError();\n    }\n\n    getCodeError() {\n        const { exception } = this;\n        if (isValidException(exception)) {\n            return exception?.code;\n        }\n        return null;\n    }\n}\n\nexport default Exception;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst accountRoute: IRouteProps = {\n    path: '/account',\n    exact: true,\n    component: lazy(() => import('./Account')),\n    name: 'Account',\n    to: '/account',\n};\n\nexport const route = '/account';\n\nexport default accountRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst accountDetailRoute: IRouteProps = {\n    path: '/account-detail',\n    exact: true,\n    component: lazy(() => import('./AccountDetail')),\n    name: 'Account Detail',\n    to: '/account-detail',\n};\n\nexport const route = '/account-detail';\n\nexport default accountDetailRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst templatesRoute: IRouteProps = {\n    path: '/backup-account',\n    exact: true,\n    component: lazy(() => import('./BackupAccount')),\n    name: 'Backup Account',\n    to: '/backup-account',\n};\n\nexport const route = '/backup-account';\n\nexport default templatesRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst createAccountRoute: IRouteProps = {\n    path: '/create-account',\n    exact: true,\n    component: lazy(() => import('./CreateAccount')),\n    name: 'Create Account',\n    to: '/create-account',\n};\n\nexport const route = '/create-account';\n\nexport default createAccountRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst importAccountRoute: IRouteProps = {\n    path: '/import-account',\n    exact: true,\n    component: lazy(() => import('./ImportAccount')),\n    name: 'Import Account',\n    to: '/import-account',\n};\n\nexport const route = '/import-account';\n\nexport default importAccountRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst receiveRoute: IRouteProps = {\n    path: '/receive',\n    exact: true,\n    component: lazy(() => import('./Receive')),\n    name: 'Receive',\n    to: '/receive',\n};\n\nexport const route = '/receive';\n\nexport default receiveRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst addressBookRoute: IRouteProps = {\n    path: '/address-book',\n    exact: true,\n    component: lazy(() => import('./AddressBook')),\n    name: 'AddressBook',\n    to: '/address-book',\n};\n\nexport const route = '/address-book';\n\nexport default addressBookRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst configsRoute: IRouteProps = {\n    path: '/configs',\n    exact: true,\n    component: lazy(() => import('./Configs')),\n    name: 'Configs',\n    to: '/configs',\n};\n\nexport const route = '/configs';\n\nexport default configsRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst historyRoute: IRouteProps = {\n    path: '/history/:txId',\n    exact: true,\n    component: lazy(() => import('./History')),\n    name: 'history',\n    to: '/history/:txId',\n};\n\nexport const route = '/history/:txId';\n\nexport default historyRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst keychainRoute: IRouteProps = {\n    path: '/keychain',\n    exact: true,\n    component: lazy(() => import('./Keychain')),\n    name: 'Keychain',\n    to: '/keychain',\n};\n\nexport const route = '/keychain';\n\nexport default keychainRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst sendRoute: IRouteProps = {\n    path: '/send',\n    exact: true,\n    component: lazy(() => import('./Send')),\n    name: 'Send',\n    to: '/send',\n};\n\nexport const route = '/send';\n\nexport default sendRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst confirmTxRoute: IRouteProps = {\n    path: '/confirm-tx',\n    exact: true,\n    component: lazy(() => import('./ConfirmTx')),\n    name: 'confirm-tx',\n    to: '/confirm-tx',\n};\n\nexport const route = '/confirm-tx';\n\nexport default confirmTxRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst settingRoute: IRouteProps = {\n    path: '/setting',\n    exact: true,\n    component: lazy(() => import('./Setting')),\n    name: 'Setting',\n    to: '/setting',\n};\n\nexport const route = '/setting';\n\nexport default settingRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst networkRoute: IRouteProps = {\n    path: '/network',\n    exact: true,\n    component: lazy(() => import('./Network')),\n    name: 'Network',\n    to: '/network',\n};\n\nexport const route = '/network';\n\nexport default networkRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst addTokenRoute: IRouteProps = {\n    path: '/add-token',\n    exact: true,\n    component: lazy(() => import('./AddToken')),\n    name: 'Add Token',\n    to: '/add-token',\n};\n\nexport const route = '/add-token';\n\nexport default addTokenRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst detailRoute: IRouteProps = {\n    path: '/token',\n    exact: true,\n    component: lazy(() => import('./Detail')),\n    name: 'Detail',\n    to: '/token',\n};\n\nexport const route = '/token';\n\nexport default detailRoute;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst tokenInfoRoute: IRouteProps = {\n    path: '/token-info',\n    exact: true,\n    component: lazy(() => import('./TokenInfo')),\n    name: 'Templates',\n    to: '/token-info',\n};\n\nexport const route = '/token-info';\n\nexport default tokenInfoRoute;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Styled = styled.div``;\n\nconst Account = () => {\n    return <Styled className=\"account-container\" />;\n};\n\nexport default React.memo(Account);\n","import { persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport { ENVS } from 'src/configs';\nimport { IServer, MAINNET_SERVER, PRODUCTION_API } from 'src/services';\nimport { ACTION_FETCHING, ACTION_FETCHED, ACTION_SET_CONFIGS, ACTION_SET_SERVER } from './Preload.constant';\n\nexport interface IPreloadConfigs {\n    chainURL: string;\n    apiURL: string;\n    mainnet: boolean;\n    wasmPath?: string;\n}\n\nexport interface IPreloadReducer {\n    isFetched: boolean;\n    isFetching: boolean;\n    configs: IPreloadConfigs;\n    server: IServer;\n}\n\nconst initialState: IPreloadReducer = {\n    isFetching: false,\n    isFetched: false,\n    configs: {\n        chainURL: MAINNET_SERVER.address,\n        apiURL: PRODUCTION_API,\n        mainnet: true,\n        wasmPath: `${ENVS.REACT_APP_DOMAIN_URL}/privacy.wasm`,\n    },\n    server: MAINNET_SERVER,\n};\n\nconst preloadReducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case ACTION_FETCHING: {\n            return {\n                ...state,\n                isFetching: true,\n            };\n        }\n        case ACTION_FETCHED: {\n            return {\n                ...state,\n                isFetching: false,\n                isFetched: true,\n            };\n        }\n        case ACTION_SET_CONFIGS: {\n            const configs = action.payload;\n            return {\n                ...state,\n                configs: {\n                    ...state.configs,\n                    ...configs,\n                },\n            };\n        }\n        case ACTION_SET_SERVER: {\n            const server = action.payload;\n            return {\n                ...state,\n                server,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nconst persistConfig = {\n    key: 'preload',\n    storage,\n    whitelist: ['configs', 'server'],\n    stateReconciler: autoMergeLevel2,\n};\n\nexport default persistReducer(persistConfig, preloadReducer);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Styled = styled.div``;\n\nconst Configs = () => {\n    return <Styled />;\n};\n\nexport default React.memo(Configs);\n","import { DEFAULT_THEME, ITheme } from 'src/styles';\nimport { ACTION_CHANGE_LANGUAGE } from './Configs.constant';\n\nexport interface IConfigsReducer {\n    language: string;\n    theme: ITheme;\n}\n\nconst initialState: IConfigsReducer = {\n    language: 'en',\n    theme: DEFAULT_THEME,\n};\n\nconst reducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case ACTION_CHANGE_LANGUAGE: {\n            return {\n                ...state,\n                language: action.payload,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Header } from 'src/components';\nimport { ILanguage } from 'src/i18n';\nimport styled from 'styled-components';\nimport { translateSelector } from '../Configs';\nimport { SettingItem, ISettingItem } from './features/SettingItem';\nimport withSetting from './Setting.enhance';\nimport { IInner } from './Setting.interface';\n\nconst Styled = styled.div``;\n\nconst Setting = (props: IInner) => {\n    const translate: ILanguage = useSelector(translateSelector);\n    const settingTranslate = translate.setting;\n    const { settingFactories } = props;\n    return (\n        <Styled>\n            <Header title={settingTranslate.headerTitle} />\n            {settingFactories.map((item: ISettingItem) => (\n                <SettingItem key={item.title} {...item} />\n            ))}\n        </Styled>\n    );\n};\n\nexport default withSetting(React.memo(Setting));\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AccountInstance } from 'incognito-js/build/web/browser';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { actionToggleToast, Header, TOAST_CONFIGS } from 'src/components';\nimport { withLayout } from 'src/components/Layout';\nimport { ILanguage } from 'src/i18n';\nimport { translateSelector } from 'src/module/Configs';\nimport { listAccountSelector, actionSwitchAccount } from 'src/module/Account';\nimport AccountItem from 'src/module/Account/features/AccountItem';\n\nconst Styled = styled.div``;\n\nconst SelectAccount = React.memo(() => {\n    const translate: ILanguage = useSelector(translateSelector);\n    const listAccount = useSelector(listAccountSelector);\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const handleSelectAccount = async (accountName: string) => {\n        try {\n            dispatch(actionSwitchAccount(accountName));\n        } catch (error) {\n            dispatch(actionToggleToast({ value: error, toggle: true, type: TOAST_CONFIGS.error }));\n        } finally {\n            history.goBack();\n        }\n    };\n\n    return (\n        <Styled>\n            <Header title={translate.wallet.selectAccount.headerTitle} />\n            {listAccount.map((account: AccountInstance) => (\n                <AccountItem\n                    title={account.name}\n                    desc={account.key.keySet.paymentAddressKeySerialized}\n                    hasCopy={false}\n                    hasQrCode={false}\n                    selectable\n                    onSelectAccount={() => handleSelectAccount(account.name)}\n                    key={account.name}\n                />\n            ))}\n        </Styled>\n    );\n});\n\nexport default withLayout(SelectAccount);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Header } from 'src/components';\nimport QrCode from 'src/components/QrCode';\nimport { IAccountLanguage } from 'src/i18n';\nimport { translateByFieldSelector } from 'src/module/Configs';\nimport styled from 'styled-components';\nimport { paymentAddressSelector } from 'src/module/Account';\n\nconst Styled = styled.div`\n    .hook {\n        margin-top: 15px;\n    }\n`;\n\nconst Receive = () => {\n    const translate: IAccountLanguage = useSelector(translateByFieldSelector)('account');\n    const paymentAddress = useSelector(paymentAddressSelector);\n    return (\n        <Styled>\n            <Header title={translate.receive.headerTitle} />\n            <QrCode\n                qrCodeProps={{\n                    value: paymentAddress,\n                }}\n                hook={\n                    <div className=\"hook\">\n                        {translate.receive.hook.split('\\n').map((text: string) => (\n                            <p className=\"fw-regular fs-regular center-text\" key={text}>\n                                {text}\n                            </p>\n                        ))}\n                    </div>\n                }\n            />\n        </Styled>\n    );\n};\n\nexport default Receive;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Header } from 'src/components';\nimport { IAddressBookLanguage } from 'src/i18n/interface';\nimport styled from 'styled-components';\nimport { translateByFieldSelector } from 'src/module/Configs';\nimport { ArrowDownIcon, ArrowUpIcon } from 'src/components/Icons';\nimport withAddressBook, { IPropsAddrBook, IMergeProps } from './AddressBook.enhance';\nimport { IAddressBook } from './AddressBook.interface';\n\nconst Styled = styled.div`\n    .item {\n        margin-bottom: 30px;\n        cursor: pointer;\n    }\n    .item .hook {\n        margin-top: 30px;\n        padding-left: 15px;\n        cursor: pointer;\n    }\n    .item .hook .name {\n        margin-bottom: 15px;\n    }\n    .item .hook .address {\n    }\n    .item .sub {\n        justify-content: space-between;\n    }\n`;\n\nconst Item = (props: { item: IPropsAddrBook; onSelectedAddrBook?: any }) => {\n    const { item, onSelectedAddrBook } = props;\n    const { title, data } = item;\n    const [toggle, setToggle] = React.useState(false);\n    const handleToggle = () => setToggle(!toggle);\n    const onSelectedAddress = async (addressBook: IAddressBook) => {\n        if (typeof onSelectedAddrBook === 'function') {\n            return onSelectedAddrBook(addressBook);\n        }\n        return null;\n    };\n    return (\n        <div className=\"item\" onClick={handleToggle}>\n            <div className=\"sub flex\">\n                <p className=\"title fs-medium fw-bold\">{title}</p>\n                {toggle ? <ArrowUpIcon /> : <ArrowDownIcon />}\n            </div>\n            {toggle &&\n                data.map((addressBook: IAddressBook) => (\n                    <div key={addressBook.address} onClick={() => onSelectedAddress(addressBook)} className=\"hook\">\n                        <p className=\"name fs-medium fw-bold main-text ellipsis\">{addressBook.name}</p>\n                        <p className=\"address fw-medium sub-text ellipsis\">{addressBook.address}</p>\n                    </div>\n                ))}\n        </div>\n    );\n};\n\nconst AddressBook = (props: IMergeProps & any) => {\n    const { addressBook, onGoBack, onSelectedAddrBook } = props;\n    const translate: IAddressBookLanguage = useSelector(translateByFieldSelector)('addressBook');\n    return (\n        <Styled>\n            <Header onGoBack={onGoBack} title={translate.headerTitle} />\n            {addressBook.map((item: { data: IAddressBook[]; title: string }) => (\n                <Item key={item.title} item={item} onSelectedAddrBook={onSelectedAddrBook} />\n            ))}\n        </Styled>\n    );\n};\n\nexport default withAddressBook(AddressBook);\n","import React, { SyntheticEvent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Header } from 'src/components';\nimport { translateByFieldSelector, translateSelector } from 'src/module/Configs';\nimport { IAccountLanguage, IKeychainLanguage, ILanguage } from 'src/i18n';\nimport { actionSwitchAccount, defaultAccountSelector, listAccountSelector } from 'src/module/Account';\nimport { FaKey } from 'react-icons/fa';\nimport { AccountInstance } from 'incognito-js/build/web/browser';\nimport { Link, useHistory } from 'react-router-dom';\nimport { withLayout } from 'src/components/Layout';\nimport { route } from 'src/module/Account/features/AccountDetail';\nimport { IAccountItem, IHook } from './Keychain.interface';\nimport { Styled } from './Keychain.styled';\n\nconst Hook = React.memo((props: IHook) => {\n    const { title, desc, path } = props;\n    return (\n        <Link className=\"hook-container\" to={path}>\n            <p className=\"title\">{title}</p>\n            <p className=\"desc\">{desc}</p>\n        </Link>\n    );\n});\n\nconst AccountItem = React.memo((props: IAccountItem) => {\n    const { account } = props;\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const defaultAccount = useSelector(defaultAccountSelector);\n    const isSelected = defaultAccount.name === account.name;\n    const handleNavDetail = (e: SyntheticEvent) => {\n        e.preventDefault();\n        history.push(route, {\n            account,\n        });\n    };\n    const handleSelectAccount = () => dispatch(actionSwitchAccount(account.name));\n    return (\n        <div onClick={handleSelectAccount} className={`account-item ${isSelected ? 'selected' : ''}`}>\n            <p className=\"account-name ellipsis\">{account.name}</p>\n            <Link to={route} className=\"account-details\" onClick={handleNavDetail}>\n                <FaKey size={16} />\n            </Link>\n        </div>\n    );\n});\n\nconst YourKeychains = React.memo(() => {\n    const translate: ILanguage = useSelector(translateSelector);\n    const listAccount = useSelector(listAccountSelector);\n    return (\n        <div className=\"hook-container\">\n            <p className=\"title\">{translate.keychain.yourKeychain}</p>\n            {listAccount.map((account: AccountInstance) => (\n                <AccountItem key={account.name} account={account} />\n            ))}\n        </div>\n    );\n});\n\nconst Keychain = React.memo(() => {\n    const translate: IAccountLanguage = useSelector(translateByFieldSelector)('account');\n    const translateKeychain: IKeychainLanguage = useSelector(translateByFieldSelector)('keychain');\n    const hookFactories = React.useMemo(\n        () => [\n            {\n                ...translate.create,\n                path: '/create-account',\n            },\n            {\n                ...translate.import,\n                path: '/import-account',\n            },\n\n            {\n                ...translate.backup,\n                path: '/backup-account',\n            },\n        ],\n        [],\n    );\n    return (\n        <Styled>\n            <Header title={translateKeychain.headerTitle} />\n            <YourKeychains />\n            {hookFactories.map((item) => (\n                <Hook {...item} key={item.title} />\n            ))}\n        </Styled>\n    );\n});\n\nexport default withLayout(Keychain);\n","import { AccountInstance } from 'incognito-js/build/web/browser';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Button, Header } from 'src/components';\nimport { isDev } from 'src/configs';\nimport { IAccountLanguage } from 'src/i18n';\nimport { translateByFieldSelector } from 'src/module/Configs';\nimport Item from 'src/module/Account/features/AccountItem';\nimport styled from 'styled-components';\nimport { actionFetchRemoveAccount } from 'src/module/Account';\nimport { withLayout } from 'src/components/Layout';\n\nconst Styled = styled.div``;\n\nconst AccountDetails = () => {\n    const location: any = useLocation();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const translate: IAccountLanguage = useSelector(translateByFieldSelector)('account');\n    const translateAccountDetail = translate.accountDetail;\n    const { account }: { account: AccountInstance } = location.state;\n    const {\n        paymentAddressKeySerialized,\n        privateKeySerialized,\n        publicKeyCheckEncode,\n        validatorKey,\n        publicKeySerialized,\n    } = account.key.keySet;\n\n    const renderItem = React.useCallback(() => {\n        const factories = [\n            <Item\n                {...{\n                    title: translateAccountDetail.title1,\n                    desc: paymentAddressKeySerialized,\n                }}\n                key={translateAccountDetail.title1}\n            />,\n            <Item\n                {...{\n                    title: translateAccountDetail.title2,\n                    desc: privateKeySerialized,\n                }}\n                key={translateAccountDetail.title2}\n            />,\n            <Item\n                {...{\n                    title: translateAccountDetail.title3,\n                    desc: publicKeyCheckEncode,\n                }}\n                key={translateAccountDetail.title3}\n            />,\n            <Item {...{ title: translateAccountDetail.title4, desc: '' }} key={translateAccountDetail.title4} />,\n            <Item\n                {...{ title: translateAccountDetail.title5, desc: validatorKey }}\n                key={translateAccountDetail.title5}\n            />,\n        ];\n        const devFactories = [\n            ...factories,\n            <Item\n                {...{ title: translateAccountDetail.title6, desc: validatorKey }}\n                key={translateAccountDetail.title6}\n            />,\n            <Item {...{ title: translateAccountDetail.title7, desc: '' }} key={translateAccountDetail.title7} />,\n            <Item\n                {...{ title: translateAccountDetail.title8, desc: publicKeySerialized }}\n                key={translateAccountDetail.title8}\n            />,\n        ];\n        return isDev ? devFactories : factories;\n    }, []);\n\n    const handleRemoveKeychain = () => {\n        try {\n            dispatch(actionFetchRemoveAccount(account.name));\n            history.goBack();\n        } catch (error) {\n            console.debug(error);\n        }\n    };\n    return (\n        <Styled>\n            <Header title={`${account.name}'s ${translateAccountDetail.keychain}`} />\n            {renderItem()}\n            <Button onClick={handleRemoveKeychain} title={translateAccountDetail.delete} />\n        </Styled>\n    );\n};\n\nexport default withLayout(AccountDetails);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Header } from 'src/components';\nimport { withLayout } from 'src/components/Layout';\nimport { ILanguage } from 'src/i18n';\nimport { translateSelector } from 'src/module/Configs';\nimport { actionSetConfigs, actionSetServer } from 'src/module/Preload';\nimport { DEFAULT_LIST_SERVER, IServer } from 'src/services';\nimport { FONT_SIZES } from 'src/styles';\nimport styled from 'styled-components';\n\ninterface INetworkItem {\n    title: string;\n    desc: string;\n    onChangeNetwork?: () => void;\n}\n\nconst Styled = styled.div`\n    cursor: pointer;\n    .network-item {\n        margin-bottom: 30px;\n    }\n    .network-item .title {\n        font-size: ${FONT_SIZES.medium}px;\n        line-height: ${FONT_SIZES.medium + 5}px;\n        margin-bottom: 15px;\n    }\n    .network-item .desc {\n        font-size: ${FONT_SIZES.regular}px;\n        line-height: ${FONT_SIZES.regular + 5}px;\n    }\n`;\n\nconst NetworkItem = React.memo((props: INetworkItem) => {\n    const { title, desc, onChangeNetwork } = props;\n    const handleClick = () => typeof onChangeNetwork === 'function' && onChangeNetwork();\n    return (\n        <div className=\"network-item\" onClick={handleClick}>\n            <p className=\"title\">{title}</p>\n            <p className=\"desc\">{desc}</p>\n        </div>\n    );\n});\n\ndeclare const window: Window;\n\nconst Network = React.memo(() => {\n    const translate: ILanguage = useSelector(translateSelector);\n    const networkTranslate = translate.setting.network;\n    const dispatch = useDispatch();\n    const handleChangeNetwork = async (server: IServer) => {\n        await dispatch(\n            actionSetConfigs({\n                mainnet: !!server.default,\n                apiURL: server.apiURL || '',\n                chainURL: server.chainURL || '',\n            }),\n        );\n        await dispatch(actionSetServer(server));\n        window.location.assign('/');\n    };\n    return (\n        <Styled>\n            <Header title={networkTranslate.title} />\n            {DEFAULT_LIST_SERVER.map((server) => (\n                <NetworkItem\n                    key={server.id}\n                    title={server.name}\n                    desc={server.address}\n                    onChangeNetwork={() => handleChangeNetwork(server)}\n                />\n            ))}\n        </Styled>\n    );\n});\n\nexport default withLayout(Network);\n","import { persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport { ACTION_TOGGLE_HOME_CONFIGS } from './Setting.constant';\n\nexport interface ISettingReducer {\n    dev: {\n        stagingHomeConfigs: boolean;\n    };\n}\n\nconst initialState: ISettingReducer = {\n    dev: {\n        stagingHomeConfigs: false,\n    },\n};\n\nconst settingReducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case ACTION_TOGGLE_HOME_CONFIGS: {\n            return {\n                ...state,\n                dev: {\n                    ...state.dev,\n                    stagingHomeConfigs: !state.dev.stagingHomeConfigs,\n                },\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nconst persistConfig = {\n    key: 'setting',\n    storage,\n    whitelist: ['dev'],\n    stateReconciler: autoMergeLevel2,\n};\n\nexport default persistReducer(persistConfig, settingReducer);\n","import { persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport { uniq, uniqBy } from 'lodash';\nimport { IFollowedToken, IPTokenFromApi, IPCustomTokenFromApi } from './Token.interface';\nimport {\n    ACTION_FETCHED_PTOKEN_LIST,\n    ACTION_FETCHED_PCUSTOMTOKEN_LIST,\n    ACTION_FOLLOWED_POPULAR_TOKEN,\n    ACTION_SET_FOLLOWED_TOKENS,\n    ACTION_GET_BALANCE_TOKEN_FETCHING,\n    ACTION_GET_BALANCE_TOKEN_FETCHED,\n    ACTION_SET_SELECTED_TOKEN,\n    ACTION_FOLLOW_TOKEN_BY_ID,\n} from './Token.constant';\n\nexport interface IEnvToken {\n    followedPopularIds: boolean;\n}\n\nexport interface ITokenReducer {\n    followed: IFollowedToken[];\n    pTokens: IPTokenFromApi[];\n    pCustomTokens: IPCustomTokenFromApi[];\n    gettingBalance: string[];\n    following: any[];\n    toggleUnVerified: boolean;\n    mainnet: IEnvToken;\n    testnet: IEnvToken;\n    selectedTokenId: string;\n}\n\nconst initialState: ITokenReducer = {\n    followed: [],\n    pTokens: [],\n    pCustomTokens: [],\n    gettingBalance: [],\n    following: [],\n    toggleUnVerified: false,\n    mainnet: {\n        followedPopularIds: false,\n    },\n    testnet: {\n        followedPopularIds: false,\n    },\n    selectedTokenId: '',\n};\n\nconst tokenReducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case ACTION_FETCHED_PTOKEN_LIST: {\n            return {\n                ...state,\n                pTokens: action.payload,\n            };\n        }\n        case ACTION_FETCHED_PCUSTOMTOKEN_LIST: {\n            return {\n                ...state,\n                pCustomTokens: action.payload,\n            };\n        }\n        case ACTION_FOLLOWED_POPULAR_TOKEN: {\n            const { mainnet } = action.payload;\n            const field = mainnet ? 'mainnet' : 'testnet';\n            const stateField: IEnvToken = state[field];\n            return {\n                ...state,\n                [field]: {\n                    ...stateField,\n                    followedPopularIds: true,\n                },\n            };\n        }\n        case ACTION_SET_FOLLOWED_TOKENS: {\n            return {\n                ...state,\n                followed: [...action.payload?.followed] || [],\n            };\n        }\n        case ACTION_GET_BALANCE_TOKEN_FETCHING: {\n            const { tokenId } = action.payload;\n            return {\n                ...state,\n                gettingBalance: uniq([...state.gettingBalance, tokenId]),\n            };\n        }\n        case ACTION_GET_BALANCE_TOKEN_FETCHED: {\n            const token: IFollowedToken = action.payload;\n            return {\n                ...state,\n                followed: uniqBy([...state.followed, token], (t) => t?.tokenId),\n                gettingBalance: [...state.gettingBalance].filter((tokenId: string) => tokenId !== token?.tokenId),\n            };\n        }\n        case ACTION_SET_SELECTED_TOKEN: {\n            return { ...state, selectedTokenId: action.payload };\n        }\n\n        case ACTION_FOLLOW_TOKEN_BY_ID: {\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\nconst persistConfig = {\n    key: 'token',\n    storage,\n    whitelist: ['mainnet', 'testnet'],\n    stateReconciler: autoMergeLevel2,\n};\n\nexport default persistReducer(persistConfig, tokenReducer);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Header } from 'src/components';\nimport { ILanguage } from 'src/i18n';\nimport { translateByFieldSelector } from 'src/module/Configs';\nimport styled from 'styled-components';\nimport { listAccountSelector } from 'src/module/Account';\nimport AccountItem from 'src/module/Account/features/AccountItem';\nimport { AccountInstance } from 'incognito-js/build/web/browser';\nimport copy from 'copy-to-clipboard';\n\nconst Styled = styled.div``;\n\nconst Backup = React.memo(() => {\n    const [state, setState] = React.useState({\n        copied: false,\n    });\n    const { copied } = state;\n    const translate: ILanguage = useSelector(translateByFieldSelector)('account');\n    const { backup } = translate;\n    const listAccount = useSelector(listAccountSelector);\n    const backupData = listAccount\n        .map((account: AccountInstance) => `${account.name}: ${account.key.keySet.privateKeySerialized}`)\n        .join('\\n');\n    const handleCopyAll = () => {\n        setState({ ...state, copied: true });\n        copy(backupData);\n    };\n    return (\n        <Styled>\n            <Header title={backup.headerTitle} />\n            {listAccount.map((account: AccountInstance) => (\n                <AccountItem\n                    title={account.name}\n                    desc={account.key.keySet.privateKeySerialized}\n                    key={account.name}\n                    limit={17}\n                />\n            ))}\n            <Button title={copied ? backup.copied : backup.copyAll} onClick={handleCopyAll} />\n        </Styled>\n    );\n});\n\nexport default Backup;\n","import { Field, InjectedFormProps } from 'redux-form';\nimport React from 'react';\nimport Header from 'src/components/Header';\nimport { Button } from 'src/components/Core';\nimport InputField from 'src/components/ReduxForm/InputField';\nimport { validator } from 'src/components/ReduxForm';\nimport withCreateAccount, { TOutter } from './CreateAccount.enhance';\nimport { Styled } from './CreateAccount.styled';\n\nconst CreateAccount = (props: any & TOutter & InjectedFormProps<any, TOutter>) => {\n    const { disabledForm, handleCreateAccount } = props;\n    const { handleSubmit, submitting } = props;\n    return (\n        <Styled>\n            <Header title=\"Create keychain\" />\n            <form className=\"form-create-account\" onSubmit={handleSubmit(handleCreateAccount)}>\n                <Field\n                    component={InputField}\n                    name=\"accountName\"\n                    label=\"Keychain name\"\n                    validate={[...validator.combinedAccountName]}\n                    componentProps={{\n                        autoFocus: true,\n                        placeholder: 'Keychain name',\n                    }}\n                />\n                <Button\n                    title={!submitting ? 'Create keychain' : 'Creating keychain...'}\n                    disabled={disabledForm || submitting}\n                    type=\"submit\"\n                />\n            </form>\n        </Styled>\n    );\n};\n\nexport default withCreateAccount(CreateAccount);\n","import React from 'react';\nimport { Field, InjectedFormProps } from 'redux-form';\nimport Header from 'src/components/Header';\nimport { validator } from 'src/components/ReduxForm';\nimport InputField from 'src/components/ReduxForm/InputField';\nimport { Button } from 'src/components/Core';\nimport { Styled } from './ImportAccount.styled';\nimport withImportAccount, { TOutter } from './ImportAccount.enhance';\n\nconst ImportAccount = (props: any & TOutter & InjectedFormProps<any, TOutter>) => {\n    const { handleImportAccount, readOnlyName, handleChangeRandomName, disabledForm, handleSubmit, submitting } = props;\n    return (\n        <Styled>\n            <Header title=\"Import keychain\" />\n            <form className=\"form-import-account\" onSubmit={handleSubmit(handleImportAccount)}>\n                <div>\n                    <Field\n                        component={InputField}\n                        componentProps={{\n                            autoFocus: true,\n                            placeholder: 'Keychain name',\n                            readOnly: readOnlyName,\n                        }}\n                        name=\"accountName\"\n                        label=\"Keychain name\"\n                        validate={[...validator.combinedAccountName]}\n                        rightLabel={\n                            readOnlyName && (\n                                <button type=\"button\" onClick={handleChangeRandomName}>\n                                    Edit\n                                </button>\n                            )\n                        }\n                    />\n                    <Field\n                        component={InputField}\n                        name=\"privateKey\"\n                        label=\"Private Key\"\n                        validate={[validator.required]}\n                        componentProps={{\n                            autoFocus: true,\n                            placeholder: 'Enter private key',\n                        }}\n                    />\n                    <Button\n                        title={submitting ? 'Importing keychain...' : 'Import keychain'}\n                        type=\"submit\"\n                        disabled={disabledForm || submitting}\n                    />\n                </div>\n            </form>\n        </Styled>\n    );\n};\n\nexport default withImportAccount(ImportAccount);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Field, InjectedFormProps } from 'redux-form';\nimport { Button, Header } from 'src/components';\nimport { InputField, validator } from 'src/components/ReduxForm';\nimport { IAddressBookLanguage } from 'src/i18n/interface';\nimport { translateByFieldSelector } from 'src/module/Configs';\nimport styled from 'styled-components';\nimport withCreate, { IMergeProps } from './Create.enhance';\n\nconst Styled = styled.div``;\n\nconst Create = (props: IMergeProps & InjectedFormProps & any) => {\n    const translate: IAddressBookLanguage = useSelector(translateByFieldSelector)('addressBook');\n    const { handleSubmit, handleCreate, valid } = props;\n    return (\n        <Styled>\n            <Header title={translate.headerTitleCreate} />\n            <form onSubmit={handleSubmit(handleCreate)}>\n                <Field\n                    component={InputField}\n                    name=\"name\"\n                    label={translate.name}\n                    validate={[validator.required]}\n                    componentProps={{\n                        placeholder: translate.name,\n                        autoFocus: true,\n                        maxLength: 50,\n                    }}\n                />\n                <Field\n                    component={InputField}\n                    name=\"address\"\n                    label={translate.address}\n                    validate={[validator.required]}\n                    componentProps={{\n                        placeholder: translate.address,\n                        // readOnly: true,\n                    }}\n                />\n                <Button title={translate.btnCreate} type=\"submit\" disabled={!valid} />\n            </form>\n        </Styled>\n    );\n};\n\nexport default withCreate(Create);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Header } from 'src/components';\nimport { withLayout } from 'src/components/Layout';\nimport { IHistoryLanguage } from 'src/i18n';\nimport { serverSelector } from 'src/module/Preload';\nimport styled from 'styled-components';\nimport { translateByFieldSelector } from 'src/module/Configs';\nimport HistoryItem from './History.item';\nimport { ICacheHistoryTokenSelector, IHistoryItem } from './History.interface';\nimport { historyCacheByTxIdSelector } from './History.selector';\n\nconst Styled = styled.div`\n    .hook-row {\n        margin-top: 15px;\n        > p {\n            :first-child {\n                flex: 1 0 20%;\n            }\n            :last-child {\n                flex: 1 0 60%;\n            }\n        }\n    }\n`;\n\nconst History = React.memo(() => {\n    const params: any = useParams();\n    const { txId }: { txId: string } = params;\n    const historyLanguage: IHistoryLanguage = useSelector(translateByFieldSelector)('history');\n    const server = useSelector(serverSelector);\n    const history: ICacheHistoryTokenSelector | undefined = useSelector(historyCacheByTxIdSelector)(txId);\n    if (!history) {\n        return null;\n    }\n    const historyFactories: IHistoryItem[] = [\n        {\n            title: historyLanguage.id,\n            desc: history?.txId,\n            copyData: history?.txId,\n            link: history?.isIncognitoTx ? `${server.exploreChainURL}/tx/${history?.txId}` : '',\n        },\n        {\n            title: history.type,\n            desc: `${history.amountFormated} ${history.symbol}`,\n        },\n        {\n            title: historyLanguage.fee,\n            desc: `${history?.feeFormated} ${history.feeSymbol}`,\n        },\n        {\n            title: historyLanguage.status,\n            desc: history?.statusMessage,\n            // canRetryExpiredDeposit: history?.canRetryExpiredDeposit,\n            // handleRetryExpiredDeposit: onRetryExpiredDeposit,\n            // message: history?.statusDetail,\n            // handleRetryHistoryStatus: onRetryHistoryStatus,\n            // showReload,\n            // fetchingHistory,\n        },\n        {\n            title: historyLanguage.time,\n            desc: history?.timeFormated,\n        },\n        // {\n        //   title: 'Expired at',\n        //   desc: formatUtil.formatDateTime(history?.expiredAt),\n\n        // },\n        // {\n        //   title: 'TxID',\n        //   desc: `${CONSTANT_CONFIGS.EXPLORER_CONSTANT_CHAIN_URL}/tx/${history.incognitoTxID}`,\n        //   openUrl: true,\n\n        //     history?.id === history?.incognitoTxID ||\n        //     !history.incognitoTxID ||\n        //     includes(history?.inchainTx, history.incognitoTxID) ||\n        //     (!!history?.isUnshieldTx && selectedPrivacy?.isDecentralized),\n        // },\n        // {\n        //   title: 'Inchain TxID',\n        //   desc: history?.inchainTx,\n        //   openUrl: true,\n\n        // },\n        // {\n        //   title: 'Outchain TxID',\n        //   desc: history?.outchainTx,\n        //   openUrl: true,\n\n        // },\n        {\n            title: historyLanguage.toAddress,\n            desc: history.paymentAddress,\n            copyData: history.paymentAddress,\n        },\n        {\n            title: historyLanguage.coin,\n            desc: history.symbol,\n        },\n        // {\n        //   title: 'Contract',\n        //   desc: history.erc20TokenAddress,\n\n        // },\n    ];\n    return (\n        <Styled>\n            <Header title={historyLanguage.headerTitle} />\n            {historyFactories.map((item) => (\n                <HistoryItem key={item.title} {...item} />\n            ))}\n        </Styled>\n    );\n});\n\nexport default withLayout(History);\n","import React, { SyntheticEvent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Field } from 'redux-form';\nimport { Button, Header } from 'src/components';\nimport { InputField } from 'src/components/ReduxForm';\nimport { ISendLanguage } from 'src/i18n';\nimport { translateByFieldSelector } from 'src/module/Configs';\nimport { INPUT_FIELD } from 'src/components/ReduxForm/InputField/InputField.constant';\nimport withSend, { IMergeProps } from './Send.enhance';\nimport { sendDataSelector, sendSelector } from './Send.selector';\nimport { ISelectedPrivacy, selectedPrivacySelector } from '../Token';\nimport { IFeeTypes, ISendData, ISendReducer } from './Send.interface';\nimport { actionChangeFeeType } from './Send.actions';\nimport { Styled } from './Send.styled';\nimport { FORM_CONFIGS } from './Send.constant';\n\nconst FeeType = React.memo((props: IFeeTypes) => {\n    const { symbol, tokenId } = props;\n    const { feeUnitByTokenId }: ISendData = useSelector(sendDataSelector);\n    const dispatch = useDispatch();\n    const selected = feeUnitByTokenId === tokenId;\n    const handleChangeFeeTypes = (e: SyntheticEvent) => {\n        e.preventDefault();\n        if (!selected) {\n            dispatch(actionChangeFeeType(tokenId));\n        }\n    };\n    return (\n        <button\n            type=\"button\"\n            className={`fee-type ${selected ? 'selected' : ''} fs-small`}\n            onClick={handleChangeFeeTypes}\n        >\n            {symbol}\n        </button>\n    );\n});\n\nconst FeeTypes = React.memo(() => {\n    const { types }: ISendReducer = useSelector(sendSelector);\n    return (\n        <div className=\"fee-types flex\">\n            {types.map((type) => (\n                <FeeType {...type} key={type.tokenId} />\n            ))}\n        </div>\n    );\n});\n\nconst EstimateFee = React.memo(() => {\n    const { totalFeeText }: ISendData = useSelector(sendDataSelector);\n    const translate: ISendLanguage = useSelector(translateByFieldSelector)('send');\n    return (\n        <div className=\"estimate-fee flex\">\n            <div className=\"left\">\n                <p className=\"fee\">{`${translate.fee}: ${totalFeeText}`}</p>\n            </div>\n            <div className=\"right\">\n                <FeeTypes />\n            </div>\n        </div>\n    );\n});\n\nconst Send = (props: IMergeProps) => {\n    const selectedPrivacy: ISelectedPrivacy = useSelector(selectedPrivacySelector);\n    const translate: ISendLanguage = useSelector(translateByFieldSelector)('send');\n    const { titleBtnSubmit, disabledForm }: ISendData = useSelector(sendDataSelector);\n    const {\n        handleSubmit,\n        handleSend,\n        validateAddress,\n        validateAmount,\n        onChangeField,\n        onClickMax,\n        onClickAddressBook,\n        onClickScan,\n        onGoBack,\n    } = props;\n    return (\n        <Styled>\n            <Header\n                onGoBack={onGoBack}\n                title={`${translate.headerTitle} ${selectedPrivacy.symbol || selectedPrivacy.pSymbol}`}\n            />\n            <p className=\"balance\">{`${translate.balance}: ${selectedPrivacy.formatAmount}`}</p>\n            <form onSubmit={handleSubmit(handleSend)}>\n                <Field\n                    component={InputField}\n                    name={FORM_CONFIGS.amount}\n                    inputType={INPUT_FIELD.amount}\n                    componentProps={{\n                        placeholder: translate.amount,\n                        autoFocus: true,\n                    }}\n                    onClickMax={onClickMax}\n                    validate={validateAmount}\n                />\n                <Field\n                    component={InputField}\n                    name={FORM_CONFIGS.toAddress}\n                    componentProps={{\n                        placeholder: translate.incognitoAddress,\n                        onChange: (e: React.ChangeEvent<HTMLInputElement>) =>\n                            onChangeField(e.target.value, FORM_CONFIGS.toAddress),\n                    }}\n                    inputType={INPUT_FIELD.address}\n                    onClickAddressBook={onClickAddressBook}\n                    onClickScan={onClickScan}\n                    validate={validateAddress}\n                />\n                <Field\n                    component={InputField}\n                    name={FORM_CONFIGS.memo}\n                    componentProps={{\n                        placeholder: translate.placeholderMemo,\n                    }}\n                />\n                <EstimateFee />\n                <Button title={titleBtnSubmit} disabled={disabledForm} type=\"submit\" />\n            </form>\n        </Styled>\n    );\n};\n\nexport default withSend(Send);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Header } from 'src/components';\nimport { ILanguage } from 'src/i18n';\nimport { themeSelector, translateSelector } from 'src/module/Configs';\nimport { IGlobalStyle } from 'src/styles';\nimport styled from 'styled-components';\nimport { Amount, Balance, ISelectedPrivacy, selectedPrivacySelector, PerChange } from 'src/module/Token';\nimport { route as routeTokenInfo } from 'src/module/Token/features/TokenInfo';\nimport { HistoryList } from 'src/module/History';\nimport { route as routeSend } from 'src/module/Send';\nimport { useHistory } from 'react-router-dom';\nimport { InfoIcon, VerifiedIcon } from 'src/components/Icons';\nimport { route as routeWallet } from 'src/module/Wallet';\nimport withDetail from './Detail.enhance';\n\nconst Styled = styled.div`\n    .token-balance {\n        justify-content: center;\n        align-items: center;\n        display: flex;\n        flex-direction: column;\n    }\n    .token-balance .amount-token {\n        margin-bottom: 10px;\n    }\n    .token-balance .balance-token {\n        color: ${(props: IGlobalStyle) => props.theme.text};\n    }\n    .btn-container {\n        margin: 30px 0;\n    }\n    .hook-container {\n        display: flex;\n        align-items: flex-start;\n    }\n    .hook-container > .icon {\n        width: 18px;\n        height: 18px;\n        margin-top: 2px;\n        margin-left: unset;\n    }\n    .hook-container {\n        > :first-child {\n            margin-right: 5px;\n        }\n    }\n    .hook-container .amount-token {\n        max-width: 200px;\n    }\n    .header-title {\n        max-width: 100px;\n    }\n`;\n\nconst TokenBalance = React.memo(() => {\n    const selectedPrivacy: ISelectedPrivacy = useSelector(selectedPrivacySelector);\n    const { tokenId } = selectedPrivacy;\n    return (\n        <div className=\"token-balance\">\n            <div className=\"hook-container\">\n                <Amount tokenId={tokenId} classNameTextCustom=\"fw-bold fs-avglarge amount-token\" showVerifiedToken />\n                {selectedPrivacy.isVerified && <VerifiedIcon />}\n            </div>\n            <div className=\"hook-container\">\n                <Balance tokenId={tokenId} classNameTextCustom=\"balance-token\" />\n                <PerChange tokenId={tokenId} />\n            </div>\n        </div>\n    );\n});\n\nexport const GroupButton = React.memo(() => {\n    const translate: ILanguage = useSelector(translateSelector);\n    const translateDetail = translate.token.detail;\n    const history = useHistory();\n    const handleSend = () => {\n        history.push(routeSend);\n    };\n    return <Button title={translateDetail.btnSend} onClick={handleSend} />;\n});\n\nconst Detail = React.memo(() => {\n    const token = useSelector(selectedPrivacySelector);\n    const theme = useSelector(themeSelector);\n    const history = useHistory();\n    return (\n        <Styled theme={theme}>\n            <Header\n                onGoBack={() => history.push(routeWallet)}\n                title={token.name}\n                customHeader={<InfoIcon onClick={() => history.push(routeTokenInfo)} />}\n            />\n            <TokenBalance />\n            <GroupButton />\n            <HistoryList />\n        </Styled>\n    );\n});\n\nexport default withDetail(Detail);\n","import React from 'react';\nimport Header from 'src/components/Header';\nimport { CopyIcon, OpenLinkIcon, QuestionIcon } from 'src/components/Icons';\nimport { TokenBasic } from 'src/module/Token';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { translateByFieldSelector } from 'src/module/Configs';\nimport { IGeneralLanguage, ITokenLanguage } from 'src/i18n';\nimport copy from 'copy-to-clipboard';\nimport { actionToggleToast, TOAST_CONFIGS } from 'src/components';\nimport { COLORS } from 'src/styles';\nimport withTokenInfo, { IInfo } from './TokenInfo.enhance';\nimport { Styled } from './TokenInfo.styled';\n\nconst InfoItem = ({ label, value, copyable, link }: IInfo) => {\n    const translate: IGeneralLanguage = useSelector(translateByFieldSelector)('general');\n    const dispatch = useDispatch();\n    const handleCopyText = () => {\n        copy(value);\n        dispatch(\n            actionToggleToast({\n                toggle: true,\n                type: TOAST_CONFIGS.success,\n                value: translate.copied,\n            }),\n        );\n    };\n    if (!value) {\n        return null;\n    }\n    return (\n        <div className=\"info-item flex\">\n            {!!label && <p className=\"ellipsis sub-text\">{label}</p>}\n            <div className=\"hook flex\">\n                {!!value && <p className=\"ellipsis fw-medium main-text\">{value}</p>}\n                {copyable && <CopyIcon onClick={handleCopyText} />}\n                {!!link && <OpenLinkIcon onClick={() => window.open(link)} />}\n            </div>\n        </div>\n    );\n};\n\nconst TokenInfo = (\n    props: {\n        infosFactories: IInfo[];\n        tokenId: string;\n        isVerified: boolean;\n        handlePressVerifiedInfo: () => any;\n    } & any,\n) => {\n    const translate: ITokenLanguage = useSelector(translateByFieldSelector)('token');\n    const { infosFactories, tokenId, isVerified, handlePressVerifiedInfo } = props;\n    return (\n        <Styled>\n            <Header title={translate.infoToken.headerTitle} />\n            <div className=\"extra\">\n                <TokenBasic tokenId={tokenId} />\n                <div className=\"flex verified-container\">\n                    <p className=\"ellipsis subtext\" style={{ color: isVerified ? COLORS.green : COLORS.colorGreyBold }}>\n                        {isVerified ? 'Verified' : 'Unverified'}\n                    </p>\n                    <QuestionIcon onClick={handlePressVerifiedInfo} />\n                </div>\n                {infosFactories.map((info: IInfo) => (\n                    <InfoItem {...info} key={info.label} />\n                ))}\n            </div>\n        </Styled>\n    );\n};\n\nexport default withTokenInfo(TokenInfo);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Header } from 'src/components';\nimport { withLayout } from 'src/components/Layout';\nimport { historyCacheByTxIdSelector, ICacheHistoryTokenSelector, IHistoryItem, HistoryItem } from 'src/module/History';\nimport { serverSelector } from 'src/module/Preload';\nimport { translateByFieldSelector } from 'src/module/Configs';\nimport { IConfirmTxLanguage } from 'src/i18n';\nimport { route as routeDetail } from 'src/module/Token/features/Detail';\n\nconst Styled = styled.div`\n    p.title {\n        text-align: center;\n        margin-bottom: 30px;\n    }\n`;\n\nconst ConfirmTx = () => {\n    const { state }: { state: any } = useLocation();\n    const history = useHistory();\n    const { txId }: { txId: string } = state;\n    const server = useSelector(serverSelector);\n    const confirmLanguage: IConfirmTxLanguage = useSelector(translateByFieldSelector)('send.confirm');\n    const tx: ICacheHistoryTokenSelector | undefined = useSelector(historyCacheByTxIdSelector)(txId);\n    if (!tx || !confirmLanguage) {\n        return <Redirect to=\"/\" />;\n    }\n    const itemsFactories: IHistoryItem[] = [\n        {\n            title: confirmLanguage.txId,\n            desc: txId,\n            copyData: tx.txId,\n            link: `${server.exploreChainURL}/tx/${tx.txId}`,\n        },\n        {\n            title: confirmLanguage.toAddress,\n            desc: tx.paymentAddress,\n            copyData: tx.paymentAddress,\n        },\n        {\n            title: confirmLanguage.time,\n            desc: tx.timeFormated,\n        },\n        {\n            title: confirmLanguage.amount,\n            desc: `${tx.amountFormated} ${tx.symbol}`,\n        },\n        {\n            title: confirmLanguage.fee,\n            desc: `${tx.feeFormated} ${tx.feeSymbol}`,\n        },\n    ];\n    return (\n        <Styled>\n            <Header onGoBack={() => history.push(routeDetail)} title={confirmLanguage.headerTitle} />\n            <p className=\"title fw-bold fs-supermedium center-text\">{confirmLanguage.sent}</p>\n            {itemsFactories.map((item: IHistoryItem) => (\n                <HistoryItem key={item.title} {...item} />\n            ))}\n        </Styled>\n    );\n};\n\nexport default withLayout(React.memo(ConfirmTx));\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Header } from 'src/components';\nimport { ILanguage } from 'src/i18n';\nimport { translateSelector } from 'src/module/Configs';\nimport styled from 'styled-components';\nimport { ListAllToken, TokenBasic, IAllListTokenInner } from 'src/module/Token';\n\nimport withAddToken, { TInner } from './AddToken.enhance';\n\nconst Styled = styled.div``;\n\nconst AddToken = (props: TInner & IAllListTokenInner & any) => {\n    const translate: ILanguage = useSelector(translateSelector);\n    const addTokenTranslate = translate.token.addToken;\n    const { handleToggleFollowTokenById } = props;\n    const renderItem = (tokenId: string) => {\n        return (\n            <TokenBasic tokenId={tokenId} handleSelectToken={() => handleToggleFollowTokenById(tokenId)} showFollowed />\n        );\n    };\n    return (\n        <Styled>\n            <Header title={addTokenTranslate.headerTitle} canSearch />\n            <ListAllToken {...{ ...props, renderItem }} />\n        </Styled>\n    );\n};\n\nexport default withAddToken(AddToken);\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst accountRoute: IRouteProps = {\n    path: '/select-account',\n    exact: true,\n    component: lazy(() => import('./SelectAccount')),\n    name: 'Account Item Modal',\n    to: '/select-account',\n};\n\nexport const route = '/select-account';\n\nexport default accountRoute;\n","import { http } from 'src/http';\nimport { cachePromise } from 'src/services';\n\nexport const apiGetPTokenList = (apiURL: string) =>\n    cachePromise('ptoken', () => http.get(`${apiURL}/ptoken/list`).then((res: any) => res));\n\nexport const apiGetPCustomTokenList = (apiURL: string) =>\n    cachePromise('pcustomtoken', () => http.get(`${apiURL}/pcustomtoken/list`).then((res: any) => res));\n","import { WalletInstance } from 'incognito-js/build/web/browser';\nimport { ENVS } from 'src/configs';\nimport { createWallet, researchWallet } from 'src/database/tables/wallet';\nimport { IDataInitWallet } from './Wallet.interface';\n\nexport const initWallet = async (walletName: string) => {\n    let wallet = new WalletInstance();\n    let walletId;\n    wallet = await wallet.init(ENVS.REACT_APP_PASSPHRASE_WALLET_DEFAULT, walletName);\n    const encryptWallet = wallet.backup(ENVS.REACT_APP_PASSWORD_SECRET_KEY);\n    if (!wallet) {\n        throw new Error(`Can't create wallet`);\n    }\n    const data = {\n        encryptWallet,\n        name: wallet.name,\n    };\n    walletId = await createWallet(data);\n    if (!walletId) {\n        throw new Error(`Can't store wallet`);\n    }\n    const result: IDataInitWallet = {\n        wallet,\n        walletId,\n    };\n    return result;\n};\n\nexport const loadWallet = async (walletId: number) => {\n    let wallet;\n    const walletData = await researchWallet(walletId);\n    const { encryptWallet } = walletData;\n    if (!encryptWallet) {\n        throw new Error(`Can't not load wallet`);\n    }\n    wallet = await WalletInstance.restore(encryptWallet, ENVS.REACT_APP_PASSWORD_SECRET_KEY);\n    return wallet;\n};\n","import { COLORS } from 'src/styles';\nimport { CONSTANT } from 'incognito-js/build/web/browser';\n\nconst { HISTORY } = CONSTANT;\nconst { TX_STATUS } = CONSTANT.TX_CONSTANT;\nconst { HISTORY_TYPE } = CONSTANT.TX_CONSTANT;\n\nconst getStatusDataShield = (history: any) => {\n    const { statusCode, statusMessage } = history;\n    let statusColor;\n    const { STATUS_CODE_SHIELD_CENTRALIZED, STATUS_CODE_SHIELD_DECENTRALIZED } = HISTORY;\n    if (history?.isDecentralized) {\n        if (STATUS_CODE_SHIELD_DECENTRALIZED.COMPLETE === statusCode) {\n            statusColor = COLORS.green;\n        } else {\n            statusColor = COLORS.colorGreyBold;\n        }\n    } else if (STATUS_CODE_SHIELD_CENTRALIZED.COMPLETE.includes(statusCode)) {\n        statusColor = COLORS.green;\n    } else {\n        statusColor = COLORS.colorGreyBold;\n    }\n    return { statusColor, statusMessage };\n};\n\nconst getStatusDataUnShield = (history: any) => {\n    const { statusCode, statusMessage } = history;\n    const { STATUS_CODE_UNSHIELD_CENTRALIZED, STATUS_CODE_UNSHIELD_DECENTRALIZED } = HISTORY;\n    let statusColor;\n    if (history?.isDecentralized) {\n        if (STATUS_CODE_UNSHIELD_DECENTRALIZED.COMPLETE === statusCode) {\n            statusColor = COLORS.green;\n        } else {\n            statusColor = COLORS.colorGreyBold;\n        }\n    } else if (STATUS_CODE_UNSHIELD_CENTRALIZED.COMPLETE === statusCode) {\n        statusColor = COLORS.green;\n    } else {\n        statusColor = COLORS.colorGreyBold;\n    }\n    return { statusColor, statusMessage };\n};\n\nexport const getStatusData = (history: any) => {\n    const { status } = history;\n    if (history?.isShieldTx) {\n        const statusData = getStatusDataShield(history);\n        return statusData;\n    }\n    if (history?.isUnshieldTx) {\n        const statusData = getStatusDataUnShield(history);\n        return statusData;\n    }\n    let statusMessage;\n    let statusColor;\n    switch (status) {\n        case HISTORY.STATUS_TEXT.PENDING:\n        case TX_STATUS.CONFIRMED:\n            statusMessage = 'Pending';\n            break;\n        case HISTORY.STATUS_TEXT.SUCCESS:\n        case TX_STATUS.SUCCESS:\n            statusMessage = 'Complete';\n            statusColor = COLORS.green;\n            break;\n        case HISTORY.STATUS_TEXT.FAILED:\n        case TX_STATUS.FAILED:\n            statusMessage = 'Failed';\n            break;\n        case HISTORY.STATUS_TEXT.EXPIRED:\n            statusMessage = 'Expired';\n            break;\n        default:\n            statusMessage = '';\n            statusColor = COLORS.colorGreyBold;\n    }\n    return {\n        statusMessage,\n        statusColor,\n    };\n};\n\nexport const getTypeData = (type: number, history: any, paymentAddress: string) => {\n    let typeText = '';\n    switch (type) {\n        case HISTORY_TYPE.SEND_NATIVE_TOKEN:\n        case HISTORY_TYPE.SEND_PRIVACY_TOKEN: {\n            const metaData: any = HISTORY.META_DATA_TYPE;\n            const isUTXO = history?.memo === 'Defragment' && history?.toAddress === paymentAddress;\n            typeText = isUTXO ? 'Consolidation' : metaData[history?.metaDataType] || 'Send';\n            if (typeText === HISTORY.META_DATA_TYPE[90]) {\n                typeText = 'Send';\n            }\n            break;\n        }\n        default:\n            break;\n    }\n    return typeText;\n};\n","import { IDBPDatabase, openDB } from 'idb';\n\nclass IndexedDb {\n    private database: string;\n\n    private db: any;\n\n    constructor(database: string) {\n        this.database = database;\n    }\n\n    public async createObjectStore(tableNames: string[]) {\n        try {\n            this.db = await openDB(this.database, 1, {\n                upgrade(db: IDBPDatabase) {\n                    for (const tableName of tableNames) {\n                        if (db.objectStoreNames.contains(tableName)) {\n                            continue;\n                        }\n                        db.createObjectStore(tableName, {\n                            autoIncrement: true,\n                            keyPath: 'id',\n                        });\n                    }\n                },\n            });\n        } catch (error) {\n            throw error;\n        }\n        return this;\n    }\n\n    public async getValue(tableName: string, key: number) {\n        const tx = this.db.transaction(tableName, 'readonly');\n        const store = tx.objectStore(tableName);\n        const result = await store.get(key);\n        return result;\n    }\n\n    public async getAllValue(tableName: string) {\n        const tx = this.db.transaction(tableName, 'readonly');\n        const store = tx.objectStore(tableName);\n        const result = await store.getAll();\n        return result;\n    }\n\n    public async addValue(tableName: string, value: any) {\n        const tx = this.db.transaction(tableName, 'readwrite');\n        const store = tx.objectStore(tableName);\n        const result = await store.add(value);\n        return result;\n    }\n\n    public async addValueByKey(tableName: string, value: any, key: number) {\n        const tx = this.db.transaction(tableName, 'readwrite');\n        const store = tx.objectStore(tableName);\n        const result = await store.add(value, key);\n        return result;\n    }\n\n    public async putBulkValue(tableName: string, values: any[]) {\n        const tx = this.db.transaction(tableName, 'readwrite');\n        const store = tx.objectStore(tableName);\n        let result: any[] = [];\n        for (const value of values) {\n            result.push(store.put(value));\n        }\n        await Promise.all(result);\n        return this.getAllValue(tableName);\n    }\n\n    public async updateByKey(tableName: string, value: any) {\n        const tx = this.db.transaction(tableName, 'readwrite');\n        const store = tx.objectStore(tableName);\n        const result = await store.put(value);\n        return result;\n    }\n\n    public async deleteValue(tableName: string, id: number) {\n        const tx = this.db.transaction(tableName, 'readwrite');\n        const store = tx.objectStore(tableName);\n        const result = await store.get(id);\n        if (!result) {\n            console.log('Id not found', id);\n            return result;\n        }\n        await store.delete(id);\n        console.log('Deleted Data', id);\n        return id;\n    }\n}\n\nexport default IndexedDb;\n","import IndexedDB from './IndexedDB';\n\nexport const DB_NAME = 'incognito-database';\n\nexport const initIncognitoDB = async () => {\n    let incognitoDB;\n    try {\n        incognitoDB = new IndexedDB(DB_NAME);\n        const objectStore = ['wallet'];\n        incognitoDB = await incognitoDB.createObjectStore(objectStore);\n    } catch (error) {\n        throw error;\n    }\n    return incognitoDB;\n};\n","import { WalletInstance } from 'incognito-js/build/web/browser';\nimport { ENVS } from 'src/configs';\nimport { initIncognitoDB } from 'src/database/IncognitoDB';\n\nexport const TABLE_NAME = 'wallet';\n\nexport const createWallet = async (wallet: any) => {\n    let stored;\n    try {\n        const incognitoDB = await initIncognitoDB();\n        stored = await incognitoDB.addValue(TABLE_NAME, wallet);\n        console.debug(`stored`, stored);\n    } catch (error) {\n        throw error;\n    }\n    return stored;\n};\n\nexport const researchWallet = async (walletId: number) => {\n    let wallet;\n    try {\n        const incognitoDB = await initIncognitoDB();\n        wallet = await incognitoDB.getValue(TABLE_NAME, walletId);\n    } catch (error) {\n        throw error;\n    }\n    return wallet;\n};\n\ninterface IWallet {\n    encryptWallet: string;\n    id: number;\n    name: string;\n}\n\nexport const updateWallet = async (wallet: WalletInstance, walletId: number) => {\n    let updated;\n    console.debug(`walletId`, walletId);\n    try {\n        const incognitoDB = await initIncognitoDB();\n        const curWallet: IWallet = await incognitoDB.getValue(TABLE_NAME, walletId);\n        const encryptWallet = wallet.backup(ENVS.REACT_APP_PASSWORD_SECRET_KEY);\n        curWallet.encryptWallet = encryptWallet;\n        updated = await incognitoDB.updateByKey(TABLE_NAME, curWallet);\n    } catch (error) {\n        throw error;\n    }\n    return updated;\n};\n\nexport const deleteWallet = async () => {\n    try {\n        // TODO: implement method delete\n    } catch (error) {\n        console.debug(error);\n    }\n};\n","import { AccountInstance, WalletInstance } from 'incognito-js/build/web/browser';\nimport { isEqual } from 'lodash';\nimport { Dispatch } from 'redux';\nimport { IRootState } from 'src/redux/interface';\nimport {\n    actionHandleLoadWallet,\n    actionSaveWallet,\n    IWalletReducer,\n    walletDataSelector,\n    walletSelector,\n} from 'src/module//Wallet';\nimport {\n    ACTION_FETCHED,\n    ACTION_FETCHING_CREATE_ACCOUNT,\n    ACTION_FETCHED_CREATE_ACCOUNT,\n    ACTION_FETCHED_IMPORT_ACCOUNT,\n    ACTION_FETCHING_IMPORT_ACCOUNT,\n    ACTION_SELECT_ACCOUNT,\n    ACTION_SET_LIST_ACCOUNT,\n    ACTION_SWITCH_ACCOUNT_FETCHING,\n    ACTION_SWITCH_ACCOUNT_FETCHED,\n    ACTION_GET_ACCOUNT_BALANCE_FETCHING,\n    ACTION_GET_ACCOUNT_BALANCE_FETCHED,\n} from './Account.constant';\nimport { defaultAccountNameSelector, defaultAccountSelector } from './Account.selector';\n\nexport const actionFetched = (payload: any) => ({\n    type: ACTION_FETCHED,\n    payload,\n});\n\nexport const actionFetchingCreateAccount = () => ({\n    type: ACTION_FETCHING_CREATE_ACCOUNT,\n});\n\nexport const actionFetchedCreateAccount = (payload: AccountInstance) => ({\n    type: ACTION_FETCHED_CREATE_ACCOUNT,\n    payload,\n});\n\nexport const actionFetchCreateAccount = (accountName: string) => async (\n    dispatch: Dispatch,\n    getState: () => IRootState,\n) => {\n    try {\n        const state = getState();\n        const wallet: WalletInstance = walletDataSelector(state);\n        await dispatch(actionFetchingCreateAccount());\n        const account = await wallet.masterAccount.addAccount(accountName);\n        if (!account) {\n            throw new Error(`Can't not create account`);\n        }\n        await dispatch(actionFetchedCreateAccount(account));\n    } catch (error) {\n        throw error;\n    } finally {\n        actionSaveWallet()(dispatch, getState);\n    }\n};\n\nexport const actionFetchingImportAccount = () => ({\n    type: ACTION_FETCHING_IMPORT_ACCOUNT,\n});\n\nexport const actionFetchedImportAccount = (payload: AccountInstance) => ({\n    type: ACTION_FETCHED_IMPORT_ACCOUNT,\n    payload,\n});\n\nexport const actionFetchImportAccount = (accountName: string, privateKey: string) => async (\n    dispatch: Dispatch,\n    getState: () => IRootState,\n) => {\n    try {\n        const state = getState();\n        const wallet: WalletInstance = walletDataSelector(state);\n        await dispatch(actionFetchingImportAccount());\n        const account = await wallet.masterAccount.importAccount(accountName, privateKey);\n        if (!account) {\n            throw new Error(`Can't not create account`);\n        }\n        await dispatch(actionFetchedImportAccount(account));\n    } catch (error) {\n        throw error;\n    } finally {\n        actionSaveWallet()(dispatch, getState);\n    }\n};\n\nexport const actionFetchRemoveAccount = (accountName: string) => async (\n    dispatch: Dispatch,\n    getState: () => IRootState,\n) => {\n    try {\n        const state = getState();\n        const wallet: WalletInstance = walletDataSelector(state);\n        await wallet.masterAccount.removeAccount(accountName);\n    } catch (error) {\n        throw error;\n    } finally {\n        actionSaveWallet()(dispatch, getState);\n    }\n};\n\nexport const actionSelectAccount = (payload: string) => ({\n    type: ACTION_SELECT_ACCOUNT,\n    payload,\n});\n\nexport const actionSetListAccount = (payload: AccountInstance[]) => ({\n    type: ACTION_SET_LIST_ACCOUNT,\n    payload,\n});\n\nexport const actionSwitchAccountFetching = () => ({\n    type: ACTION_SWITCH_ACCOUNT_FETCHING,\n});\n\nexport const actionSwitchAccountFetched = () => ({\n    type: ACTION_SWITCH_ACCOUNT_FETCHED,\n});\n\nexport const actionSwitchAccount = (accountName: string) => async (dispatch: Dispatch, getState: () => IRootState) => {\n    const state = getState();\n    const wallet: WalletInstance = walletDataSelector(state);\n    const defaultAccountName = defaultAccountNameSelector(state);\n    const account: AccountInstance = wallet.masterAccount.getAccountByName(accountName);\n    try {\n        if (isEqual(account?.name, defaultAccountName)) {\n            return account;\n        }\n        await dispatch(actionSwitchAccountFetching());\n        if (!account) {\n            throw new Error(`Account not found!`);\n        }\n        await dispatch(actionSelectAccount(account.name));\n        await actionHandleLoadWallet()(dispatch, getState);\n    } catch (error) {\n        throw error;\n    } finally {\n        await dispatch(actionSwitchAccountFetched());\n    }\n    return account;\n};\n\nexport const actionGetAccountBalanceFetching = (payload: { accountName: string }) => ({\n    type: ACTION_GET_ACCOUNT_BALANCE_FETCHING,\n    payload,\n});\n\nexport const actionGetAccountBalanceFetched = (payload: { accountName: string; amount: number }) => ({\n    type: ACTION_GET_ACCOUNT_BALANCE_FETCHED,\n    payload,\n});\n\nexport const actionGetAccountBalance = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    const state: IRootState = getState();\n    const account: AccountInstance = defaultAccountSelector(state);\n    const { loaded }: IWalletReducer = walletSelector(state);\n    if (!account || !loaded) {\n        return;\n    }\n    let accountBalance = 0;\n    try {\n        await dispatch(\n            actionGetAccountBalanceFetching({\n                accountName: account.name,\n            }),\n        );\n        accountBalance = (await account?.nativeToken?.getTotalBalance())?.toNumber();\n    } catch (error) {\n        throw error;\n    } finally {\n        dispatch(\n            actionGetAccountBalanceFetched({\n                accountName: account.name,\n                amount: accountBalance,\n            }),\n        );\n    }\n};\n","import { ACTION_FETCHED, ACTION_CHANGE_LANGUAGE } from './Configs.constant';\n\nexport const actionFetched = (payload: any) => ({\n    type: ACTION_FETCHED,\n    payload,\n});\n\nexport const actionChangeLanguage = (language: string) => ({\n    type: ACTION_CHANGE_LANGUAGE,\n    payload: language,\n});\n","import result from 'lodash/result';\nimport { createSelector } from 'reselect';\nimport { translateByLanguage } from 'src/i18n';\nimport { IRootState } from 'src/redux/interface';\nimport { IConfigsReducer } from './Configs.reducer';\n\nexport const configsSelector = createSelector(\n    (state: IRootState) => state.configs,\n    (configs: IConfigsReducer) => configs,\n);\n\nexport const translateSelector = createSelector(configsSelector, (configs) => translateByLanguage(configs.language));\n\nexport const translateByFieldSelector = createSelector(configsSelector, (configs) => (field: string) => {\n    const translate = translateByLanguage(configs.language);\n    const ts: any = result(translate, field);\n    return ts;\n});\n\nexport const themeSelector = createSelector(configsSelector, (configs) => configs.theme);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FaCopy, FaQrcode } from 'react-icons/fa';\nimport copy from 'copy-to-clipboard';\nimport { COLORS, FONT_SIZES } from 'src/styles';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { actionToggleToast, TOAST_CONFIGS } from 'src/components';\nimport { route } from './AccountItem.route';\n\nexport interface IProps {\n    title: string;\n    desc: string;\n    limit?: number;\n    hasQrCode?: boolean;\n    hasCopy?: boolean;\n    selectable?: boolean;\n    onSelectAccount?: any;\n}\n\nconst Styled = styled.div`\n    margin-bottom: 30px;\n    &.selectable {\n        cursor: pointer;\n    }\n    .hook p.title {\n        font-size: ${FONT_SIZES.medium}px;\n        line-height: ${FONT_SIZES.medium + 9}px;\n        font-weight: 500;\n    }\n    p.decs {\n        font-size: ${FONT_SIZES.regular}px;\n        line-height: ${FONT_SIZES.regular + 9}px;\n        font-weight: 100;\n    }\n    .hook {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 10px;\n    }\n    .hook .icons {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        svg {\n            cursor: pointer;\n        }\n        svg:first-child {\n            margin-right: 5px;\n        }\n    }\n`;\n\nconst AccountItem = (props: IProps) => {\n    const { title, desc, hasCopy = true, hasQrCode = true, selectable = false, onSelectAccount = null } = props;\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const handleCopy = () => {\n        copy(desc);\n        dispatch(\n            actionToggleToast({\n                toggle: true,\n                value: 'Copied',\n                type: TOAST_CONFIGS.success,\n            }),\n        );\n    };\n    const handleShowQrCode = () =>\n        history.push(route, {\n            title,\n            desc,\n        });\n    return (\n        <Styled\n            className={`account-item ${selectable ? 'selectable' : ''}`}\n            onClick={() => {\n                if (typeof onSelectAccount === 'function' && selectable) {\n                    onSelectAccount();\n                }\n            }}\n        >\n            <div className=\"hook\">\n                <p className=\"title\">{title}</p>\n                <div className=\"icons\">\n                    {hasQrCode && <FaQrcode color={COLORS.colorGreyBold} onClick={handleShowQrCode} />}\n                    {hasCopy && <FaCopy color={COLORS.colorGreyBold} onClick={handleCopy} />}\n                </div>\n            </div>\n            <p className=\"decs ellipsis\">{desc}</p>\n        </Styled>\n    );\n};\n\nexport default React.memo(AccountItem);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { defaultAccountNameSelector } from 'src/module/Account';\nimport { Link } from 'react-router-dom';\nimport { route } from './SelectAccount.route';\n\nconst CustomLink = styled(Link)`\n    max-width: 80px;\n`;\n\nexport const BtnSelectAccount = React.memo(() => {\n    const defaultName = useSelector(defaultAccountNameSelector);\n    return (\n        <CustomLink to={route} className=\"btn-select-account fw-medium ellipsis\">\n            {defaultName}\n        </CustomLink>\n    );\n});\n","import React, { SyntheticEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ToggleSwitch } from 'src/components';\nimport { Styled } from './SettingItem.styled';\n\nexport interface ISettingChildItem {\n    desc: string;\n    toggle?: boolean;\n    onClick?: () => void;\n    link?: string;\n    toggleValue?: boolean;\n}\n\nexport interface ISettingItem {\n    title: string;\n    child: ISettingChildItem[];\n}\n\nconst ToggleItem = React.memo((props: ISettingChildItem) => {\n    const { desc, onClick, toggleValue } = props;\n    return (\n        <div className=\"toggle-item\">\n            <span className=\"item sub-text\">{desc}</span>\n            <ToggleSwitch toggleValue={toggleValue} onToggle={onClick} />\n        </div>\n    );\n});\n\nconst Item = React.memo((props: ISettingChildItem) => {\n    const { desc, link, onClick } = props;\n    const handleClickItem = (e: SyntheticEvent) => {\n        if (typeof onClick === 'function') {\n            e.preventDefault();\n            onClick();\n        }\n    };\n    return (\n        <Link className=\"item sub-text\" to={link || '#'} onClick={handleClickItem}>\n            {desc}\n        </Link>\n    );\n});\n\nexport const SettingItem = React.memo((props: ISettingItem) => {\n    const { title, child } = props;\n    return (\n        <Styled>\n            <p className=\"title fw-medium\">{title}</p>\n            {child.map((item: ISettingChildItem) =>\n                item.toggle ? <ToggleItem key={item.desc} {...item} /> : <Item {...item} />,\n            )}\n        </Styled>\n    );\n});\n","import { Dispatch } from 'redux';\nimport { IRootState } from 'src/redux/interface';\nimport { ILanguage } from 'src/i18n';\nimport { AccountInstance, PrivacyTokenInstance } from 'incognito-js/build/web/browser';\nimport { actionSaveWallet, IWalletReducer, walletSelector } from 'src/module/Wallet';\nimport {\n    ACTION_FETCHED_PTOKEN_LIST,\n    ACTION_FETCHED_PCUSTOMTOKEN_LIST,\n    ACTION_GET_BALANCE_TOKEN_FETCHING,\n    ACTION_GET_BALANCE_TOKEN_FETCHED,\n    ACTION_FOLLOWED_POPULAR_TOKEN,\n    ACTION_SET_FOLLOWED_TOKENS,\n    ACTION_SET_SELECTED_TOKEN,\n} from './Token.constant';\nimport { apiGetPTokenList, apiGetPCustomTokenList } from './Token.services';\nimport { IPToken } from './Token.interface';\nimport { translateSelector } from '../Configs';\nimport { defaultAccountSelector } from '../Account';\nimport { apiURLSelector, IPreloadReducer, preloadSelector } from '../Preload';\nimport {\n    bridgeTokensSelector,\n    chainTokensSelector,\n    followedTokensIdsSelector,\n    popularCoinIdsSeletor,\n    tokenSelector,\n} from './Token.selector';\nimport { IEnvToken, ITokenReducer } from './Token.reducer';\n\nexport const actionFetchedPTokenList = (payload: IPToken[]) => ({\n    type: ACTION_FETCHED_PTOKEN_LIST,\n    payload,\n});\n\nexport const actionFetchPTokenList = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    const state = getState();\n    const apiURL = apiURLSelector(state);\n    const pTokens = await apiGetPTokenList(apiURL);\n    dispatch(actionFetchedPTokenList(pTokens));\n};\n\nexport const actionFetchedPCustomTokenList = (payload: IPToken[]) => ({\n    type: ACTION_FETCHED_PCUSTOMTOKEN_LIST,\n    payload,\n});\n\nexport const actionFetchPCustomTokenList = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    const state = getState();\n    const apiURL = apiURLSelector(state);\n    const pCustomTokens = await apiGetPCustomTokenList(apiURL);\n    dispatch(actionFetchedPCustomTokenList(pCustomTokens));\n};\n\nexport const actionGetBalanceTokenFetching = (payload: { tokenId: string }) => ({\n    type: ACTION_GET_BALANCE_TOKEN_FETCHING,\n    payload,\n});\n\nexport const actionGetBalanceTokenFetched = (payload: { tokenId: string; amount: number }) => ({\n    type: ACTION_GET_BALANCE_TOKEN_FETCHED,\n    payload,\n});\n\nexport const actionGetBalanceToken = (token: PrivacyTokenInstance) => async (\n    dispatch: Dispatch,\n    getState: () => IRootState,\n) => {\n    const state: IRootState = getState();\n    const translate: ILanguage = translateSelector(state);\n    const tokenTranslate = translate.token;\n    const tokenId = token?.tokenId;\n    let amount;\n    if (!tokenId) {\n        throw new Error(tokenTranslate.error.tokenIdRequired);\n    }\n    dispatch(actionGetBalanceTokenFetching({ tokenId }));\n    const totalBalance = await token.getTotalBalance(tokenId);\n    amount = totalBalance.toNumber();\n    dispatch(\n        actionGetBalanceTokenFetched({\n            tokenId,\n            amount: amount || 0,\n        }),\n    );\n    return amount;\n};\n\nexport const actionFollowedPopularTokenIds = (payload: { mainnet: boolean }) => ({\n    type: ACTION_FOLLOWED_POPULAR_TOKEN,\n    payload,\n});\n\nexport const actionSetFollowedTokens = (payload: { followed: string[] }) => ({\n    type: ACTION_SET_FOLLOWED_TOKENS,\n    payload,\n});\n\nexport const actionFollowPopularToken = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    const state: IRootState = getState();\n    const preload: IPreloadReducer = preloadSelector(state);\n    const tokenState: ITokenReducer = tokenSelector(state);\n    const { mainnet } = preload.configs;\n    const field = mainnet ? 'mainnet' : 'testnet';\n    const envToken: IEnvToken = tokenState[field];\n    const { followedPopularIds } = envToken;\n    if (followedPopularIds) {\n        return;\n    }\n    const defaultAccount: AccountInstance = defaultAccountSelector(state);\n    const popularCoinIds = popularCoinIdsSeletor(state);\n    Object.entries(popularCoinIds).map((coin) => {\n        const [, tokenId] = coin;\n        defaultAccount.followTokenById(tokenId);\n        return coin;\n    });\n    dispatch(actionFollowedPopularTokenIds({ mainnet }));\n    await actionSaveWallet()(dispatch, getState);\n};\n\nexport const actionGetPrivacyTokensBalance = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    const state: IRootState = getState();\n    const followed = followedTokensIdsSelector(state)();\n    const { loaded }: IWalletReducer = walletSelector(state);\n    if (!followed || !loaded) {\n        return;\n    }\n    const bridgeTokens = bridgeTokensSelector(state);\n    const chainTokens = chainTokensSelector(state);\n    const account: AccountInstance = defaultAccountSelector(state);\n    followed.map(async (tokenId: string) => {\n        const token = await account.getPrivacyTokenById(tokenId, bridgeTokens, chainTokens);\n        return actionGetBalanceToken(token)(dispatch, getState);\n    });\n};\n\nexport const actionSetSelectedToken = (payload: string) => ({\n    type: ACTION_SET_SELECTED_TOKEN,\n    payload,\n});\n","import React from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { useSelector } from 'react-redux';\nimport { useSearchBox } from 'src/components/Header';\nimport { keySearchSelector } from 'src/components/Header/Header.selector';\nimport { availableTokensSelector } from './Token.selector';\nimport { handleFilterTokenByKeySearch } from './Token.utils';\nimport { IAllListTokenInner, ISelectedPrivacy } from './Token.interface';\n\ninterface IProps {\n    availableTokens?: ISelectedPrivacy[];\n}\nconst enhance = (WrappedComp: React.FunctionComponent) => (props: IProps & IAllListTokenInner & any) => {\n    const [toggleUnVerified, onToggleUnVerifiedTokens] = React.useState(false);\n    const { availableTokens: tokens } = props;\n    const availableTokens = tokens || useSelector(availableTokensSelector);\n    const verifiedTokens: ISelectedPrivacy[] = [];\n    const unVerifiedTokens: ISelectedPrivacy[] = [];\n    const keySearch = useSelector(keySearchSelector);\n    availableTokens.map((token: ISelectedPrivacy) =>\n        token?.isVerified ? verifiedTokens.push(token) : unVerifiedTokens.push(token),\n    );\n    const { result: _verifiedTokens } = useSearchBox({\n        data: verifiedTokens,\n        handleFilter: () => handleFilterTokenByKeySearch({ tokens: verifiedTokens, keySearch }),\n    });\n    const { result: _unVerifiedTokens } = useSearchBox({\n        data: unVerifiedTokens,\n        handleFilter: () =>\n            handleFilterTokenByKeySearch({\n                tokens: unVerifiedTokens,\n                keySearch,\n            }),\n    });\n\n    const tokensFactories = [\n        {\n            data: _verifiedTokens.map((token: ISelectedPrivacy) => token.tokenId),\n            visible: true,\n        },\n        {\n            data: _unVerifiedTokens.map((token: ISelectedPrivacy) => token.tokenId),\n            visible: toggleUnVerified,\n        },\n    ];\n\n    React.useEffect(() => {\n        if (toggleUnVerified && !keySearch) {\n            onToggleUnVerifiedTokens(!toggleUnVerified);\n        }\n    }, [keySearch]);\n    return (\n        <ErrorBoundary>\n            <WrappedComp\n                {...{\n                    ...props,\n                    tokensFactories,\n                    toggleUnVerified,\n                    onToggleUnVerifiedTokens,\n                }}\n            />\n        </ErrorBoundary>\n    );\n};\n\nexport default enhance;\n","import React from 'react';\nimport { Checkbox } from 'src/components/Core';\nimport { FONT_SIZES } from 'src/styles';\nimport styled from 'styled-components';\nimport ListToken from './Token.list';\nimport { IAllListTokenInner } from './Token.interface';\n\nconst Styled = styled.div`\n    overflow: scroll;\n    position: relative;\n    height: 435px;\n    .hook {\n        flex-direction: 'row';\n        align-items: 'center';\n        margin-top: 35px;\n    }\n    .hookText {\n        font-weight: 200;\n        font-size: ${FONT_SIZES.regular};\n        line-height: ${FONT_SIZES.regular + 5};\n        margin-left: 5px;\n    }\n    .checkbox {\n        margin-bottom: 30px;\n    }\n`;\n\nconst ListAllToken = (props: IAllListTokenInner) => {\n    const { tokensFactories, onToggleUnVerifiedTokens, toggleUnVerified, renderItem } = props;\n    return (\n        <Styled className=\"all-list-token\">\n            <ListToken {...tokensFactories[0]} renderItem={renderItem} />\n            <Checkbox\n                onHandleChecked={() => onToggleUnVerifiedTokens(!toggleUnVerified)}\n                checked={toggleUnVerified}\n                label=\"Show unverified coins\"\n            />\n            <ListToken {...tokensFactories[1]} renderItem={renderItem} />\n        </Styled>\n    );\n};\n\nListAllToken.propTypes = {};\n\nexport default React.memo(ListAllToken);\n","import React from 'react';\nimport { Name, Amount, Followed, Symbol } from './Token';\nimport { TokenStyled as Styled } from './Token.styled';\nimport withToken, { IMergePropsToken } from './Token.enhance';\n\nconst TokenBasic = (props: IMergePropsToken) => {\n    const { tokenId, handleOnClick, showAmount, showFollowed } = props;\n    return (\n        <Styled to=\"#\" className=\"token-container\" onClick={handleOnClick}>\n            <div className=\"extra\">\n                <Name classNameCustom=\"extra-item\" tokenId={tokenId} />\n                {showAmount && <Amount classNameCustom=\"extra-item\" tokenId={tokenId} />}\n                {showFollowed && <Followed tokenId={tokenId} />}\n            </div>\n            <div className=\"extra extra-bottom\">\n                <Symbol tokenId={tokenId} />\n            </div>\n        </Styled>\n    );\n};\n\nexport default withToken(TokenBasic);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { compose } from 'recompose';\nimport styled from 'styled-components';\nimport Spinner from 'react-bootstrap/esm/Spinner';\nimport { IWalletReducer, walletSelector } from 'src/module/Wallet';\nimport { actionToggleToast, TOAST_CONFIGS } from 'src/components';\nimport { actionFetch as actionPreloadApp } from './Preload.actions';\nimport { IPreloadReducer } from './Preload.reducer';\nimport { preloadSelector } from './Preload.selector';\n\nconst Styled = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    justify-content: center;\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    > p.desc {\n        text-align: center;\n        margin-top: 15px;\n    }\n`;\n\ninterface IProps {}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: IProps) => {\n    const dispatch = useDispatch();\n    const { isFetching }: IPreloadReducer = useSelector(preloadSelector);\n    const { loaded }: IWalletReducer = useSelector(walletSelector);\n    const handlePreload = async () => {\n        try {\n            await dispatch(actionPreloadApp());\n        } catch (error) {\n            dispatch(\n                actionToggleToast({\n                    toggle: true,\n                    value: error,\n                    type: TOAST_CONFIGS.error,\n                }),\n            );\n        }\n    };\n    React.useEffect(() => {\n        handlePreload();\n    }, []);\n    if (isFetching || !loaded) {\n        return (\n            <Styled className=\"preloading-container\">\n                <Spinner animation=\"grow\" />\n                <p className=\"desc\">\n                    Entering incognito mode\n                    <br />\n                    for your crypto...\n                </p>\n            </Styled>\n        );\n    }\n    return <WrappedComponent {...props} />;\n};\n\nexport default compose<IProps, any>(enhance);\n","import lowerCase from 'lodash/lowerCase';\nimport { useSelector } from 'react-redux';\nimport { validator } from 'src/components/ReduxForm';\nimport { formValueSelector, isValid } from 'redux-form';\nimport trim from 'lodash/trim';\nimport { listAccountSelector } from './Account.selector';\n\ninterface IProps {\n    form: {\n        formName: string;\n        accountName: string;\n        privateKey?: string;\n    };\n}\n\nexport const useAccount = (props: IProps) => {\n    const { form } = props;\n    const accountList = useSelector(listAccountSelector);\n    const isFormValid = useSelector((state) => isValid(form?.formName)(state));\n    const selector = formValueSelector(form?.formName);\n    const accountNameToLowercase = lowerCase(trim(useSelector((state) => selector(state, form?.accountName || ''))));\n    const privateKey = trim(useSelector((state) => selector(state, form.privateKey || '')));\n    const isPrivateKeyExist = accountList.find((account) => account.key.keySet.privateKeySerialized === privateKey);\n    const isAccountExist = accountList.find((account) => lowerCase(account?.name) === accountNameToLowercase);\n    const getPrivateKeyValidator = () => {\n        const validate = [validator.required];\n        return validate;\n    };\n    return {\n        isFormValid,\n        getPrivateKeyValidator,\n        isAccountExist,\n        isPrivateKeyExist,\n    };\n};\n","export { default } from './BackupAccount';\nexport * from './BackupAccount.route';\n","export { default } from './CreateAccount';\nexport * from './CreateAccount.route';\n","export { default } from './ImportAccount';\nexport * from './ImportAccount.route';\n","export { default } from './Create';\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { historyCacheDataSelector } from './History.selector';\nimport withHistory from './History.enhance';\nimport { ICacheHistoryTokenSelector } from './History.interface';\n\ninterface IHistoryItem {\n    history: ICacheHistoryTokenSelector;\n}\n\nconst Styled = styled.div`\n    max-height: 270px;\n    overflow: scroll;\n    .history-item {\n        margin-bottom: 30px;\n        :last-child {\n            margin-bottom: unset;\n        }\n    }\n    .history-item .hook {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        :first-child {\n            margin-bottom: 15px;\n        }\n    }\n`;\n\nconst HistoryItem = React.memo((props: IHistoryItem) => {\n    const { history } = props;\n    return (\n        <Link to={`/history/${history.txId}`} className=\"history-item\">\n            <div className=\"hook\">\n                <p className=\"fw-medium\">{history.type}</p>\n                <p className=\"fw-medium\">{history.amountFormated}</p>\n            </div>\n            <div className=\"hook\">\n                <p className=\"sub-text\">{history.timeFormated}</p>\n                <p className=\"sub-text\">{history.statusMessage}</p>\n            </div>\n        </Link>\n    );\n});\n\nconst History = React.memo(() => {\n    const histories = useSelector(historyCacheDataSelector);\n    return (\n        <Styled>\n            {histories\n                .sort((a: ICacheHistoryTokenSelector, b: ICacheHistoryTokenSelector) => b.lockTime - a.lockTime)\n                .map((history: ICacheHistoryTokenSelector) => (\n                    <HistoryItem key={history.txId} history={history} />\n                ))}\n        </Styled>\n    );\n});\n\nexport default withHistory(History);\n","import { AccountInstance } from 'incognito-js/build/web/browser';\nimport { Dispatch } from 'redux';\nimport { IRootState } from 'src/redux/interface';\nimport { defaultAccountSelector } from 'src/module/Account';\nimport { bridgeTokensSelector, chainTokensSelector, selectedPrivacySelector } from 'src/module/Token';\nimport { ACTION_FETCHING_CACHE_HISTORY, ACTION_FETCHED_CACHE_HISTORY } from './History.constant';\nimport { historyCacheSelector } from './History.selector';\n\nexport const actionFetchingCacheHistory = () => ({\n    type: ACTION_FETCHING_CACHE_HISTORY,\n});\n\nexport const actionFetchedCacheHistory = (payload: { histories: any[] }) => ({\n    type: ACTION_FETCHED_CACHE_HISTORY,\n    payload,\n});\n\nexport const actionFetchCacheHistory = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    let histories: any[] = [];\n    const state = getState();\n    const historyCache = historyCacheSelector(state);\n    if (historyCache.fetching) {\n        return;\n    }\n    try {\n        const account: AccountInstance = defaultAccountSelector(state);\n        const selectedPrivacy = selectedPrivacySelector(state);\n        const bridgeTokens = bridgeTokensSelector(state);\n        const chainTokens = chainTokensSelector(state);\n        await dispatch(actionFetchingCacheHistory());\n        if (selectedPrivacy.isNativeToken) {\n            histories = await account.nativeToken.getTxHistories();\n        }\n        if (selectedPrivacy.isPrivacyToken) {\n            const token = await account.getPrivacyTokenById(selectedPrivacy.tokenId, bridgeTokens, chainTokens);\n            histories = await token.getTxHistories();\n        }\n    } catch (error) {\n        throw error;\n    } finally {\n        dispatch(\n            actionFetchedCacheHistory({\n                histories,\n            }),\n        );\n    }\n};\n","import { Dispatch } from 'redux';\nimport { IRootState } from 'src/redux/interface';\nimport { MAINNET_WALLET_NAME, TESTNET_WALLET_NAME } from 'src/configs/walletConfigs';\nimport { AccountInstance, WalletInstance } from 'incognito-js/build/web/browser';\nimport { updateWallet } from 'src/database/tables/wallet';\nimport { actionSetListAccount, actionSelectAccount, defaultAccountNameSelector } from 'src/module/Account';\nimport { IPreloadReducer, preloadSelector } from 'src/module/Preload';\nimport { ACTION_FETCHED, ACTION_LOAD_WALLET } from './Wallet.constant';\nimport { initWallet, loadWallet } from './Wallet.utils';\nimport { walletDataSelector, walletIdSelector, walletSelector } from './Wallet.selector';\nimport { IDataInitWallet, IPayloadInitWallet, IWalletReducer } from './Wallet.interface';\n\nexport const actionFetched = (payload: IDataInitWallet) => ({\n    type: ACTION_FETCHED,\n    payload,\n});\n\nexport const actionLoadWallet = (payload: WalletInstance) => ({\n    type: ACTION_LOAD_WALLET,\n    payload,\n});\n\nexport const actionInitWallet = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    let walletId;\n    const state: IRootState = getState();\n    const preload: IPreloadReducer = preloadSelector(state);\n    const { mainnet } = preload.configs;\n    const dataInit = await initWallet(mainnet ? MAINNET_WALLET_NAME : TESTNET_WALLET_NAME);\n    walletId = dataInit.walletId;\n    const { wallet } = dataInit;\n    const payload: IPayloadInitWallet = {\n        ...dataInit,\n        mainnet,\n    };\n    const listAccount: AccountInstance[] = wallet.masterAccount.getAccounts();\n    const defaultAccount: AccountInstance = listAccount && listAccount[0];\n    dispatch(actionSetListAccount(listAccount));\n    dispatch(actionSelectAccount(defaultAccount.name));\n    dispatch(actionFetched(payload));\n    return walletId;\n};\n\nexport const actionHandleLoadWallet = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    const state: IRootState = getState();\n    const preload: IPreloadReducer = preloadSelector(state);\n    const walletState: IWalletReducer = walletSelector(state);\n    const defaultAccountName: string = defaultAccountNameSelector(state);\n    const { mainnet } = preload.configs;\n    const field = mainnet ? 'mainnet' : 'testnet';\n    const { walletId } = walletState[field];\n    if (!walletId) {\n        throw new Error(`Can't not found wallet id`);\n    }\n    const wallet = await loadWallet(walletId);\n    const listAccount: AccountInstance[] = wallet.masterAccount.getAccounts();\n    const defaultAccount = wallet.masterAccount.getAccountByName(defaultAccountName) || listAccount[0];\n    if (defaultAccount) {\n        dispatch(actionSetListAccount(listAccount));\n        dispatch(actionSelectAccount(defaultAccount.name));\n        dispatch(actionLoadWallet(wallet));\n    }\n};\n\nexport const actionSaveWallet = () => async (dispatch: Dispatch, getState: () => IRootState) => {\n    const state = getState();\n    const walletId = walletIdSelector(state);\n    const wallet: WalletInstance = walletDataSelector(state);\n    await updateWallet(wallet, walletId);\n    await dispatch(actionSetListAccount(wallet.masterAccount.getAccounts()));\n    return wallet;\n};\n","export const MAINNET_WALLET_NAME = 'MAINNET_WALLET_NAME';\nexport const TESTNET_WALLET_NAME = 'TESTNET_WALLET_NAME';\n","import { createSelector } from 'reselect';\nimport { IRootState } from 'src/redux/interface';\nimport { IToastReducer } from './Toast.reducer';\n\nexport const toastSelector = createSelector(\n    (state: IRootState) => state.toast,\n    (toast: IToastReducer) => toast,\n);\n","import { ACTION_TOGGLE_TOAST } from './Toast.constant';\n\nexport const actionToggleToast = (\n    payload: {\n        toggle: boolean;\n        value?: string;\n        type?: number;\n    } = { toggle: false, value: '', type: 0 },\n) => ({\n    type: ACTION_TOGGLE_TOAST,\n    payload,\n});\n","import React, { SyntheticEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ENVS } from 'src/configs';\nimport styled from 'styled-components';\n\ninterface IProps {\n    route?: string;\n    onClick?: any;\n}\n\nconst Styled = styled(Link)`\n    width: 24px;\n    height: 24px;\n`;\n\nconst QrCode = (props: IProps) => {\n    const { route = '#', onClick } = props;\n    const handleClick = (e: SyntheticEvent) => {\n        if (typeof onClick === 'function') {\n            e.preventDefault();\n            onClick();\n        }\n    };\n    return (\n        <Styled to={route} onClick={handleClick}>\n            <img src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/qrcode.png`} alt=\"\" />\n        </Styled>\n    );\n};\n\nexport default QrCode;\n","import styled from 'styled-components';\n\nexport const Styled = styled.div`\n    margin-bottom: 30px;\n    .title {\n        margin-bottom: 15px;\n    }\n    .toggle-item {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n    }\n`;\n","import React from 'react';\nimport { compose } from 'recompose';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { withLayout } from 'src/components/Layout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ISettingLanguage } from 'src/i18n/interface';\nimport { translateByFieldSelector } from 'src/module/Configs';\nimport { route as addressBookRoute } from 'src/module/AddressBook';\nimport { route as keychainRoute } from 'src/module/Keychain';\nimport { chainURLSelector } from 'src/module/Preload';\nimport { actionToggleHomeConfigs } from './Setting.actions';\nimport { IInner } from './Setting.interface';\nimport { ISettingItem } from './features/SettingItem';\nimport { devSettingSelector } from './Setting.selector';\nimport { route as networkRoute } from './features/Network';\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: any) => {\n    const translate: ISettingLanguage = useSelector(translateByFieldSelector)('setting');\n    const dispatch = useDispatch();\n    const handleToggleHomeConfigs = () => dispatch(actionToggleHomeConfigs());\n    const chainURL = useSelector(chainURLSelector);\n    const { stagingHomeConfigs } = useSelector(devSettingSelector);\n    const settingFactories: ISettingItem[] = [\n        {\n            title: translate.keychain.title,\n            child: [{ desc: translate.keychain.desc, link: keychainRoute }],\n        },\n        {\n            title: translate.network.title,\n            child: [{ desc: chainURL, link: networkRoute }],\n        },\n        {\n            title: translate.dev.title,\n            child: [\n                {\n                    desc: translate.dev.homeConfigs,\n                    toggle: true,\n                    onClick: handleToggleHomeConfigs,\n                    toggleValue: stagingHomeConfigs,\n                },\n            ],\n        },\n        {\n            title: translate.addressBook.title,\n            child: [{ desc: translate.addressBook.desc, link: addressBookRoute }],\n        },\n    ];\n    return (\n        <ErrorBoundary>\n            <WrappedComponent {...{ ...props, settingFactories }} />\n        </ErrorBoundary>\n    );\n};\n\nexport default compose<IInner, any>(withLayout, enhance);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { useLocation } from 'react-router-dom';\nimport { translateByFieldSelector } from 'src/module/Configs';\nimport { selectedPrivacySelector } from 'src/module/Token';\nimport { IAddressBookLanguage } from 'src/i18n/interface';\nimport { useSearchBox, keySearchSelector } from 'src/components/Header';\nimport { externalAddrSelector, incognitoAddrSelector, keychainAddrSelector } from './AddressBook.selector';\nimport { IAddressBook } from './AddressBook.interface';\nimport { filterAddressByKey } from './AddressBook.utils';\nimport { actionRemoveSelectedReceiver } from './AddressBook.actions';\n\nexport interface TInner {\n    addressBook: IPropsAddrBook[];\n}\n\nexport interface IPropsAddrBook {\n    data: IAddressBook[];\n    title: string;\n}\n\nexport interface IProps {\n    onGoBack?: () => any;\n    onSelectedAddrBook?: any;\n}\n\nexport interface IMergeProps extends TInner, IProps {}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: IProps & any) => {\n    const dispatch = useDispatch();\n    const { state }: { state: any } = useLocation();\n    const translate: IAddressBookLanguage = useSelector(translateByFieldSelector)('addressBook');\n    const keySearch = useSelector(keySearchSelector);\n    const selectedPrivacy = useSelector(selectedPrivacySelector);\n    const incognitoAddr: IAddressBook[] = useSelector(incognitoAddrSelector);\n    const externalAddr: IAddressBook[] = useSelector(externalAddrSelector);\n    const keychainAddr: IAddressBook[] = useSelector(keychainAddrSelector);\n    const filterBySelectedPrivacy = !!state?.filterBySelectedPrivacy;\n    const extAddrFilBySelPrivacy = [\n        ...externalAddr.filter((item) =>\n            filterBySelectedPrivacy ? item?.rootNetworkName === selectedPrivacy?.rootNetworkName : true,\n        ),\n    ];\n    const { result: keychainAddrFil } = useSearchBox({\n        data: keychainAddr,\n        handleFilter: () => filterAddressByKey(keychainAddr, keySearch),\n    });\n    const { result: incognitoAddrFil } = useSearchBox({\n        data: incognitoAddr,\n        handleFilter: () => filterAddressByKey(incognitoAddr, keySearch),\n    });\n    const { result: externalAddrFil } = useSearchBox({\n        data: extAddrFilBySelPrivacy,\n        handleFilter: () => filterAddressByKey(extAddrFilBySelPrivacy, keySearch),\n    });\n    const addressBook = [\n        {\n            data: keychainAddrFil,\n            title: translate.keychains,\n        },\n        {\n            data: incognitoAddrFil,\n            title: translate.incognito,\n        },\n        {\n            data: externalAddrFil,\n            title: translate.external,\n        },\n    ];\n\n    React.useEffect(() => {\n        dispatch(actionRemoveSelectedReceiver());\n    }, []);\n\n    return (\n        <ErrorBoundary>\n            <WrappedComponent {...{ ...props, addressBook }} />\n        </ErrorBoundary>\n    );\n};\n\nexport default enhance;\n","import styled from 'styled-components';\nimport { FONT_SIZES } from 'src/styles';\n\nexport const Styled = styled.div`\n    .hook-container {\n        margin-bottom: 30px;\n        cursor: pointer;\n    }\n    p.title {\n        font-weight: 200;\n        font-size: ${FONT_SIZES.medium}px;\n        line-height: ${FONT_SIZES.medium + 9}px;\n        margin-bottom: 10px;\n    }\n    p.desc {\n    }\n    .account-item {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        margin: 10px 0;\n        cursor: pointer;\n        p.account-name {\n        }\n        &.selected {\n            font-weight: 500;\n        }\n    }\n`;\n","import { COINS, CONSTANT_CONFIGS } from 'src/constants';\nimport { IPCustomToken, IPToken, ISelectedPrivacy } from './Token.interface';\n\n// eslint-disable-next-line no-unused-vars\nfunction getNetworkName(this: ISelectedPrivacy) {\n    let name = 'Unknown';\n    const isETH = this?.symbol === COINS.CRYPTO_SYMBOL.ETH;\n    const isBNB = this?.symbol === COINS.CRYPTO_SYMBOL.BNB;\n    if (this.isPrivateCoin) {\n        name = `${this.name}`;\n    } else if (this.isErc20Token) {\n        name = 'ERC20';\n    } else if (this.isBep2Token) {\n        name = 'BEP2';\n    } else if (this.isIncognitoToken || this.isNativeToken) {\n        name = 'Incognito';\n    }\n    let rootNetworkName = name;\n    if (isETH || this?.isErc20Token) {\n        rootNetworkName = COINS.NETWORK_NAME.ETHEREUM;\n    } else if (isBNB || this?.isBep2Token) {\n        rootNetworkName = COINS.NETWORK_NAME.BINANCE;\n    }\n    const result = {\n        networkName: name,\n        rootNetworkName,\n    };\n    return result;\n}\n\nfunction combineData(this: SelectedPrivacy, pTokenData: any, pCustomTokenData: any, defaultData: any) {\n    if (this?.isPrivacyToken) {\n        return pTokenData;\n    }\n    if (this?.isIncognitoToken) {\n        return pCustomTokenData;\n    }\n    return defaultData;\n}\n\nfunction getIconUrl(this: SelectedPrivacy, chainTokenImageUri: string) {\n    let uri;\n    if (!!this.isNativeToken || this.isPrivacyToken) {\n        const formatedSymbol = String(this.pSymbol || this.symbol).toLowerCase();\n        uri = `${CONSTANT_CONFIGS.CRYPTO_ICON_URL}/${formatedSymbol}@2x.png`;\n    } else {\n        uri = chainTokenImageUri;\n    }\n\n    return uri;\n}\n\nclass SelectedPrivacy {\n    tokenId: string;\n\n    currencyType: number;\n\n    isToken: boolean;\n\n    isNativeToken: boolean;\n\n    isPrivateToken: boolean;\n\n    isPrivateCoin: boolean;\n\n    isPrivacyToken: boolean;\n\n    isIncognitoToken: boolean;\n\n    isErc20Token: boolean;\n\n    isBep2Token: boolean;\n\n    symbol: string;\n\n    name: string;\n\n    contractId: string;\n\n    decimals: number;\n\n    pDecimals: number;\n\n    pSymbol: string;\n\n    isWithdrawable: boolean;\n\n    isDeposable: boolean;\n\n    isDecentralized: boolean;\n\n    isCentralized: boolean;\n\n    incognitoTotalSupply: number;\n\n    isVerified: boolean;\n\n    iconUrl: string;\n\n    priceUsd: number;\n\n    change: string;\n\n    pricePrv: number;\n\n    pairWithPrv: boolean;\n\n    networkName: string;\n\n    rootNetworkName: string;\n\n    amount: number;\n\n    isFollowed: boolean;\n\n    formatAmount: string;\n\n    formatBalanceByUsd: string;\n\n    formatPriceByUsd: string;\n\n    ownerName: string;\n\n    ownerAddress: string;\n\n    ownerEmail: string;\n\n    ownerWebsite: string;\n\n    // eslint-disable-next-line react/static-property-placement\n    displayName: string;\n\n    constructor(pCustomTokenData: IPCustomToken | any, pTokenData: IPToken | any) {\n        this.tokenId = pTokenData?.tokenId || pCustomTokenData?.tokenId || COINS.PRV.id;\n        this.currencyType = pTokenData?.currencyType;\n        this.isToken = this.tokenId !== COINS.PRV.id && !!this.tokenId; // all kind of tokens (private tokens, incognito tokens)\n        this.isNativeToken = this.tokenId === COINS.PRV.id || !this.isToken; // PRV\n        this.isPrivateToken = pTokenData?.type === COINS.PRIVATE_TOKEN_TYPE.TOKEN; // ERC20 tokens, BEP2 tokens\n        this.isPrivateCoin = pTokenData?.type === COINS.PRIVATE_TOKEN_TYPE.COIN; // pETH, pBTC, pTOMO,...\n        this.isPrivacyToken = !!pTokenData?.pSymbol; // pToken is private token (pETH <=> ETH, pBTC <=> BTC, ...)\n        this.isIncognitoToken = !this.isPrivacyToken && !this.isNativeToken; // is tokens were issued from users\n        this.isErc20Token = this.isPrivateToken && this.currencyType === COINS.PRIVATE_TOKEN_CURRENCY_TYPE.ERC20;\n        this.isBep2Token = this.isPrivateToken && this.currencyType === COINS.PRIVATE_TOKEN_CURRENCY_TYPE.BNB_BEP2;\n        this.symbol = combineData.call(this, pTokenData?.symbol, pCustomTokenData?.symbol, COINS.PRV.symbol);\n        this.name = combineData.call(this, pTokenData?.name, pCustomTokenData?.name, 'Privacy');\n        this.displayName = combineData.call(this, `Privacy ${pTokenData?.symbol}`, pCustomTokenData?.name, 'Privacy');\n        this.contractId = pTokenData?.contractId;\n        this.decimals = this.isPrivacyToken ? pTokenData?.decimals : this.isNativeToken ? COINS.PRV.pDecimals : 0;\n        this.pDecimals = this.isPrivacyToken ? pTokenData.pDecimals : this.isNativeToken ? COINS.PRV.pDecimals : 0;\n        this.pSymbol = this.isPrivacyToken ? pTokenData?.pSymbol : this.isNativeToken ? COINS.PRV.symbol : this.symbol;\n        this.isWithdrawable = !!this.isPrivacyToken;\n        this.isDeposable = !!this.isPrivacyToken;\n        this.isDecentralized = (this.isToken && this.symbol === COINS.CRYPTO_SYMBOL.ETH) || this.isErc20Token;\n        this.isCentralized = !!this.isToken && !this.isDecentralized;\n        this.incognitoTotalSupply = (this.isIncognitoToken && Number(pCustomTokenData?.totalSupply)) || 0;\n        this.isVerified = combineData.call(this, pTokenData?.verified, pCustomTokenData?.verified, true); // PRV always is verified\n        this.iconUrl = getIconUrl.call(this, pCustomTokenData?.image);\n        this.priceUsd = pTokenData?.priceUsd || 0;\n        this.change = pTokenData?.change || '0';\n        this.pricePrv = pTokenData?.pricePrv || 0;\n        this.pairWithPrv = pTokenData?.pairPrv;\n        const { networkName, rootNetworkName } = getNetworkName.call(this);\n        this.networkName = networkName;\n        this.rootNetworkName = rootNetworkName;\n        this.amount = 0;\n        this.isFollowed = false;\n        this.formatAmount = '0';\n        this.formatPriceByUsd = '0';\n        this.ownerName = pCustomTokenData?.ownerName;\n        this.ownerAddress = pCustomTokenData?.ownerAddress;\n        this.ownerEmail = pCustomTokenData?.ownerEmail;\n        this.ownerWebsite = pCustomTokenData?.ownerWebsite;\n        this.formatBalanceByUsd = '0';\n    }\n}\nexport default SelectedPrivacy;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAccount, actionFetchCreateAccount } from 'src/module/Account';\nimport trim from 'lodash/trim';\nimport { useHistory } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { reduxForm } from 'redux-form';\nimport { withLayout } from 'src/components/Layout';\nimport { actionToggleToast, TOAST_CONFIGS } from 'src/components';\nimport { translateByFieldSelector } from 'src/module/Configs';\nimport { IAccountLanguage } from 'src/i18n';\n\ninterface IProps {}\n\nexport interface TOutter {\n    disabledForm: boolean;\n    getAccountValidator: () => any[];\n    handleCreateAccount: (props: any) => void;\n}\n\nexport const FORM_CONFIGS = {\n    formName: 'form-create-account',\n    accountName: 'accountName',\n};\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: any) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { isFormValid, isAccountExist } = useAccount({\n        form: FORM_CONFIGS,\n    });\n    const translate: IAccountLanguage = useSelector(translateByFieldSelector)('account');\n    const disabledForm = !isFormValid;\n    const handleCreateAccount = async (values: { accountName: string }) => {\n        try {\n            const { accountName } = values;\n            if (disabledForm) {\n                return;\n            }\n            if (isAccountExist) {\n                throw new Error('Account is existed!');\n            }\n            await dispatch(actionFetchCreateAccount(trim(accountName)));\n            dispatch(\n                actionToggleToast({\n                    toggle: true,\n                    value: translate.success.create,\n                    type: TOAST_CONFIGS.success,\n                }),\n            );\n            history.goBack();\n        } catch (e) {\n            dispatch(\n                actionToggleToast({\n                    toggle: true,\n                    value: e?.message || translate.error.create,\n                    type: TOAST_CONFIGS.error,\n                }),\n            );\n        }\n    };\n    return <WrappedComponent {...{ ...props, disabledForm, handleCreateAccount }} />;\n};\n\nexport default compose<IProps, TOutter>(\n    enhance,\n    reduxForm<any, TOutter>({\n        form: FORM_CONFIGS.formName,\n    }),\n    withLayout,\n);\n","import styled from 'styled-components';\n\nexport const Styled = styled.div`\n    .btn-container {\n        margin-top: 30px;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const Styled = styled.div`\n    .btn-container {\n        margin-top: 30px;\n    }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { reduxForm } from 'redux-form';\nimport { actionToggleToast, TOAST_CONFIGS } from 'src/components';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { withLayout } from 'src/components/Layout';\nimport {\n    isAddressBookExist,\n    actionCreate,\n    IAddressBook,\n    IAddressBookReducer,\n    addressBookSelector,\n    ADDRESS_BOOK_TYPE,\n} from 'src/module/AddressBook';\nimport { isMainnetSelector } from 'src/module/Preload';\n\ninterface IProps {}\n\ninterface TInner {\n    handleCreate: any;\n}\n\nexport interface IMergeProps extends IProps, TInner {}\n\nexport const FORM_CONFIGS = {\n    formName: 'form-create-address-book',\n    name: 'name',\n    address: 'address',\n};\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: IProps & any) => {\n    const dispatch = useDispatch();\n    const mainnet = useSelector(isMainnetSelector);\n    const { state }: { state: any } = useLocation();\n    const type = state?.type || 1;\n    const field = ADDRESS_BOOK_TYPE[type];\n    const addressBookState: IAddressBookReducer = useSelector(addressBookSelector);\n    const oldAddressedBook: IAddressBook[] = addressBookState[field];\n    const handleCreate = async (values: { name: string; address: string }) => {\n        try {\n            const { name, address } = values;\n            const addressBook = { name, address, type, mainnet };\n            const isExist = isAddressBookExist(oldAddressedBook, addressBook);\n            if (isExist) {\n                throw new Error('User is exist!');\n            }\n            dispatch(\n                actionCreate({\n                    addressBook,\n                    type,\n                }),\n            );\n        } catch (error) {\n            dispatch(\n                actionToggleToast({\n                    toggle: true,\n                    value: error,\n                    type: TOAST_CONFIGS.error,\n                }),\n            );\n        }\n    };\n    return (\n        <ErrorBoundary>\n            <WrappedComponent {...{ ...props, handleCreate }} />\n        </ErrorBoundary>\n    );\n};\n\nexport default compose<IMergeProps, any>(\n    withLayout,\n    reduxForm<any, any>({\n        form: FORM_CONFIGS.formName,\n    }),\n    enhance,\n);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\n\ninterface IProps {}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: IProps) => {\n    return (\n        <ErrorBoundary>\n            <WrappedComponent {...props} />\n        </ErrorBoundary>\n    );\n};\n\nexport default compose<IProps, any>(enhance);\n","import { createSelector } from 'reselect';\nimport { IRootState } from 'src/redux/interface';\nimport { IModalReducer } from './Modal.reducer';\n\nexport const modalSelector = createSelector(\n    (state: IRootState) => state.modal,\n    (modal: IModalReducer) => modal,\n);\n","import React from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { useDispatch, useSelector } from 'react-redux';\nimport format from 'src/utils/format';\nimport { serverSelector } from 'src/module/Preload';\nimport { IServer } from 'src/services';\nimport { actionToggleModal } from 'src/components/Modal';\nimport { COINS } from 'src/constants';\nimport TokenInfoVerify from './TokenInfo.verify';\nimport { ISelectedPrivacy } from '../../Token.interface';\nimport { selectedPrivacySelector } from '../../Token.selector';\n\nexport interface IInfo {\n    label: string;\n    value: string;\n    link?: string;\n    copyable?: boolean;\n}\n\nconst enhance = (WrappedComp: React.FunctionComponent) => (props: any) => {\n    const dispatch = useDispatch();\n    const selectedPrivacy: ISelectedPrivacy = useSelector(selectedPrivacySelector);\n    const {\n        tokenId,\n        isVerified,\n        isBep2Token,\n        contractId,\n        amount,\n        pDecimals,\n        incognitoTotalSupply,\n        pSymbol,\n        symbol,\n        networkName,\n    } = selectedPrivacy;\n    const server: IServer = useSelector(serverSelector);\n    console.debug(symbol, selectedPrivacy.isPrivateCoin, networkName);\n    const getNetworkName = () => {\n        if (selectedPrivacy?.isErc20Token) {\n            return 'Ethereum network (ERC20)';\n        }\n        if (selectedPrivacy?.isBep2Token) {\n            return 'Binance network (BEP2)';\n        }\n        if (symbol === COINS.CRYPTO_SYMBOL.BNB) {\n            return 'Binance network';\n        }\n        return `${networkName} network`;\n    };\n    const infosFactories: IInfo[] = [\n        {\n            label: 'Balance',\n            value: format.formatAmount({\n                originalAmount: amount,\n                decimals: pDecimals,\n            }),\n        },\n        {\n            label: 'Origin',\n            value: getNetworkName(),\n        },\n        {\n            label: 'Original Ticker',\n            value: symbol || pSymbol,\n            link: isBep2Token ? `${server.exploreBinanceURL}/asset/${symbol}` : undefined,\n        },\n\n        {\n            label: 'Coin ID',\n            value: tokenId,\n            copyable: true,\n        },\n        {\n            label: 'Contract ID',\n            value: contractId,\n            link: `${server.etherscanURL}/token/${contractId}`,\n        },\n        {\n            label: 'Coin supply',\n            value: incognitoTotalSupply\n                ? format.formatAmount({\n                      originalAmount: incognitoTotalSupply,\n                      decimals: pDecimals,\n                  })\n                : '',\n        },\n        {\n            label: 'Owner name',\n            value: selectedPrivacy?.ownerName,\n            copyable: true,\n        },\n        {\n            label: 'Owner address',\n            value: selectedPrivacy?.ownerAddress,\n            copyable: true,\n        },\n        {\n            label: 'Owner email',\n            value: selectedPrivacy?.ownerEmail,\n            copyable: true,\n        },\n        {\n            label: 'Owner website',\n            value: selectedPrivacy?.ownerWebsite,\n            link: selectedPrivacy?.ownerWebsite,\n        },\n    ];\n    const handlePressVerifiedInfo = () =>\n        dispatch(\n            actionToggleModal({\n                visible: true,\n                data: <TokenInfoVerify />,\n            }),\n        );\n    return (\n        <ErrorBoundary>\n            <WrappedComp\n                {...{\n                    ...props,\n                    infosFactories,\n                    tokenId,\n                    isVerified,\n                    handlePressVerifiedInfo,\n                }}\n            />\n        </ErrorBoundary>\n    );\n};\n\nexport default enhance;\n","import React from 'react';\nimport Header from 'src/components/Header';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { selectedPrivacySelector } from 'src/module/Token';\nimport { actionToggleModal } from 'src/components/Modal';\n\nconst Styled = styled.div``;\n\nconst NormalText = React.memo(({ text, sub }: { text: string; sub?: string }) => (\n    <p className=\"sub-text\" style={{ marginBottom: '30px' }}>\n        {text}\n        {sub && (\n            <span\n                className=\"main-text\"\n                onClick={() =>\n                    window.open(\n                        'https://incognito.org/t/verified-badges-for-custom-privacy-coins-on-incognito-chain/952',\n                    )\n                }\n            >\n                {sub}\n            </span>\n        )}\n    </p>\n));\n\nconst CoinInfoVerified = React.memo(() => {\n    return (\n        <div>\n            <NormalText text=\"Genuine coins that originate from an external blockchain (Ethereum, Bitcoin, Binance, etc.) are automatically verified.\" />\n            <NormalText text=\"For user-created coins, the verified tick certifies that this coin is associated with a particular project and is not a duplicate.\" />\n        </div>\n    );\n});\n\nconst CoinInfoUnVerified = React.memo(() => {\n    return (\n        <div>\n            <NormalText text=\"If you are shielding a coin or adding it to your list, look out for the verified symbol to make sure you have the correct coin you are looking for.\" />\n            <NormalText text=\"On certain blockchains, anyone can create duplicates with the same name and symbol. If an ERC20 or BEP2 coin does not have a verified tick, it is likely to be a copy.\" />\n            <NormalText\n                text=\"If an Incognito coin does not have a verified tick, its creators have not yet gone through the process of \"\n                sub=\"verifying their coin.\"\n            />\n        </div>\n    );\n});\n\nconst CoinInfoVerify = React.memo(() => {\n    const { isVerified } = useSelector(selectedPrivacySelector);\n    const dispatch = useDispatch();\n    return (\n        <Styled>\n            <Header\n                onGoBack={() =>\n                    dispatch(\n                        actionToggleModal({\n                            visible: false,\n                            data: null,\n                        }),\n                    )\n                }\n                title={isVerified ? 'What is a verified coin?' : 'What is an unverified coin?'}\n            />\n            {isVerified ? <CoinInfoVerified /> : <CoinInfoUnVerified />}\n        </Styled>\n    );\n});\n\nexport default React.memo(CoinInfoVerify);\n","import styled from 'styled-components';\n\nexport const Styled = styled.div`\n    .extra .info-item {\n        justify-content: space-between;\n        margin-bottom: 15px;\n        > :first-child {\n            flex-basis: 20%;\n            min-width: 100px;\n        }\n        > :last-child {\n            flex-basis: 75%;\n            width: 200px;\n\n            > :first-child {\n                flex: 1;\n            }\n        }\n    }\n    .icon {\n        margin-left: 5px;\n    }\n    .extra .verified-container {\n        margin-bottom: 15px;\n    }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { compose } from 'recompose';\nimport { actionToggleToast, TOAST_CONFIGS } from 'src/components';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { withLayout } from 'src/components/Layout';\nimport { actionFetchCacheHistory } from 'src/module/History';\nimport { selectedTokenIdSelector } from 'src/module/Token';\n\ninterface IProps {}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: IProps) => {\n    const dispatch = useDispatch();\n    const selectedPrivacyTokenId = useSelector(selectedTokenIdSelector);\n    const fetchData = async () => {\n        try {\n            dispatch(actionFetchCacheHistory());\n        } catch (error) {\n            dispatch(\n                actionToggleToast({\n                    toggle: true,\n                    value: error?.message || JSON.stringify(error),\n                    type: TOAST_CONFIGS.error,\n                }),\n            );\n        }\n    };\n    React.useEffect(() => {\n        fetchData();\n    }, [selectedPrivacyTokenId]);\n    return (\n        <ErrorBoundary>\n            <WrappedComponent {...props} />\n        </ErrorBoundary>\n    );\n};\n\nexport default compose<IProps, any>(withLayout, enhance);\n","import React from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport convert from 'src/utils/convert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toString from 'lodash/toString';\nimport { bridgeTokensSelector, chainTokensSelector, ISelectedPrivacy, selectedPrivacySelector } from 'src/module/Token';\nimport { defaultAccountSelector } from 'src/module/Account';\nimport { AccountInstance, PaymentInfoModel } from 'incognito-js/build/web/browser';\nimport { useHistory } from 'react-router-dom';\nimport BigNumber from 'bignumber.js';\nimport { actionToggleToast, TOAST_CONFIGS } from 'src/components';\nimport { actionFetchCacheHistory } from 'src/module/History';\nimport { floor } from 'lodash';\nimport { sendDataSelector } from './Send.selector';\nimport { ISendData } from './Send.interface';\nimport { route as routeConfirmTx } from './features/ConfirmTx';\n\nexport interface TInner {\n    // eslint-disable-next-line no-unused-vars\n    handleSend: (values: { amount: string; toAddress: string; memo?: string }) => void;\n}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: any) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const selectedPrivacy: ISelectedPrivacy = useSelector(selectedPrivacySelector);\n    const account: AccountInstance = useSelector(defaultAccountSelector);\n    const chainTokens = useSelector(chainTokensSelector);\n    const bridgeTokens = useSelector(bridgeTokensSelector);\n    const { totalFee, isUseTokenFee, isUsedPRVFee, disabledForm }: ISendData = useSelector(sendDataSelector);\n    const handleSend = async (values: { amount: string; toAddress: string; memo?: string }) => {\n        try {\n            const { amount, toAddress, memo = '' } = values;\n            if (!amount || !toAddress || disabledForm) {\n                return;\n            }\n            const fee = toString(totalFee);\n            const originalAmount = convert.toOriginalAmount({\n                humanAmount: amount,\n                decimals: selectedPrivacy.pDecimals,\n            });\n            const paymentInfos: PaymentInfoModel[] = [\n                {\n                    paymentAddressStr: toAddress,\n                    amount: new BigNumber(floor(originalAmount)).toString(),\n                    message: memo,\n                },\n            ];\n            let tx;\n            if (selectedPrivacy.isNativeToken) {\n                tx = await account.nativeToken.transfer(paymentInfos, fee);\n            } else {\n                const token = await account.getPrivacyTokenById(selectedPrivacy.tokenId, bridgeTokens, chainTokens);\n                tx = await token.transfer(paymentInfos, isUsedPRVFee ? fee : '', isUseTokenFee ? fee : '');\n            }\n            if (!tx) {\n                throw new Error(`Failed`);\n            }\n            await dispatch(actionFetchCacheHistory());\n            history.push(routeConfirmTx, {\n                txId: tx.txId,\n            });\n        } catch (error) {\n            dispatch(\n                actionToggleToast({\n                    toggle: true,\n                    value: error?.message || JSON.stringify(error),\n                    type: TOAST_CONFIGS.error,\n                }),\n            );\n        }\n    };\n    return (\n        <ErrorBoundary>\n            <WrappedComponent {...{ ...props, handleSend }} />\n        </ErrorBoundary>\n    );\n};\n\nexport default enhance;\n","// import { walletServices } from 'incognito-js/build/web/browser';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n// import { formValueSelector } from 'redux-form';\nimport { validator } from 'src/components/ReduxForm';\n// import { COINS } from 'src/constants';\nimport {\n    isErc20TokenSelector,\n    // selectedPrivacySelector,\n} from 'src/module/Token';\n// import { FORM_CONFIGS } from './Send.enhance';\nimport {\n    sendDataSelector,\n    // sendDataSelector,\n    // sendSelector,\n} from './Send.selector';\n\nexport interface TInner {\n    validateAddress: () => any;\n}\n\nconst enhanceAddressValidation = (WrappedComp: React.FunctionComponent) => (props: any) => {\n    // const selector = formValueSelector(FORM_CONFIGS.formName);\n    const { isIncognitoAddress } = useSelector(sendDataSelector);\n    // const selectedPrivacy = useSelector(selectedPrivacySelector);\n    const isERC20 = useSelector(isErc20TokenSelector);\n    // const {\n    // symbol,\n    //  pSymbol,\n    //   isErc20Token,\n    // isNativeToken,\n    // } = selectedPrivacy;\n\n    // const isExternalAddress =\n    //   !isIncognitoAddress && selectedPrivacy?.isWithdrawable;\n    // const isExternalAddress = false;\n    // const { isAddressValidated, isValidETHAddress } = useSelector(sendSelector);\n    // const getExternalAddressValidator = () => {\n    //   if (!isAddressValidated) {\n    //     return [validator.invalidAddress(`Invalid ${symbol} address`)];\n    //   }\n    //   if (!isValidETHAddress) {\n    //     return [\n    //       validator.invalidAddress(\n    //         'Please withdraw to a wallet address, not a smart contract address.'\n    //       ),\n    //     ];\n    //   }\n    //   if (isErc20Token || symbol === COINS.CRYPTO_SYMBOL.ETH) {\n    //     return validator.combinedETHAddress;\n    //   }\n    //   if (symbol === COINS.CRYPTO_SYMBOL.TOMO) {\n    //     return validator.combinedTOMOAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.BTC) {\n    //     return validator.combinedBTCAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.BNB) {\n    //     return validator.combinedBNBAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.NEO) {\n    //     return validator.combinedNEOAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.ZEN) {\n    //     return validator.combinedZenAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.ZCL) {\n    //     return validator.combinedZCLAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.ZEC) {\n    //     return validator.combinedZECAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.VOT) {\n    //     return validator.combinedVOTAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.VTC) {\n    //     return validator.combinedVTCAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.SNG) {\n    //     return validator.combinedSNGAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.XRB) {\n    //     return validator.combinedXRBAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.XRP) {\n    //     return validator.combinedXRPAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.QTUM) {\n    //     return validator.combinedQTUMAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.PTS) {\n    //     return validator.combinedPTSAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.PPC) {\n    //     return validator.combinedPPCAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.GAS) {\n    //     return validator.combinedGASAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.NMC) {\n    //     return validator.combinedNMCAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.MEC) {\n    //     return validator.combinedMECAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.LTC) {\n    //     return validator.combinedLTCAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.KMD) {\n    //     return validator.combinedKMDAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.HUSH) {\n    //     return validator.combinedHUSHAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.GRLC) {\n    //     return validator.combinedGRLCAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.FRC) {\n    //     return validator.combinedFRCAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.DOGE) {\n    //     return validator.combinedDOGEAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.DGB) {\n    //     return validator.combinedDGBAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.DCR) {\n    //     return validator.combinedDCRAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.CLO) {\n    //     return validator.combinedCLOAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.BTG) {\n    //     return validator.combinedBTGAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.BCH) {\n    //     return validator.combinedBCHAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.BIO) {\n    //     return validator.combinedBIOAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.BVC) {\n    //     return validator.combinedBVCAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.BKX) {\n    //     return validator.combinedBKXAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.AUR) {\n    //     return validator.combinedAURAddress;\n    //   } else if (symbol === COINS.CRYPTO_SYMBOL.ZIL) {\n    //     return validator.combinedZILAddress;\n    //   }\n\n    //   // default\n    //   return validator.combinedUnknownAddress;\n    // };\n\n    const getAddressValidator = () => {\n        // if (isExternalAddress) {\n        //   return getExternalAddressValidator();\n        // }\n        return validator.combinedIncognitoAddress;\n    };\n\n    // const getWarningAddress = () => {\n    //   if (isExternalAddress) {\n    //     return 'You are exiting Incognito and going public.';\n    //   }\n    // };\n\n    const validateAddress = getAddressValidator();\n\n    // const warningAddress = getWarningAddress();\n\n    return (\n        <WrappedComp\n            {...{\n                ...props,\n                isIncognitoAddress,\n                validateAddress,\n                isERC20,\n                // warningAddress,\n                // isExternalAddress,\n            }}\n        />\n    );\n};\n\nexport default enhanceAddressValidation;\n","import BigNumber from 'bignumber.js';\nimport debounce from 'lodash/debounce';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport convert from 'src/utils/convert';\nimport { ISelectedPrivacy, isTokenBySymbolSelector, selectedPrivacySelector } from 'src/module/Token';\nimport { validator } from 'src/components/ReduxForm';\nimport { COINS } from 'src/constants';\nimport { ISendData } from './Send.interface';\nimport { sendDataSelector } from './Send.selector';\n\nexport interface TInner {\n    validateAmount: () => any;\n}\n\ninterface IState {\n    maxAmountValidator: any;\n    minAmountValidator: any;\n}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: any) => {\n    const sendData: ISendData = useSelector(sendDataSelector);\n    const selectedPrivacy: ISelectedPrivacy = useSelector(selectedPrivacySelector);\n    const isTokenBySymbol = useSelector(isTokenBySymbolSelector);\n    const {\n        // fee,\n        // feeUnitByTokenId,\n        minAmount,\n        maxAmount,\n        maxAmountText,\n        minAmountText,\n        isIncognitoAddress,\n    } = sendData;\n    const initialState: IState = {\n        maxAmountValidator: undefined,\n        minAmountValidator: undefined,\n    };\n    const [state, setState] = React.useState({ ...initialState });\n    const { maxAmountValidator, minAmountValidator } = state;\n    const setFormValidator = debounce(async () => {\n        const maxAmountNum = convert.toNumber({\n            text: maxAmountText,\n            autoCorrect: true,\n        });\n        const minAmountNum = convert.toNumber({\n            text: minAmountText,\n            autoCorrect: true,\n        });\n        let currentState = { ...state };\n        if (Number.isFinite(maxAmountNum)) {\n            currentState = {\n                ...state,\n                maxAmountValidator: validator.maxValue(\n                    maxAmountNum,\n                    new BigNumber(maxAmountNum).toNumber() > 0\n                        ? `Max amount you can ${isIncognitoAddress ? 'send' : 'unshield'} is ${maxAmountText} ${\n                              selectedPrivacy?.symbol || selectedPrivacy?.pSymbol\n                          }`\n                        : 'Your balance is insufficient.',\n                ),\n            };\n            await setState(currentState);\n        }\n        if (Number.isFinite(minAmountNum)) {\n            await setState({\n                ...currentState,\n                minAmountValidator: validator.minValue(\n                    minAmountNum,\n                    `Amount must be larger than ${minAmountText} ${\n                        selectedPrivacy?.symbol || selectedPrivacy?.pSymbol\n                    }`,\n                ),\n            });\n        }\n    }, 200);\n\n    const getAmountValidator = () => {\n        const val = [];\n        if (minAmountValidator) val.push(minAmountValidator);\n        if (maxAmountValidator) val.push(maxAmountValidator);\n        if (selectedPrivacy?.isIncognitoToken || isTokenBySymbol(COINS.CRYPTO_SYMBOL.NEO)) {\n            val.push(...validator.combinedNanoAmount);\n        }\n        val.push(...validator.combinedAmount);\n        const values = Array.isArray(val) ? [...val] : [val];\n        return values;\n    };\n\n    React.useEffect(() => {\n        setFormValidator();\n    }, [\n        selectedPrivacy,\n        // fee,\n        // feeUnitByTokenId,\n        maxAmount,\n        minAmount,\n    ]);\n\n    const validateAmount: any[] = getAmountValidator();\n\n    return (\n        <ErrorBoundary>\n            <WrappedComponent\n                {...{\n                    ...props,\n                    validateAmount,\n                }}\n            />\n        </ErrorBoundary>\n    );\n};\n\nexport default enhance;\n","import React from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reset } from 'redux-form';\nimport { SpinnerContainer } from 'src/components';\nimport { ISelectedPrivacy, selectedPrivacySelector } from 'src/module/Token';\nimport { accountBalanceSelector } from 'src/module/Account';\nimport { isGettingBalanceByTokenIdSelector } from 'src/redux';\nimport format from 'src/utils/format';\nimport convert from 'src/utils/convert';\nimport { COINS } from 'src/constants';\nimport { FORM_CONFIGS } from './Send.constant';\nimport { actionInit, actionInitEstimateFee, actionFetchedMaxFeePrv, actionFetchedMaxFeePToken } from './Send.actions';\nimport { sendSelector } from './Send.selector';\n\nconst enhanceInit = (WrappedComp: React.FunctionComponent) => (props: any) => {\n    const dispatch = useDispatch();\n    const [init, setInit] = React.useState(false);\n    const selectedPrivacy: ISelectedPrivacy = useSelector(selectedPrivacySelector);\n    const accountBalance: number = useSelector(accountBalanceSelector);\n    const isGettingBalance = useSelector(isGettingBalanceByTokenIdSelector)(selectedPrivacy.tokenId);\n    const send = useSelector(sendSelector);\n    const handleFetchedMaxPrv = async (accBalance: number) =>\n        dispatch(\n            actionFetchedMaxFeePrv({\n                maxFeePrv: accBalance,\n                maxFeePrvText: format.toFixed({\n                    number: convert.toHumanAmount({\n                        originalAmount: accBalance,\n                        decimals: COINS.PRV.pDecimals,\n                    }),\n                    decimals: COINS.PRV.pDecimals,\n                }),\n            }),\n        );\n\n    const handleFetchedMaxFeePToken = async (pToken: ISelectedPrivacy) =>\n        dispatch(\n            actionFetchedMaxFeePToken({\n                amount: pToken.amount,\n                amountText: format.toFixed({\n                    number: convert.toHumanAmount({\n                        originalAmount: pToken.amount,\n                        decimals: pToken.pDecimals,\n                    }),\n                    decimals: pToken.pDecimals,\n                }),\n            }),\n        );\n\n    const initData = async () => {\n        if (init) {\n            return;\n        }\n        try {\n            setInit(false);\n            await dispatch(reset(FORM_CONFIGS.formName));\n            await dispatch(actionInit());\n            await dispatch(actionInitEstimateFee({ screen: 'Send' }));\n            await handleFetchedMaxPrv(accountBalance);\n            await handleFetchedMaxFeePToken(selectedPrivacy);\n        } catch (error) {\n            console.debug(error);\n        } finally {\n            setInit(true);\n        }\n    };\n\n    React.useEffect(() => {\n        handleFetchedMaxPrv(accountBalance);\n    }, [accountBalance]);\n\n    React.useEffect(() => {\n        handleFetchedMaxFeePToken(selectedPrivacy);\n    }, [selectedPrivacy?.amount, selectedPrivacy?.tokenId]);\n\n    React.useEffect(() => {\n        initData();\n    }, [selectedPrivacy?.tokenId, accountBalance]);\n\n    if (!selectedPrivacy || !send.init || !init || isGettingBalance) {\n        return <SpinnerContainer animation=\"grow\" />;\n    }\n    return (\n        <ErrorBoundary>\n            <WrappedComp {...props} />\n        </ErrorBoundary>\n    );\n};\n\nexport default enhanceInit;\n","import debounce from 'lodash/debounce';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actionToggleToast, TOAST_CONFIGS } from 'src/components';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { actionFetchFee } from './Send.actions';\nimport { ISendData, ISendReducer } from './Send.interface';\nimport { sendDataSelector, sendSelector } from './Send.selector';\n\nexport interface Tinner {}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: any) => {\n    const dispatch = useDispatch();\n    const { screen, isFetching }: ISendReducer = useSelector(sendSelector);\n    const { inputAddress, inputAmount, inputMemo }: ISendData = useSelector(sendDataSelector);\n    const handleChangeForm = async (values: { address: string; amount: string; memo: string; fetching: boolean }) => {\n        try {\n            const { address, amount, memo, fetching } = values;\n            if (!amount || !address || fetching) {\n                return;\n            }\n            let defaultScreen = 'Send';\n            //   if (isExternalAddress) {\n            //     screen = 'UnShield';\n            //   } else if (isIncognitoAddress) {\n            //     screen = 'Send';\n            //   }\n            await dispatch(\n                actionFetchFee({\n                    amount,\n                    address,\n                    screen: defaultScreen,\n                    memo,\n                }),\n            );\n        } catch (error) {\n            dispatch(\n                actionToggleToast({\n                    toggle: true,\n                    value: error,\n                    type: TOAST_CONFIGS.error,\n                }),\n            );\n        }\n    };\n\n    const deHandleChangeForm = React.useRef(debounce(handleChangeForm, 400));\n\n    React.useEffect(() => {\n        deHandleChangeForm.current({\n            address: inputAddress,\n            amount: inputAmount,\n            memo: inputMemo,\n            fetching: isFetching,\n        });\n    }, [inputAddress, inputAmount, inputMemo, screen]);\n    return (\n        <ErrorBoundary>\n            <WrappedComponent {...props} />\n        </ErrorBoundary>\n    );\n};\n\nexport default enhance;\n","import styled from 'styled-components';\nimport { COLORS } from 'src/styles';\n\nexport const Styled = styled.div`\n    form {\n        > :first-child {\n            margin-top: 10px;\n        }\n    }\n    .btn-container {\n        margin-top: 30px;\n    }\n    .estimate-fee {\n        justify-content: space-between;\n        margin-top: 10px;\n    }\n    .fee-types .fee-type {\n        background-color: ${COLORS.colorGreyLight};\n        border-radius: 4px;\n        color: ${COLORS.black};\n        padding: 3px 5px;\n        &.selected {\n            color: ${COLORS.white};\n            background-color: ${COLORS.black};\n        }\n        :last-child {\n            margin-left: 5px;\n        }\n    }\n`;\n","import React from 'react';\nimport { compose } from 'recompose';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { withLayout } from 'src/components/Layout';\nimport {\n    withAllListToken,\n    getPrivacyDataByTokenIDSelector,\n    actionSetFollowedTokens,\n    ISelectedPrivacy,\n} from 'src/module/Token';\nimport { defaultAccountSelector } from 'src/module/Account';\nimport { AccountInstance } from 'incognito-js/build/web/browser';\nimport { actionToggleToast, TOAST_CONFIGS } from 'src/components';\nimport { actionSaveWallet } from 'src/module/Wallet';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport interface TInner {\n    handleToggleFollowTokenById: () => void;\n}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: any) => {\n    const defaultAccount: AccountInstance = useSelector(defaultAccountSelector);\n    const getPrivacyDataByTokenID = useSelector(getPrivacyDataByTokenIDSelector);\n    const dispatch = useDispatch();\n    const handleToggleFollowTokenById = (tokenId: string) => {\n        try {\n            const token: ISelectedPrivacy = getPrivacyDataByTokenID(tokenId);\n            if (token.isFollowed) {\n                defaultAccount.unfollowTokenById(tokenId);\n            } else {\n                defaultAccount.followTokenById(tokenId);\n            }\n            dispatch(actionSetFollowedTokens({ followed: defaultAccount.privacyTokenIds }));\n            dispatch(actionSaveWallet());\n        } catch (error) {\n            dispatch(\n                actionToggleToast({\n                    toggle: true,\n                    value: error?.message || JSON.stringify(error),\n                    type: TOAST_CONFIGS.error,\n                }),\n            );\n        }\n    };\n    return (\n        <ErrorBoundary>\n            <WrappedComponent {...{ ...props, handleToggleFollowTokenById }} />\n        </ErrorBoundary>\n    );\n};\n\nexport default compose<TInner, any>(withLayout, withAllListToken, enhance);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\n\ninterface IProps {}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: IProps) => {\n    return (\n        <ErrorBoundary>\n            <WrappedComponent {...props} />\n        </ErrorBoundary>\n    );\n};\n\nexport default compose<IProps, any>(enhance);\n","const nameList = [\n    'Aardvark',\n    'Albatross',\n    'Alligator',\n    'Alpaca',\n    'Ant',\n    'Anteater',\n    'Antelope',\n    'Ape',\n    'Armadillo',\n    'Donkey',\n    'Baboon',\n    'Badger',\n    'Barracuda',\n    'Bat',\n    'Bear',\n    'Beaver',\n    'Bee',\n    'Bison',\n    'Boar',\n    'Buffalo',\n    'Butterfly',\n    'Camel',\n    'Capybara',\n    'Caribou',\n    'Cassowary',\n    'Cat',\n    'Caterpillar',\n    'Cattle',\n    'Chamois',\n    'Cheetah',\n    'Chicken',\n    'Chimpanzee',\n    'Chinchilla',\n    'Chough',\n    'Clam',\n    'Cobra',\n    'Cockroach',\n    'Cod',\n    'Cormorant',\n    'Coyote',\n    'Crab',\n    'Crane',\n    'Crocodile',\n    'Crow',\n    'Curlew',\n    'Deer',\n    'Dinosaur',\n    'Dog',\n    'Dogfish',\n    'Dolphin',\n    'Dotterel',\n    'Dove',\n    'Dragonfly',\n    'Duck',\n    'Dugong',\n    'Dunlin',\n    'Eagle',\n    'Echidna',\n    'Eel',\n    'Eland',\n    'Elephant',\n    'Elk',\n    'Emu',\n    'Falcon',\n    'Ferret',\n    'Finch',\n    'Fish',\n    'Flamingo',\n    'Fly',\n    'Fox',\n    'Frog',\n    'Gaur',\n    'Gazelle',\n    'Gerbil',\n    'Giraffe',\n    'Gnat',\n    'Gnu',\n    'Goat',\n    'Goldfinch',\n    'Goldfish',\n    'Goose',\n    'Gorilla',\n    'Goshawk',\n    'Grasshopper',\n    'Grouse',\n    'Guanaco',\n    'Gull',\n    'Hamster',\n    'Hare',\n    'Hawk',\n    'Hedgehog',\n    'Heron',\n    'Herring',\n    'Hippopotamus',\n    'Hornet',\n    'Horse',\n    'Human',\n    'Hummingbird',\n    'Hyena',\n    'Ibex',\n    'Ibis',\n    'Jackal',\n    'Jaguar',\n    'Jay',\n    'Jellyfish',\n    'Kangaroo',\n    'Kingfisher',\n    'Koala',\n    'Kookabura',\n    'Kouprey',\n    'Kudu',\n    'Lapwing',\n    'Lark',\n    'Lemur',\n    'Leopard',\n    'Lion',\n    'Llama',\n    'Lobster',\n    'Locust',\n    'Loris',\n    'Louse',\n    'Lyrebird',\n    'Magpie',\n    'Mallard',\n    'Manatee',\n    'Mandrill',\n    'Mantis',\n    'Marten',\n    'Meerkat',\n    'Mink',\n    'Mole',\n    'Mongoose',\n    'Monkey',\n    'Moose',\n    'Mosquito',\n    'Mouse',\n    'Mule',\n    'Narwhal',\n    'Newt',\n    'Nightingale',\n    'Octopus',\n    'Okapi',\n    'Opossum',\n    'Oryx',\n    'Ostrich',\n    'Otter',\n    'Owl',\n    'Oyster',\n    'Panther',\n    'Parrot',\n    'Partridge',\n    'Peafowl',\n    'Pelican',\n    'Penguin',\n    'Pheasant',\n    'Pig',\n    'Pigeon',\n    'Pony',\n    'Porcupine',\n    'Porpoise',\n    'Quail',\n    'Quelea',\n    'Quetzal',\n    'Rabbit',\n    'Raccoon',\n    'Rail',\n    'Ram',\n    'Rat',\n    'Raven',\n    'Red deer',\n    'Red panda',\n    'Reindeer',\n    'Rhinoceros',\n    'Rook',\n    'Salamander',\n    'Salmon',\n    'Sand Dollar',\n    'Sandpiper',\n    'Sardine',\n    'Scorpion',\n    'Seahorse',\n    'Seal',\n    'Shark',\n    'Sheep',\n    'Shrew',\n    'Skunk',\n    'Snail',\n    'Snake',\n    'Sparrow',\n    'Spider',\n    'Spoonbill',\n    'Squid',\n    'Squirrel',\n    'Starling',\n    'Stingray',\n    'Stinkbug',\n    'Stork',\n    'Swallow',\n    'Swan',\n    'Tapir',\n    'Tarsier',\n    'Termite',\n    'Tiger',\n    'Toad',\n    'Trout',\n    'Turkey',\n    'Turtle',\n    'Viper',\n    'Vulture',\n    'Wallaby',\n    'Walrus',\n    'Wasp',\n    'Weasel',\n    'Whale',\n    'Wildcat',\n    'Wolf',\n    'Wolverine',\n    'Wombat',\n    'Woodcock',\n    'Woodpecker',\n    'Worm',\n    'Wren',\n    'Yak',\n    'Zebra',\n];\n\nconst getName = () => nameList[Math.round(Math.random() * nameList.length)];\n\nexport const randomName = (excludes: string[]) => {\n    let name;\n    if (excludes && excludes.length) {\n        do {\n            name = getName();\n        } while (name && excludes.includes(name));\n    }\n    return name;\n};\n","import React from 'react';\nimport { compose } from 'recompose';\nimport trim from 'lodash/trim';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAccount, actionFetchImportAccount, listAccountNameSelector } from 'src/module/Account';\nimport { change, reduxForm } from 'redux-form';\nimport { randomName as handleRandomName } from 'src/utils/randomName';\n\nimport { withLayout } from 'src/components/Layout';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { actionToggleToast, TOAST_CONFIGS } from 'src/components';\nimport { IAccountLanguage } from 'src/i18n';\nimport { translateByFieldSelector } from 'src/module/Configs';\n\nexport interface TOutter {\n    disabledForm: boolean;\n    handleImportAccount: (values: { accountName: string; privateKey: string }) => void;\n    readOnlyName: boolean;\n    randomName: string;\n    handleChangeRandomName: () => void;\n}\n\nexport const FORM_CONFIGS = {\n    formName: 'form-import-account',\n    accountName: 'accountName',\n    privateKey: 'privateKey',\n};\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: any) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location: any = useLocation();\n    const params: {\n        onGoBack?: () => void;\n    } = location.state;\n    const accountNameList = useSelector(listAccountNameSelector);\n    const translate: IAccountLanguage = useSelector(translateByFieldSelector)('account');\n    const [state, setState] = React.useState({\n        readOnlyName: true,\n    });\n    const { readOnlyName } = state;\n    const { isFormValid, isAccountExist, isPrivateKeyExist } = useAccount({\n        form: FORM_CONFIGS,\n    });\n    const disabledForm = !isFormValid;\n    const randomName = React.useMemo(() => {\n        return handleRandomName(accountNameList);\n    }, [accountNameList]);\n    const handleImportAccount = async (values: { accountName: string; privateKey: string }) => {\n        try {\n            if (disabledForm) {\n                return;\n            }\n            if (isAccountExist || isPrivateKeyExist) {\n                throw new Error('Account is exist');\n            }\n            const { accountName, privateKey } = values;\n            await dispatch(actionFetchImportAccount(trim(readOnlyName ? randomName : accountName), trim(privateKey)));\n            if (typeof params?.onGoBack === 'function') {\n                params?.onGoBack();\n            } else {\n                history.goBack();\n            }\n            dispatch(\n                actionToggleToast({\n                    toggle: true,\n                    value: translate.success.import,\n                    type: TOAST_CONFIGS.success,\n                }),\n            );\n        } catch (e) {\n            dispatch(\n                actionToggleToast({\n                    toggle: true,\n                    value: e?.message || translate.error.import,\n                    type: TOAST_CONFIGS.error,\n                }),\n            );\n        }\n    };\n\n    const handleChangeRandomName = () => setState({ ...state, readOnlyName: false });\n\n    React.useEffect(() => {\n        dispatch(change(FORM_CONFIGS.formName, FORM_CONFIGS.accountName, randomName));\n    }, []);\n\n    return (\n        <WrappedComponent\n            {...{\n                ...props,\n                readOnlyName,\n                randomName,\n                handleImportAccount,\n                handleChangeRandomName,\n                disabledForm,\n            }}\n        />\n    );\n};\n\nexport default compose(\n    withLayout,\n    reduxForm<any, TOutter>({\n        form: FORM_CONFIGS.formName,\n    }),\n    enhance,\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport QrReader from 'react-qr-reader';\n\nconst Styled = styled.div``;\n\nconst QrReaderComponent = (props: QrReader.props) => {\n    return (\n        <Styled>\n            <QrReader {...props} />;\n        </Styled>\n    );\n};\n\nexport default React.memo(QrReaderComponent);\n","import React from 'react';\nimport { compose } from 'recompose';\nimport { useDispatch } from 'react-redux';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { withLayout } from 'src/components/Layout';\nimport { change, focus, InjectedFormProps, reduxForm } from 'redux-form';\nimport AddressBook, { IAddressBook } from 'src/module/AddressBook';\nimport { actionToggleModal } from 'src/components/Modal';\nimport QrReader from 'src/components/QrReader';\nimport { actionToggleToast, TOAST_CONFIGS } from 'src/components';\nimport { isString, toString } from 'lodash';\nimport { route as routeDetail } from 'src/module/Token/features/Detail';\nimport { useHistory } from 'react-router-dom';\nimport withSend, { TInner as TInnerSend } from './Send.enhanceSend';\nimport withValAddress, { TInner as TInnerAddress } from './Send.enhanceAddressValidator';\nimport withValAmount, { TInner as TInnerAmount } from './Send.enhanceAmountValidator';\nimport { standardizedAddress } from './Send.utils';\nimport { actionFetchFeeByMax } from './Send.actions';\nimport withInit from './Send.enhanceInit';\nimport withFee from './Send.enhanceFee';\nimport { FORM_CONFIGS } from './Send.constant';\n\nexport interface IMergeProps extends InjectedFormProps<any, any>, TInnerAddress, TInnerAmount, TInnerSend {\n    onClickMax: () => any;\n    // eslint-disable-next-line no-unused-vars\n    onChangeField: (value: string, field: any) => any;\n    onClickAddressBook: () => any;\n    onClickScan: () => any;\n    onGoBack: () => any;\n}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: any) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const handleStandardizedAddress = (value: string) => standardizedAddress(value);\n    const onChangeField = async (value: string, field: string) => {\n        let val: any = value;\n        if (field === 'toAddress') {\n            val = handleStandardizedAddress(value);\n        }\n        dispatch(change(FORM_CONFIGS.formName, field, toString(val)));\n        dispatch(focus(FORM_CONFIGS.formName, field));\n    };\n\n    const onClickMax = async () => {\n        try {\n            const maxAmountText: any = await dispatch(actionFetchFeeByMax());\n            if (maxAmountText) {\n                onChangeField(maxAmountText, 'amount');\n            }\n        } catch (error) {\n            dispatch(\n                actionToggleToast({\n                    toggle: true,\n                    value: error,\n                    type: TOAST_CONFIGS.error,\n                }),\n            );\n        }\n    };\n\n    const onClickAddressBook = () => {\n        dispatch(\n            actionToggleModal({\n                data: (\n                    <AddressBook\n                        onGoBack={() => dispatch(actionToggleModal({}))}\n                        onSelectedAddrBook={(addressBook: IAddressBook) => {\n                            onChangeField(addressBook.address, FORM_CONFIGS.toAddress);\n                            dispatch(actionToggleModal({}));\n                        }}\n                    />\n                ),\n                visible: true,\n            }),\n        );\n    };\n\n    const handleScanQrCode = (value: any) => {\n        if (isString(value)) {\n            onChangeField(value, FORM_CONFIGS.toAddress);\n            dispatch(actionToggleModal({}));\n        }\n    };\n\n    const handleErrorQrCode = (error: any) => {\n        dispatch(\n            actionToggleToast({\n                toggle: true,\n                value: error,\n                type: TOAST_CONFIGS.error,\n            }),\n        );\n        dispatch(actionToggleModal({}));\n    };\n\n    const onClickScan = () => {\n        dispatch(\n            actionToggleModal({\n                data: <QrReader delay={500} onScan={handleScanQrCode} onError={handleErrorQrCode} />,\n                visible: true,\n            }),\n        );\n    };\n\n    const onGoBack = () => {\n        history.push(routeDetail);\n    };\n\n    return (\n        <ErrorBoundary>\n            <WrappedComponent\n                {...{\n                    ...props,\n                    onClickMax,\n                    onChangeField,\n                    onClickAddressBook,\n                    onClickScan,\n                    onGoBack,\n                }}\n            />\n        </ErrorBoundary>\n    );\n};\n\nexport default compose<IMergeProps, any>(\n    withLayout,\n    reduxForm({\n        form: FORM_CONFIGS.formName,\n    }),\n    withInit,\n    withFee,\n    withValAddress,\n    withValAmount,\n    withSend,\n    enhance,\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport copy from 'copy-to-clipboard';\nimport { COLORS } from 'src/styles';\nimport { Button } from 'src/components/Core';\n\ninterface IProps {\n    text: string;\n}\n\nconst Styled = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    background-color: ${COLORS.colorGrey};\n    border-radius: 20px;\n    height: 40px;\n    margin-top: 30px;\n    .text {\n        margin-right: 15px;\n        color: ${COLORS.colorGreyBold};\n        padding-left: 10px;\n    }\n    .btn-container {\n        height: 100%;\n    }\n`;\n\nconst Copy: React.FunctionComponent<IProps> = (props) => {\n    const { text } = props;\n    const [copied, setCopied] = React.useState(false);\n    const handleCopyData = (e: any) => {\n        try {\n            e.preventDefault();\n            copy(text);\n            setCopied(true);\n        } catch (error) {\n            console.debug(error);\n        }\n    };\n    return (\n        <Styled>\n            <p className=\"text ellipsis\">{text}</p>\n            <Button title={copied ? `Copied` : `Copy`} onClick={handleCopyData} />\n        </Styled>\n    );\n};\n\nexport default Copy;\n","import React from 'react';\nimport styled from 'styled-components';\nimport QRCodeReact, { BaseQRCodeProps } from 'qrcode.react';\nimport { themeSelector } from 'src/module/Configs';\nimport { useSelector } from 'react-redux';\nimport { COLORS, ITheme } from 'src/styles';\nimport Copy from '../Copy';\n\ninterface IProps {\n    hook?: any;\n    qrCodeProps: BaseQRCodeProps;\n}\n\nconst Styled = styled.div`\n    .qrcode-react {\n        justify-content: center;\n        display: flex;\n    }\n    .copy-block {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        height: 50px;\n        border-radius: 50px;\n        padding: 0 15px;\n        justify-content: space-between;\n        background-color: ${COLORS.colorGreyLight};\n        margin-top: 30px;\n    }\n    .copy-block .btn-copy {\n        background: ${({ theme }: { theme: ITheme }) => theme.button};\n        height: 40px;\n        border-radius: 40px;\n        padding: 0 10px;\n    }\n    .copy-block p {\n        max-width: 100%;\n    }\n`;\n\nconst QrCode = (props: IProps) => {\n    const { hook, qrCodeProps } = props;\n    const { value } = qrCodeProps;\n    const theme = useSelector(themeSelector);\n    return (\n        <Styled theme={theme} className=\"qrcode-container\">\n            <div className=\"qrcode-react\">\n                <QRCodeReact {...qrCodeProps} />\n            </div>\n            {hook}\n            <Copy text={value} />\n        </Styled>\n    );\n};\n\nexport default QrCode;\n","import { ILanguage } from './interface';\n\nconst en: ILanguage = {\n    general: {\n        copied: 'Copied',\n        copy: 'Copy',\n    },\n    home: {\n        title: 'Incognito Wallet',\n    },\n    keychain: {\n        headerTitle: 'Keychain',\n        yourKeychain: 'Your keychains',\n    },\n    wallet: {\n        headerTitle: 'Assets',\n        selectAccount: {\n            headerTitle: 'Search keychains',\n        },\n        addCoin: 'Add a coin +',\n        error: {\n            walletNotExisted: 'Wallet is not exist',\n        },\n        blockShield: {\n            totalShielded: 'Shielded Balance',\n            btnShield: 'Shield my crypto',\n        },\n    },\n    token: {\n        followToken: {\n            headerTitle: 'Add a coin',\n            addManually: 'Add manually +',\n            dontSeeYourCoin: `Don't see your coin?`,\n        },\n        addToken: {\n            headerTitle: 'Add a coin',\n            added: 'Added',\n        },\n        detail: {\n            headerTitle: '',\n            btnSend: 'Send',\n            btnReceive: 'Receive',\n        },\n        infoToken: {\n            headerTitle: 'Coin info',\n        },\n        error: {\n            tokenIdRequired: 'Token id is required',\n        },\n    },\n    account: {\n        create: {\n            title: 'Create',\n            desc: 'Create a new keychain',\n        },\n        import: {\n            title: 'Import',\n            desc: 'Import an existing keychain',\n        },\n        backup: {\n            title: 'Back up',\n            desc: 'Backup your private keys',\n            headerTitle: 'Backup your private keys',\n            copyAll: 'Copy all',\n            copied: 'Copied',\n        },\n        accountDetail: {\n            title1: 'Your incognito address',\n            title2: 'Private key',\n            title3: 'Public key',\n            title4: 'Readonly key',\n            title5: 'Validator key',\n            title6: 'Bls key',\n            title7: 'Device token',\n            title8: 'Shard',\n            keychain: 'keychain',\n            delete: 'Delete',\n        },\n        receive: {\n            headerTitle: 'Receive anonymously',\n            hook: `This is your address.\\nUse it to receive any cryptocurrency\\nfrom another Incognito address.`,\n        },\n        error: {\n            create: 'Keychain was not created! Please try again.',\n            import: 'Import keychain failed, please try again.',\n            accountNotExisted: 'Account is not exist',\n        },\n        success: {\n            create: 'Create keychain successful.',\n            import: 'Import keychain successful.',\n        },\n    },\n    setting: {\n        headerTitle: 'Settings',\n        network: {\n            title: 'Network',\n        },\n        dev: {\n            title: 'Dev Sections',\n            homeConfigs: 'Use staging home configs',\n        },\n        addressBook: {\n            title: 'Address Book',\n            desc: 'Manage your saved addresses',\n        },\n        keychain: {\n            title: 'Keychain',\n            desc: 'Manage your keychains',\n        },\n    },\n    send: {\n        headerTitle: 'Send',\n        amount: 'Enter amount',\n        toAddress: 'To',\n        incognitoAddress: 'Enter address',\n        fee: 'Fee',\n        memo: 'Memo',\n        placeholderMemo: 'Add a memo (optional)',\n        balance: 'Balance',\n        confirm: {\n            headerTitle: 'Back',\n            txId: 'TxID',\n            fee: 'Fee',\n            time: 'Time',\n            toAddress: 'To address',\n            amount: 'Amount',\n            sent: 'Sent.',\n        },\n    },\n    history: {\n        headerTitle: 'History',\n        id: 'ID',\n        fee: 'Fee',\n        status: 'Status',\n        time: 'Time',\n        toAddress: 'To address',\n        coin: 'Coin',\n    },\n    addressBook: {\n        headerTitle: 'Address book',\n        name: 'Name',\n        address: 'Address',\n        networkName: 'Network',\n        btnCreate: 'Create',\n        btnEdit: 'Edit',\n        btnRemove: 'Remove',\n        msgExist: 'Address book is exist!',\n        keychains: 'Your keychains',\n        incognito: 'Incognito addresses',\n        external: 'External addresses',\n        headerTitleCreate: 'Create',\n        headerTitleEdit: 'Edit',\n    },\n};\n\nexport default en;\n","import { lazy } from 'react';\nimport { IRouteProps } from 'src/module';\n\nconst createRoute: IRouteProps = {\n    path: '/create-address-book',\n    exact: true,\n    component: lazy(() => import('./Create')),\n    name: 'Create',\n    to: '/create-address-book',\n};\n\nexport const route = '/create-address-book';\n\nexport default createRoute;\n","import { ACTION_TOGGLE_MODAL, ACTION_TOGGLE_LOADING_MODAL } from './Modal.constant';\n\nexport interface IModalReducer {\n    visible: boolean;\n    data: any;\n}\n\nconst initialState: IModalReducer = {\n    visible: false,\n    data: null,\n};\n\nconst reducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case ACTION_TOGGLE_MODAL: {\n            return {\n                ...state,\n                ...action.payload,\n            };\n        }\n        case ACTION_TOGGLE_LOADING_MODAL: {\n            return {\n                ...state,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { AccountInstance } from 'incognito-js/build/web/browser';\nimport { persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport {\n    ACTION_FETCHING_CREATE_ACCOUNT,\n    ACTION_FETCHED_CREATE_ACCOUNT,\n    ACTION_FETCHING_IMPORT_ACCOUNT,\n    ACTION_FETCHED_IMPORT_ACCOUNT,\n    ACTION_SELECT_ACCOUNT,\n    ACTION_SET_LIST_ACCOUNT,\n    ACTION_SWITCH_ACCOUNT_FETCHING,\n    ACTION_SWITCH_ACCOUNT_FETCHED,\n    ACTION_GET_ACCOUNT_BALANCE_FETCHING,\n    ACTION_GET_ACCOUNT_BALANCE_FETCHED,\n} from './Account.constant';\nimport { IAccountReducer } from './Account.interface';\n\nconst initialState: IAccountReducer = {\n    list: [],\n    defaultAccountName: '',\n    gettingBalance: [],\n    switch: false,\n    create: false,\n    import: false,\n    accountBalance: 0,\n};\n\nconst accountReducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case ACTION_FETCHING_CREATE_ACCOUNT: {\n            return {\n                ...state,\n                create: true,\n            };\n        }\n        case ACTION_FETCHED_CREATE_ACCOUNT: {\n            const account: AccountInstance = action.payload;\n            return {\n                ...state,\n                create: false,\n                defaultAccountName: account.name,\n            };\n        }\n        case ACTION_FETCHING_IMPORT_ACCOUNT: {\n            return {\n                ...state,\n                import: true,\n            };\n        }\n        case ACTION_FETCHED_IMPORT_ACCOUNT: {\n            const account: AccountInstance = action.payload;\n            return {\n                ...state,\n                import: false,\n                defaultAccountName: account.name,\n            };\n        }\n        case ACTION_SELECT_ACCOUNT: {\n            const defaultAccountName = action.payload;\n            return {\n                ...state,\n                defaultAccountName,\n            };\n        }\n        case ACTION_SET_LIST_ACCOUNT: {\n            return {\n                ...state,\n                list: [...action.payload],\n            };\n        }\n        case ACTION_SWITCH_ACCOUNT_FETCHING: {\n            return {\n                ...state,\n                switch: true,\n            };\n        }\n        case ACTION_SWITCH_ACCOUNT_FETCHED: {\n            return {\n                ...state,\n                switch: false,\n            };\n        }\n        case ACTION_GET_ACCOUNT_BALANCE_FETCHING: {\n            const { accountName } = action.payload;\n            return {\n                ...state,\n                gettingBalance: [...state.gettingBalance, accountName],\n            };\n        }\n        case ACTION_GET_ACCOUNT_BALANCE_FETCHED: {\n            const { accountName, amount } = action.payload;\n            return {\n                ...state,\n                gettingBalance: state.gettingBalance.filter((name) => name !== accountName),\n                accountBalance: amount,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nconst persistConfig = {\n    key: 'account',\n    storage,\n    whitelist: ['defaultAccountName'],\n    stateReconciler: autoMergeLevel2,\n};\n\nexport default persistReducer(persistConfig, accountReducer);\n","import { persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport { isEqual, toLower } from 'lodash';\nimport {\n    ACTION_CREATE,\n    ACTION_DELETE,\n    ACTION_UPDATE,\n    ACTION_SELECTED,\n    ACTION_REMOVE_SELECTED,\n} from './AddressBook.constant';\nimport { isAddressBookExist, ADDRESS_BOOK_TYPE } from './AddressBook.utils';\nimport { IAddressBook, IAddressBookReducer, IPayload } from './AddressBook.interface';\n\nconst initialState: IAddressBookReducer = {\n    incognitoAddress: [],\n    externalAddress: [],\n};\n\nconst addressBookReducer = (state = initialState, action: { type: string; payload: any }) => {\n    switch (action.type) {\n        case ACTION_CREATE: {\n            const { addressBook, type }: IPayload = action.payload;\n            const field = ADDRESS_BOOK_TYPE[type];\n            const oldAddressedBook: IAddressBook[] = state[field];\n            return {\n                ...state,\n                [field]: [...oldAddressedBook, { ...addressBook, createdAt: new Date().getTime() }],\n            };\n        }\n        case ACTION_UPDATE: {\n            const { addressBook, type }: IPayload = action.payload;\n            const field = ADDRESS_BOOK_TYPE[type];\n            const oldAddressedBook: IAddressBook[] = state[field];\n            const isNameExisted = oldAddressedBook\n                .filter((item) => item?.address !== addressBook?.address)\n                .some((item) => isEqual(toLower(item?.name), toLower(addressBook?.name)));\n            if (isNameExisted) {\n                throw new Error('User name is exist!');\n            }\n            return {\n                ...state,\n                [field]: [\n                    ...oldAddressedBook.map((item) =>\n                        item.address === addressBook.address\n                            ? { ...item, ...addressBook, updatedAt: new Date().getTime() }\n                            : item,\n                    ),\n                ],\n            };\n        }\n        case ACTION_DELETE: {\n            const { addressBook, type }: IPayload = action.payload;\n            const field = ADDRESS_BOOK_TYPE[type];\n            const oldAddressedBook: IAddressBook[] = state[field];\n            const isExist = isAddressBookExist(oldAddressedBook, addressBook);\n            if (!isExist) {\n                return state;\n            }\n            return {\n                ...state,\n                [field]: [...oldAddressedBook.filter((item) => item.address !== addressBook.address)],\n            };\n        }\n        case ACTION_SELECTED: {\n            const { addressBook, type }: IPayload = action.payload;\n            const field = ADDRESS_BOOK_TYPE[type];\n            const oldAddressedBook: IAddressBook[] = state[field];\n            const selected = oldAddressedBook?.find((item) => item?.address === addressBook.address);\n            return {\n                ...state,\n                selected,\n            };\n        }\n        case ACTION_REMOVE_SELECTED: {\n            return {\n                ...state,\n                selected: null,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nconst persistConfig = {\n    key: 'addressBook',\n    storage,\n    whitelist: ['incognitoAddress', 'externalAddress'],\n    stateReconciler: autoMergeLevel2,\n};\n\nexport default persistReducer(persistConfig, addressBookReducer);\n","import { persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport {\n    ACTION_FETCHED_CACHE_HISTORY,\n    ACTION_FETCHING_CACHE_HISTORY,\n    LIMIT_RECEIVE_HISTORY_ITEM,\n} from './History.constant';\nimport { IHistoryReducer } from './History.interface';\n\nconst initialState: IHistoryReducer = {\n    cacheHistory: {\n        fetching: false,\n        histories: [],\n    },\n    receiveHistory: {\n        isFetching: false,\n        isFetched: false,\n        data: [],\n        oversize: false,\n        page: 0,\n        limit: LIMIT_RECEIVE_HISTORY_ITEM,\n        refreshing: true,\n        tokenId: '',\n        notEnoughData: false,\n    },\n};\n\nconst historyReducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case ACTION_FETCHING_CACHE_HISTORY: {\n            return {\n                ...state,\n                cacheHistory: {\n                    ...state.cacheHistory,\n                    fetching: true,\n                },\n            };\n        }\n        case ACTION_FETCHED_CACHE_HISTORY: {\n            const { histories } = action.payload;\n            return {\n                ...state,\n                cacheHistory: {\n                    ...state.cacheHistory,\n                    fetching: false,\n                    histories,\n                },\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nconst persistConfig = {\n    key: 'history',\n    storage,\n    whitelist: [],\n    stateReconciler: autoMergeLevel2,\n};\n\nexport default persistReducer(persistConfig, historyReducer);\n","import { COINS } from 'src/constants';\nimport { isEmpty } from 'lodash';\nimport { ISendReducer } from './Send.interface';\nimport {\n    ACTION_FETCHING_FEE,\n    ACTION_FETCHED_FEE,\n    ACTION_FETCH_FAIL_FEE,\n    ACTION_ADD_FEE_TYPE,\n    ACTION_CHANGE_FEE_TYPE,\n    ACTION_FETCHED_PTOKEN_FEE,\n    ACTION_FETCHED_MIN_PTOKEN_FEE,\n    ACTION_CHANGE_FEE,\n    ACTION_INIT,\n    ACTION_INIT_FETCHED,\n    ACTION_FETCHED_MAX_FEE_PRV,\n    ACTION_FETCHED_MAX_FEE_PTOKEN,\n    ACTION_FETCHED_VALID_ADDR,\n    ACTION_FETCHED_USER_FEES,\n    ACTION_FETCHING_USER_FEES,\n    ACTION_TOGGLE_FAST_FEE,\n    ACTION_REMOVE_FEE_TYPE,\n    ACTION_FETCH_FAIL_USER_FEES,\n} from './Send.constant';\nimport { hasMultiLevelUsersFee, MAX_FEE_PER_TX } from './Send.utils';\n\nconst initialState: ISendReducer = {\n    isFetching: false,\n    isFetched: false,\n    minFeePrv: 0,\n    minFeePrvText: '0',\n    feePrv: 0,\n    feePrvText: '0',\n    maxFeePrv: 0,\n    maxFeePrvText: '0',\n    feePToken: 0,\n    feePTokenText: '0',\n    feeBurnPToken: 0,\n    feeBurnPTokenText: '0',\n    minFeePToken: 0,\n    minFeePTokenText: '0',\n    maxFeePToken: 0,\n    maxFeePTokenText: '0',\n    amount: 0,\n    amountText: '0',\n    minAmount: 0,\n    minAmountText: '0',\n    init: false,\n    screen: '',\n    types: [\n        {\n            tokenId: COINS.PRV.id,\n            symbol: COINS.PRV.symbol,\n        },\n    ],\n    actived: COINS.PRV.id,\n    rate: 1,\n    isAddressValidated: true,\n    isValidETHAddress: true,\n    userFees: {\n        isFetching: false,\n        isFetched: false,\n        data: null,\n        hasMultiLevel: false,\n        isMemoRequired: false,\n    },\n    isValidating: false,\n    fast2x: false,\n    totalFeePrv: 0,\n    totalFeePrvText: '0',\n    userFeePrv: 0,\n    totalFeePToken: 0,\n    totalFeePTokenText: '0',\n    userFeePToken: 0,\n};\n\nconst sendReducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case ACTION_INIT: {\n            return {\n                ...initialState,\n            };\n        }\n        case ACTION_INIT_FETCHED: {\n            return {\n                ...state,\n                ...action.payload,\n                init: true,\n            };\n        }\n        case ACTION_FETCHED_MIN_PTOKEN_FEE: {\n            return {\n                ...state,\n                ...action.payload,\n            };\n        }\n        case ACTION_FETCHING_FEE: {\n            return {\n                ...state,\n                isFetching: true,\n            };\n        }\n        case ACTION_FETCHED_FEE: {\n            return {\n                ...state,\n                isFetched: true,\n                isFetching: false,\n                ...action.payload,\n            };\n        }\n        case ACTION_FETCH_FAIL_FEE: {\n            return {\n                ...state,\n                isFetching: false,\n                feePrv: MAX_FEE_PER_TX,\n            };\n        }\n        case ACTION_ADD_FEE_TYPE: {\n            const { tokenId } = action.payload;\n            const isExisted = state.types.some((item) => item?.tokenId === tokenId);\n            if (tokenId === COINS.PRV.id || isExisted) {\n                return state;\n            }\n            return {\n                ...state,\n                types: [...initialState.types, action.payload],\n            };\n        }\n        case ACTION_REMOVE_FEE_TYPE: {\n            const { tokenId } = action.payload;\n            if (tokenId === COINS.PRV.id) {\n                return state;\n            }\n            return {\n                ...state,\n                types: [...state?.types.filter((item) => item?.tokenId !== tokenId)],\n            };\n        }\n        case ACTION_CHANGE_FEE_TYPE: {\n            return {\n                ...state,\n                actived: action.payload,\n            };\n        }\n        case ACTION_FETCHED_PTOKEN_FEE: {\n            return {\n                ...state,\n                ...action.payload,\n            };\n        }\n        case ACTION_CHANGE_FEE: {\n            const { value, isUseTokenFee, valueOriginal } = action.payload;\n            const field = isUseTokenFee ? 'feePTokenText' : 'feePrvText';\n            const fieldOriginal = isUseTokenFee ? 'feePToken' : 'feePrv';\n            // const valueToNumber = convert.toString({\n            //   text: value,\n            //   autoCorrect: true,\n            //   toString: true,\n            // });\n            // const valueOriginal = convert.toOriginalAmount({\n            //   humanAmount: valueToNumber,\n            //   decimals: feePDecimals,\n            //   round: false,\n            // });\n            return {\n                ...state,\n                [field]: value,\n                [fieldOriginal]: valueOriginal,\n            };\n        }\n        case ACTION_FETCHED_MAX_FEE_PRV: {\n            const { maxFeePrv, maxFeePrvText } = action.payload;\n            // const maxFeePrv = accountBalance;\n            // const maxFeePrvText = format.formatAmount({\n            //   originalAmount: maxFeePrv,\n            //   decimalDigits: false,\n            //   decimals: COINS.PRV.pDecimals,\n            //   clipAmount: false,\n            // });\n            return {\n                ...state,\n                maxFeePrv,\n                maxFeePrvText,\n            };\n        }\n        case ACTION_FETCHED_MAX_FEE_PTOKEN: {\n            const { amount, amountText } = action.payload;\n            return {\n                ...state,\n                amount,\n                amountText,\n                maxFeePToken: amount,\n                maxFeePTokenText: amountText,\n            };\n        }\n        case ACTION_FETCHED_VALID_ADDR: {\n            const { isAddressValidated, isValidETHAddress } = action.payload;\n            return {\n                ...state,\n                isAddressValidated,\n                isValidETHAddress,\n            };\n        }\n        case ACTION_FETCHED_USER_FEES: {\n            const data = action.payload;\n            if (isEmpty(data)) {\n                return {\n                    ...state,\n                    userFees: {\n                        ...state.userFees,\n                        fetching: false,\n                    },\n                };\n            }\n            const hasMultiLevel = hasMultiLevelUsersFee(data);\n            return {\n                ...state,\n                userFees: {\n                    ...state.userFees,\n                    isFetched: true,\n                    isFetching: false,\n                    data: { ...data },\n                    hasMultiLevel,\n                    isMemoRequired: false,\n                },\n            };\n        }\n        case ACTION_FETCHING_USER_FEES: {\n            return {\n                ...state,\n                userFees: {\n                    ...state.userFees,\n                    isFetching: true,\n                },\n            };\n        }\n        case ACTION_FETCH_FAIL_USER_FEES: {\n            const prevIsMemoRequired = state?.userFees?.isMemoRequired;\n            return {\n                ...state,\n                userFees: {\n                    ...state.userFees,\n                    isFetching: false,\n                    isFetched: false,\n                    isMemoRequired: action?.payload || prevIsMemoRequired,\n                },\n            };\n        }\n        case ACTION_TOGGLE_FAST_FEE: {\n            const { fast2x, totalFee, totalFeeText, userFee, isUsedPRVFee } = action.payload;\n            const totalFeeField = isUsedPRVFee ? 'totalFeePrv' : 'totalFeePToken';\n            const totalFeeTextField = isUsedPRVFee ? 'totalFeePrvText' : 'totalFeePTokenText';\n            const userFeeField = isUsedPRVFee ? 'userFeePrv' : 'userFeePToken';\n            return {\n                ...state,\n                fast2x,\n                [totalFeeField]: totalFee,\n                [totalFeeTextField]: totalFeeText,\n                [userFeeField]: userFee,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default sendReducer;\n","import { WalletInstance } from 'incognito-js/build/web/browser';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport { ACTION_FETCHED, ACTION_LOAD_WALLET } from './Wallet.constant';\nimport { IPayloadInitWallet, IWalletReducer } from './Wallet.interface';\n\nconst initialState: IWalletReducer = {\n    mainnet: {\n        init: false,\n        ids: [],\n        walletId: -1,\n    },\n    testnet: {\n        init: false,\n        ids: [],\n        walletId: -1,\n    },\n    loaded: false,\n    wallet: {},\n};\n\nconst walletReducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case ACTION_FETCHED: {\n            const { mainnet, wallet, walletId }: IPayloadInitWallet = action.payload;\n            const field = mainnet ? 'mainnet' : 'testnet';\n            return {\n                ...state,\n                [field]: {\n                    ...state[field],\n                    init: true,\n                    walletId,\n                    ids: [...state[field].ids, walletId],\n                },\n                wallet: cloneDeep(wallet),\n                loaded: true,\n            };\n        }\n        case ACTION_LOAD_WALLET: {\n            const wallet: WalletInstance = action.payload;\n            return {\n                ...state,\n                loaded: true,\n                wallet,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nconst persistConfig = {\n    key: 'wallet',\n    storage,\n    whitelist: ['mainnet', 'testnet'],\n    stateReconciler: autoMergeLevel2,\n};\n\nexport default persistReducer(persistConfig, walletReducer);\n","import React from 'react';\nimport QrCode from 'src/components/QrCode';\nimport { Header } from 'src/components';\nimport { useLocation } from 'react-router-dom';\n\nconst AccountItemQRCode = React.memo(() => {\n    const location: any = useLocation();\n    const { title, desc } = location?.state;\n    return (\n        <div className=\"account-item-qrcode\">\n            <Header title={title} />\n            <QrCode\n                qrCodeProps={{\n                    value: desc,\n                    size: 175,\n                }}\n            />\n        </div>\n    );\n});\nexport default AccountItemQRCode;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from 'src/components';\nimport { ILanguage } from 'src/i18n';\nimport styled from 'styled-components';\nimport {\n    ListToken,\n    Token,\n    followedTokensIdsSelector,\n    actionSetSelectedToken,\n    totalShieldedTokensSelector,\n    ITotalShielded,\n} from 'src/module/Token';\nimport { route as routeAddToken } from 'src/module/Token/features/AddToken';\nimport { translateSelector } from '../Configs';\nimport withWallet from './Wallet.enhance';\n\nconst Styled = styled.div`\n    position: relative;\n    height: 485px;\n    .list-token {\n        height: 300px;\n        overflow: scroll;\n    }\n    .list-token .token-container {\n        :last-child {\n            margin-bottom: 0;\n        }\n    }\n    .total-shield {\n        > p {\n            :nth-child(2) {\n                margin-top: 15px;\n            }\n        }\n        .btn-container {\n            margin: 30px 0;\n            width: 100%;\n        }\n    }\n    .btn-add-coin {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n    }\n`;\n\nconst ListFollowToken = React.memo(() => {\n    const listFollowTokenIds = useSelector(followedTokensIdsSelector)(false);\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const handleSelectToken = (tokenId: string) => {\n        dispatch(actionSetSelectedToken(tokenId));\n        history.push('/token');\n    };\n    const renderItem = (tokenId: string) => (\n        <Token tokenId={tokenId} handleSelectToken={() => handleSelectToken(tokenId)} showBalance showAmount />\n    );\n    return <ListToken data={listFollowTokenIds} renderItem={renderItem} />;\n});\n\nconst TotalShield = React.memo(() => {\n    const totalShield: ITotalShielded = useSelector(totalShieldedTokensSelector);\n    const translate: ILanguage = useSelector(translateSelector);\n    const { btnShield } = translate.wallet.blockShield;\n    return (\n        <div className=\"total-shield\">\n            <p className=\"fs-avglarge fw-medium center-text\">{`$${totalShield.formatTotalAmountUSD}`}</p>\n            <Button title={btnShield} disabled />\n        </div>\n    );\n});\n\nconst AddCoin = React.memo(() => {\n    const translate: ILanguage = useSelector(translateSelector);\n    const { wallet } = translate;\n    return (\n        <Link className=\"btn-add-coin fw-medium\" to={routeAddToken}>\n            {wallet.addCoin}\n        </Link>\n    );\n});\n\nconst Wallet = () => {\n    return (\n        <Styled>\n            <TotalShield />\n            <ListFollowToken />\n            <AddCoin />\n        </Styled>\n    );\n};\n\nexport default withWallet(React.memo(Wallet));\n","import { IObject } from 'src/utils';\nimport en from './en';\nimport vi from './vi';\n\nexport * from './interface';\n\nexport const translateByLanguage = (language: string) => {\n    switch (language) {\n        case 'en':\n            return en;\n        case 'vi':\n            return vi;\n        default:\n            return en;\n    }\n};\n\nexport const languages = { en };\n\nexport const isoLangs: IObject = {\n    ab: {\n        name: 'Abkhaz',\n        nativeName: 'аҧсуа',\n    },\n    aa: {\n        name: 'Afar',\n        nativeName: 'Afaraf',\n    },\n    af: {\n        name: 'Afrikaans',\n        nativeName: 'Afrikaans',\n    },\n    ak: {\n        name: 'Akan',\n        nativeName: 'Akan',\n    },\n    sq: {\n        name: 'Albanian',\n        nativeName: 'Shqip',\n    },\n    am: {\n        name: 'Amharic',\n        nativeName: 'አማርኛ',\n    },\n    ar: {\n        name: 'Arabic',\n        nativeName: 'العربية',\n    },\n    an: {\n        name: 'Aragonese',\n        nativeName: 'Aragonés',\n    },\n    hy: {\n        name: 'Armenian',\n        nativeName: 'Հայերեն',\n    },\n    as: {\n        name: 'Assamese',\n        nativeName: 'অসমীয়া',\n    },\n    av: {\n        name: 'Avaric',\n        nativeName: 'авар мацӀ, магӀарул мацӀ',\n    },\n    ae: {\n        name: 'Avestan',\n        nativeName: 'avesta',\n    },\n    ay: {\n        name: 'Aymara',\n        nativeName: 'aymar aru',\n    },\n    az: {\n        name: 'Azerbaijani',\n        nativeName: 'azərbaycan dili',\n    },\n    bm: {\n        name: 'Bambara',\n        nativeName: 'bamanankan',\n    },\n    ba: {\n        name: 'Bashkir',\n        nativeName: 'башҡорт теле',\n    },\n    eu: {\n        name: 'Basque',\n        nativeName: 'euskara, euskera',\n    },\n    be: {\n        name: 'Belarusian',\n        nativeName: 'Беларуская',\n    },\n    bn: {\n        name: 'Bengali',\n        nativeName: 'বাংলা',\n    },\n    bh: {\n        name: 'Bihari',\n        nativeName: 'भोजपुरी',\n    },\n    bi: {\n        name: 'Bislama',\n        nativeName: 'Bislama',\n    },\n    bs: {\n        name: 'Bosnian',\n        nativeName: 'bosanski jezik',\n    },\n    br: {\n        name: 'Breton',\n        nativeName: 'brezhoneg',\n    },\n    bg: {\n        name: 'Bulgarian',\n        nativeName: 'български език',\n    },\n    my: {\n        name: 'Burmese',\n        nativeName: 'ဗမာစာ',\n    },\n    ca: {\n        name: 'Catalan; Valencian',\n        nativeName: 'Català',\n    },\n    ch: {\n        name: 'Chamorro',\n        nativeName: 'Chamoru',\n    },\n    ce: {\n        name: 'Chechen',\n        nativeName: 'нохчийн мотт',\n    },\n    ny: {\n        name: 'Chichewa; Chewa; Nyanja',\n        nativeName: 'chiCheŵa, chinyanja',\n    },\n    zh: {\n        name: 'Chinese',\n        nativeName: '中文 (Zhōngwén), 汉语, 漢語',\n    },\n    cv: {\n        name: 'Chuvash',\n        nativeName: 'чӑваш чӗлхи',\n    },\n    kw: {\n        name: 'Cornish',\n        nativeName: 'Kernewek',\n    },\n    co: {\n        name: 'Corsican',\n        nativeName: 'corsu, lingua corsa',\n    },\n    cr: {\n        name: 'Cree',\n        nativeName: 'ᓀᐦᐃᔭᐍᐏᐣ',\n    },\n    hr: {\n        name: 'Croatian',\n        nativeName: 'hrvatski',\n    },\n    cs: {\n        name: 'Czech',\n        nativeName: 'česky, čeština',\n    },\n    da: {\n        name: 'Danish',\n        nativeName: 'dansk',\n    },\n    dv: {\n        name: 'Divehi; Dhivehi; Maldivian;',\n        nativeName: 'ދިވެހި',\n    },\n    nl: {\n        name: 'Dutch',\n        nativeName: 'Nederlands, Vlaams',\n    },\n    en: {\n        name: 'English',\n        nativeName: 'English',\n    },\n    eo: {\n        name: 'Esperanto',\n        nativeName: 'Esperanto',\n    },\n    et: {\n        name: 'Estonian',\n        nativeName: 'eesti, eesti keel',\n    },\n    ee: {\n        name: 'Ewe',\n        nativeName: 'Eʋegbe',\n    },\n    fo: {\n        name: 'Faroese',\n        nativeName: 'føroyskt',\n    },\n    fj: {\n        name: 'Fijian',\n        nativeName: 'vosa Vakaviti',\n    },\n    fi: {\n        name: 'Finnish',\n        nativeName: 'suomi, suomen kieli',\n    },\n    fr: {\n        name: 'French',\n        nativeName: 'français, langue française',\n    },\n    ff: {\n        name: 'Fula; Fulah; Pulaar; Pular',\n        nativeName: 'Fulfulde, Pulaar, Pular',\n    },\n    gl: {\n        name: 'Galician',\n        nativeName: 'Galego',\n    },\n    ka: {\n        name: 'Georgian',\n        nativeName: 'ქართული',\n    },\n    de: {\n        name: 'German',\n        nativeName: 'Deutsch',\n    },\n    el: {\n        name: 'Greek, Modern',\n        nativeName: 'Ελληνικά',\n    },\n    gn: {\n        name: 'Guaraní',\n        nativeName: 'Avañeẽ',\n    },\n    gu: {\n        name: 'Gujarati',\n        nativeName: 'ગુજરાતી',\n    },\n    ht: {\n        name: 'Haitian; Haitian Creole',\n        nativeName: 'Kreyòl ayisyen',\n    },\n    ha: {\n        name: 'Hausa',\n        nativeName: 'Hausa, هَوُسَ',\n    },\n    he: {\n        name: 'Hebrew (modern)',\n        nativeName: 'עברית',\n    },\n    hz: {\n        name: 'Herero',\n        nativeName: 'Otjiherero',\n    },\n    hi: {\n        name: 'Hindi',\n        nativeName: 'हिन्दी, हिंदी',\n    },\n    ho: {\n        name: 'Hiri Motu',\n        nativeName: 'Hiri Motu',\n    },\n    hu: {\n        name: 'Hungarian',\n        nativeName: 'Magyar',\n    },\n    ia: {\n        name: 'Interlingua',\n        nativeName: 'Interlingua',\n    },\n    id: {\n        name: 'Indonesian',\n        nativeName: 'Bahasa Indonesia',\n    },\n    ie: {\n        name: 'Interlingue',\n        nativeName: 'Originally called Occidental; then Interlingue after WWII',\n    },\n    ga: {\n        name: 'Irish',\n        nativeName: 'Gaeilge',\n    },\n    ig: {\n        name: 'Igbo',\n        nativeName: 'Asụsụ Igbo',\n    },\n    ik: {\n        name: 'Inupiaq',\n        nativeName: 'Iñupiaq, Iñupiatun',\n    },\n    io: {\n        name: 'Ido',\n        nativeName: 'Ido',\n    },\n    is: {\n        name: 'Icelandic',\n        nativeName: 'Íslenska',\n    },\n    it: {\n        name: 'Italian',\n        nativeName: 'Italiano',\n    },\n    iu: {\n        name: 'Inuktitut',\n        nativeName: 'ᐃᓄᒃᑎᑐᑦ',\n    },\n    ja: {\n        name: 'Japanese',\n        nativeName: '日本語 (にほんご／にっぽんご)',\n    },\n    jv: {\n        name: 'Javanese',\n        nativeName: 'basa Jawa',\n    },\n    kl: {\n        name: 'Kalaallisut, Greenlandic',\n        nativeName: 'kalaallisut, kalaallit oqaasii',\n    },\n    kn: {\n        name: 'Kannada',\n        nativeName: 'ಕನ್ನಡ',\n    },\n    kr: {\n        name: 'Kanuri',\n        nativeName: 'Kanuri',\n    },\n    ks: {\n        name: 'Kashmiri',\n        nativeName: 'कश्मीरी, كشميري‎',\n    },\n    kk: {\n        name: 'Kazakh',\n        nativeName: 'Қазақ тілі',\n    },\n    km: {\n        name: 'Khmer',\n        nativeName: 'ភាសាខ្មែរ',\n    },\n    ki: {\n        name: 'Kikuyu, Gikuyu',\n        nativeName: 'Gĩkũyũ',\n    },\n    rw: {\n        name: 'Kinyarwanda',\n        nativeName: 'Ikinyarwanda',\n    },\n    ky: {\n        name: 'Kirghiz, Kyrgyz',\n        nativeName: 'кыргыз тили',\n    },\n    kv: {\n        name: 'Komi',\n        nativeName: 'коми кыв',\n    },\n    kg: {\n        name: 'Kongo',\n        nativeName: 'KiKongo',\n    },\n    ko: {\n        name: 'Korean',\n        nativeName: '한국어 (韓國語), 조선말 (朝鮮語)',\n    },\n    ku: {\n        name: 'Kurdish',\n        nativeName: 'Kurdî, كوردی‎',\n    },\n    kj: {\n        name: 'Kwanyama, Kuanyama',\n        nativeName: 'Kuanyama',\n    },\n    la: {\n        name: 'Latin',\n        nativeName: 'latine, lingua latina',\n    },\n    lb: {\n        name: 'Luxembourgish, Letzeburgesch',\n        nativeName: 'Lëtzebuergesch',\n    },\n    lg: {\n        name: 'Luganda',\n        nativeName: 'Luganda',\n    },\n    li: {\n        name: 'Limburgish, Limburgan, Limburger',\n        nativeName: 'Limburgs',\n    },\n    ln: {\n        name: 'Lingala',\n        nativeName: 'Lingála',\n    },\n    lo: {\n        name: 'Lao',\n        nativeName: 'ພາສາລາວ',\n    },\n    lt: {\n        name: 'Lithuanian',\n        nativeName: 'lietuvių kalba',\n    },\n    lu: {\n        name: 'Luba-Katanga',\n        nativeName: '',\n    },\n    lv: {\n        name: 'Latvian',\n        nativeName: 'latviešu valoda',\n    },\n    gv: {\n        name: 'Manx',\n        nativeName: 'Gaelg, Gailck',\n    },\n    mk: {\n        name: 'Macedonian',\n        nativeName: 'македонски јазик',\n    },\n    mg: {\n        name: 'Malagasy',\n        nativeName: 'Malagasy fiteny',\n    },\n    ms: {\n        name: 'Malay',\n        nativeName: 'bahasa Melayu, بهاس ملايو‎',\n    },\n    ml: {\n        name: 'Malayalam',\n        nativeName: 'മലയാളം',\n    },\n    mt: {\n        name: 'Maltese',\n        nativeName: 'Malti',\n    },\n    mi: {\n        name: 'Māori',\n        nativeName: 'te reo Māori',\n    },\n    mr: {\n        name: 'Marathi (Marāṭhī)',\n        nativeName: 'मराठी',\n    },\n    mh: {\n        name: 'Marshallese',\n        nativeName: 'Kajin M̧ajeļ',\n    },\n    mn: {\n        name: 'Mongolian',\n        nativeName: 'монгол',\n    },\n    na: {\n        name: 'Nauru',\n        nativeName: 'Ekakairũ Naoero',\n    },\n    nv: {\n        name: 'Navajo, Navaho',\n        nativeName: 'Diné bizaad, Dinékʼehǰí',\n    },\n    nb: {\n        name: 'Norwegian Bokmål',\n        nativeName: 'Norsk bokmål',\n    },\n    nd: {\n        name: 'North Ndebele',\n        nativeName: 'isiNdebele',\n    },\n    ne: {\n        name: 'Nepali',\n        nativeName: 'नेपाली',\n    },\n    ng: {\n        name: 'Ndonga',\n        nativeName: 'Owambo',\n    },\n    nn: {\n        name: 'Norwegian Nynorsk',\n        nativeName: 'Norsk nynorsk',\n    },\n    no: {\n        name: 'Norwegian',\n        nativeName: 'Norsk',\n    },\n    ii: {\n        name: 'Nuosu',\n        nativeName: 'ꆈꌠ꒿ Nuosuhxop',\n    },\n    nr: {\n        name: 'South Ndebele',\n        nativeName: 'isiNdebele',\n    },\n    oc: {\n        name: 'Occitan',\n        nativeName: 'Occitan',\n    },\n    oj: {\n        name: 'Ojibwe, Ojibwa',\n        nativeName: 'ᐊᓂᔑᓈᐯᒧᐎᓐ',\n    },\n    cu: {\n        name: 'Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic',\n        nativeName: 'ѩзыкъ словѣньскъ',\n    },\n    om: {\n        name: 'Oromo',\n        nativeName: 'Afaan Oromoo',\n    },\n    or: {\n        name: 'Oriya',\n        nativeName: 'ଓଡ଼ିଆ',\n    },\n    os: {\n        name: 'Ossetian, Ossetic',\n        nativeName: 'ирон æвзаг',\n    },\n    pa: {\n        name: 'Panjabi, Punjabi',\n        nativeName: 'ਪੰਜਾਬੀ, پنجابی‎',\n    },\n    pi: {\n        name: 'Pāli',\n        nativeName: 'पाऴि',\n    },\n    fa: {\n        name: 'Persian',\n        nativeName: 'فارسی',\n    },\n    pl: {\n        name: 'Polish',\n        nativeName: 'polski',\n    },\n    ps: {\n        name: 'Pashto, Pushto',\n        nativeName: 'پښتو',\n    },\n    pt: {\n        name: 'Portuguese',\n        nativeName: 'Português',\n    },\n    qu: {\n        name: 'Quechua',\n        nativeName: 'Runa Simi, Kichwa',\n    },\n    rm: {\n        name: 'Romansh',\n        nativeName: 'rumantsch grischun',\n    },\n    rn: {\n        name: 'Kirundi',\n        nativeName: 'kiRundi',\n    },\n    ro: {\n        name: 'Romanian, Moldavian, Moldovan',\n        nativeName: 'română',\n    },\n    ru: {\n        name: 'Russian',\n        nativeName: 'русский язык',\n    },\n    sa: {\n        name: 'Sanskrit (Saṁskṛta)',\n        nativeName: 'संस्कृतम्',\n    },\n    sc: {\n        name: 'Sardinian',\n        nativeName: 'sardu',\n    },\n    sd: {\n        name: 'Sindhi',\n        nativeName: 'सिन्धी, سنڌي، سندھی‎',\n    },\n    se: {\n        name: 'Northern Sami',\n        nativeName: 'Davvisámegiella',\n    },\n    sm: {\n        name: 'Samoan',\n        nativeName: 'gagana faa Samoa',\n    },\n    sg: {\n        name: 'Sango',\n        nativeName: 'yângâ tî sängö',\n    },\n    sr: {\n        name: 'Serbian',\n        nativeName: 'српски језик',\n    },\n    gd: {\n        name: 'Scottish Gaelic; Gaelic',\n        nativeName: 'Gàidhlig',\n    },\n    sn: {\n        name: 'Shona',\n        nativeName: 'chiShona',\n    },\n    si: {\n        name: 'Sinhala, Sinhalese',\n        nativeName: 'සිංහල',\n    },\n    sk: {\n        name: 'Slovak',\n        nativeName: 'slovenčina',\n    },\n    sl: {\n        name: 'Slovene',\n        nativeName: 'slovenščina',\n    },\n    so: {\n        name: 'Somali',\n        nativeName: 'Soomaaliga, af Soomaali',\n    },\n    st: {\n        name: 'Southern Sotho',\n        nativeName: 'Sesotho',\n    },\n    es: {\n        name: 'Spanish; Castilian',\n        nativeName: 'español, castellano',\n    },\n    su: {\n        name: 'Sundanese',\n        nativeName: 'Basa Sunda',\n    },\n    sw: {\n        name: 'Swahili',\n        nativeName: 'Kiswahili',\n    },\n    ss: {\n        name: 'Swati',\n        nativeName: 'SiSwati',\n    },\n    sv: {\n        name: 'Swedish',\n        nativeName: 'svenska',\n    },\n    ta: {\n        name: 'Tamil',\n        nativeName: 'தமிழ்',\n    },\n    te: {\n        name: 'Telugu',\n        nativeName: 'తెలుగు',\n    },\n    tg: {\n        name: 'Tajik',\n        nativeName: 'тоҷикӣ, toğikī, تاجیکی‎',\n    },\n    th: {\n        name: 'Thai',\n        nativeName: 'ไทย',\n    },\n    ti: {\n        name: 'Tigrinya',\n        nativeName: 'ትግርኛ',\n    },\n    bo: {\n        name: 'Tibetan Standard, Tibetan, Central',\n        nativeName: 'བོད་ཡིག',\n    },\n    tk: {\n        name: 'Turkmen',\n        nativeName: 'Türkmen, Түркмен',\n    },\n    tl: {\n        name: 'Tagalog',\n        nativeName: 'Wikang Tagalog, ᜏᜒᜃᜅ᜔ ᜆᜄᜎᜓᜄ᜔',\n    },\n    tn: {\n        name: 'Tswana',\n        nativeName: 'Setswana',\n    },\n    to: {\n        name: 'Tonga (Tonga Islands)',\n        nativeName: 'faka Tonga',\n    },\n    tr: {\n        name: 'Turkish',\n        nativeName: 'Türkçe',\n    },\n    ts: {\n        name: 'Tsonga',\n        nativeName: 'Xitsonga',\n    },\n    tt: {\n        name: 'Tatar',\n        nativeName: 'татарча, tatarça, تاتارچا‎',\n    },\n    tw: {\n        name: 'Twi',\n        nativeName: 'Twi',\n    },\n    ty: {\n        name: 'Tahitian',\n        nativeName: 'Reo Tahiti',\n    },\n    ug: {\n        name: 'Uighur, Uyghur',\n        nativeName: 'Uyƣurqə, ئۇيغۇرچە‎',\n    },\n    uk: {\n        name: 'Ukrainian',\n        nativeName: 'українська',\n    },\n    ur: {\n        name: 'Urdu',\n        nativeName: 'اردو',\n    },\n    uz: {\n        name: 'Uzbek',\n        nativeName: 'zbek, Ўзбек, أۇزبېك‎',\n    },\n    ve: {\n        name: 'Venda',\n        nativeName: 'Tshivenḓa',\n    },\n    vi: {\n        name: 'Vietnamese',\n        nativeName: 'Tiếng Việt',\n    },\n    vo: {\n        name: 'Volapük',\n        nativeName: 'Volapük',\n    },\n    wa: {\n        name: 'Walloon',\n        nativeName: 'Walon',\n    },\n    cy: {\n        name: 'Welsh',\n        nativeName: 'Cymraeg',\n    },\n    wo: {\n        name: 'Wolof',\n        nativeName: 'Wollof',\n    },\n    fy: {\n        name: 'Western Frisian',\n        nativeName: 'Frysk',\n    },\n    xh: {\n        name: 'Xhosa',\n        nativeName: 'isiXhosa',\n    },\n    yi: {\n        name: 'Yiddish',\n        nativeName: 'ייִדיש',\n    },\n    yo: {\n        name: 'Yoruba',\n        nativeName: 'Yorùbá',\n    },\n    za: {\n        name: 'Zhuang, Chuang',\n        nativeName: 'Saɯ cueŋƅ, Saw cuengh',\n    },\n};\n\nexport const languagesSupport = () =>\n    Object.keys(languages).map((code) => ({\n        ...isoLangs[code],\n        code,\n    }));\n","export { default as Toast } from './Toast';\nexport * from './Toast.actions';\nexport * from './Toast.constant';\nexport * from './Toast.interface';\nexport * from './Toast.reducer';\nexport * from './Toast.selector';\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { MdError, MdWarning, MdInfo, MdClose } from 'react-icons/md';\nimport { COLORS, FONT_SIZES } from 'src/styles';\nimport { toastSelector } from './Toast.selector';\nimport { TOAST_CONFIGS, TOAST_CONFIGS_CLASSNAME } from './Toast.reducer';\nimport { actionToggleToast } from './Toast.actions';\n\nconst Styled = styled.div`\n    position: absolute;\n    right: 15px;\n    left: 15px;\n    top: 10px;\n    visibility: hidden;\n    padding: 15px;\n    z-index: 1;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    border-radius: 10px;\n    &.show {\n        visibility: visible;\n        animation: fadeInDown 0.5s, fadeOutUp 0.5s 2.5s;\n        background-color: ${COLORS.colorGreyLight};\n    }\n    &.success {\n        color: ${COLORS.green};\n    }\n    &.error {\n        color: ${COLORS.red};\n    }\n    &.warning {\n        color: ${COLORS.orange};\n    }\n    > p.desc {\n        font-size: ${FONT_SIZES.small}px;\n        line-height: ${FONT_SIZES.small + 3}px;\n        font-weight: 200;\n        margin-left: 10px;\n    }\n    .close-icon {\n        position: absolute;\n        top: 5px;\n        right: 5px;\n        cursor: pointer;\n    }\n`;\n\nconst Toast = () => {\n    const dispatch = useDispatch();\n    const { value, type, toggle } = useSelector(toastSelector);\n    const className = `${TOAST_CONFIGS_CLASSNAME[String(type)]} ${toggle ? 'show' : ''}`;\n    const getIcons = () => {\n        switch (type) {\n            case TOAST_CONFIGS.error:\n                return <MdError size={16} />;\n            case TOAST_CONFIGS.success:\n                return <MdInfo size={16} />;\n            case TOAST_CONFIGS.warning:\n                return <MdWarning size={16} />;\n            default:\n                return <MdInfo size={16} />;\n        }\n    };\n    const handleCloseToast = () => dispatch(actionToggleToast({ toggle: false }));\n\n    React.useEffect(() => {\n        if (toggle) {\n            setTimeout(() => {\n                handleCloseToast();\n            }, 3000);\n        }\n    }, [toggle]);\n    return (\n        <Styled className={className}>\n            {getIcons()}\n            <p className=\"desc\">{value}</p>\n            <MdClose onClick={handleCloseToast} size={18} className=\"close-icon\" />\n        </Styled>\n    );\n};\n\nexport default Toast;\n","import axios from 'axios';\nimport { CustomError, ErrorCode, ExHandler } from './exception';\n\nconst HEADERS = { 'Content-Type': 'application/json' };\nconst TIMEOUT = 20000;\nlet currentAccessToken = '';\n\nconst instance = axios.create({\n    timeout: TIMEOUT,\n    headers: {\n        ...HEADERS,\n        Authorization: '',\n    },\n});\nlet pendingSubscribers = [];\nlet isAlreadyFetchingAccessToken = false;\n\nfunction onAccessTokenFetched(accessToken) {\n    pendingSubscribers = pendingSubscribers.filter((callback) => callback(accessToken));\n}\n\nfunction addSubscriber(callback) {\n    pendingSubscribers.push(callback);\n}\n\n// Add a request interceptor\ninstance.interceptors.request.use(\n    (config) => {\n        return {\n            ...config,\n            headers: {\n                ...config.headers,\n                Authorization: `Bearer ${currentAccessToken}`,\n            },\n        };\n    },\n    (error) => {\n        return Promise.reject(error);\n    },\n);\n\nexport const setTokenHeader = (token) => {\n    try {\n        currentAccessToken = token;\n        axios.defaults.headers.Authorization = `Bearer ${token}`;\n    } catch {\n        throw new Error('Can not set token request');\n    }\n};\n\ninstance.interceptors.response.use(\n    (res) => {\n        const result = res?.data?.Result;\n        return Promise.resolve(result);\n    },\n    (errorData) => {\n        const errResponse = errorData?.response;\n        const originalRequest = errorData?.config;\n        // can not get response, alert to user\n        if (errorData?.isAxiosError && !errResponse) {\n            return new ExHandler(new CustomError(ErrorCode.network_make_request_failed)).throw();\n        }\n\n        // Unauthorized\n        if (errResponse?.status === 401) {\n            console.log('Token was expired');\n            if (!isAlreadyFetchingAccessToken) {\n                isAlreadyFetchingAccessToken = true;\n                if (typeof global.login === 'function') {\n                    global.login().then((token) => {\n                        isAlreadyFetchingAccessToken = false;\n                        onAccessTokenFetched(token);\n                    });\n                } else {\n                    console.debug('Token was expired, but can not re-new it!');\n                }\n            }\n\n            const retryOriginalRequest = new Promise((resolve) => {\n                addSubscriber((accessToken) => {\n                    originalRequest.headers.Authorization = `Bearer ${accessToken}`;\n                    setTokenHeader(accessToken);\n                    resolve(instance(originalRequest));\n                });\n            });\n\n            return retryOriginalRequest;\n        }\n\n        // get response of error\n        // wrap the error with CustomError to custom error message, or logging\n        const data = errResponse?.data;\n        if (data && data.Error) {\n            throw new CustomError(data.Error?.Code, {\n                name: CustomError.TYPES.API_ERROR,\n                message: data.Error?.Message,\n            });\n        }\n\n        return Promise.reject(errorData);\n    },\n);\n\nexport const setRenewToken = (fn) => {\n    if (typeof fn !== 'function') throw new Error('setRenewToken must be recieved a function');\n};\n\nexport default instance;\n","import React from 'react';\nimport { compose } from 'recompose';\n\ninterface IProps {}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: IProps) => {\n    return <WrappedComponent {...props} />;\n};\n\nexport default compose<IProps, any>(enhance);\n","import styled from 'styled-components';\n\nexport const Styled = styled.div``;\n","import styled from 'styled-components';\n\nexport const Styled = styled.div``;\n","import styled from 'styled-components';\n\nexport const Styled = styled.div``;\n","import React from 'react';\nimport { compose } from 'recompose';\n\ninterface IProps {}\n\nconst enhance = (WrappedComponent: React.FunctionComponent) => (props: IProps) => {\n    return <WrappedComponent {...props} />;\n};\n\nexport default compose<IProps, any>(enhance);\n","import styled from 'styled-components';\n\nexport const Styled = styled.div``;\n","import styled from 'styled-components';\n\nexport const Styled = styled.div``;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { themeSelector } from 'src/module/Configs';\nimport { COLORS, IGlobalStyle } from 'src/styles';\nimport styled from 'styled-components';\nimport { modalSelector } from './Modal.selector';\n\nconst Styled = styled.div`\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 10000;\n    display: flex;\n    justify-content: center;\n    background-color: ${COLORS.overlayBlackLight};\n    .modal-content-wrapper {\n        position: absolute;\n        min-width: ${(props: IGlobalStyle) => props.theme.minWidth};\n        max-width: ${(props: IGlobalStyle) => props.theme.maxWidth};\n        width: ${(props: IGlobalStyle) => props.theme.width};\n        height: ${(props: IGlobalStyle) => props.theme.height};\n        background: ${(props: IGlobalStyle) => props.theme.body};\n        padding: 30px;\n    }\n`;\n\nconst Modal = () => {\n    const modalState = useSelector(modalSelector);\n    const theme = useSelector(themeSelector);\n    const { data, visible } = modalState;\n    if (!visible) {\n        return null;\n    }\n    return (\n        <Styled className=\"modal-wrapper\" theme={theme}>\n            <div className=\"modal-content-wrapper\">{data}</div>\n        </Styled>\n    );\n};\n\nexport default React.memo(Modal);\n","import { ACTION_TOGGLE_MODAL } from './Modal.constant';\n\nexport const actionToggleModal = ({ data = null, visible = false }: { data?: any; visible?: boolean }) => ({\n    type: ACTION_TOGGLE_MODAL,\n    payload: { data, visible },\n});\n","import { http } from 'src/http';\nimport { IApiEstimateUserFees, IApiGenCenUnShieldAddr, IApiUnShield, IApiUpdatePTokenFee } from './Send.interface';\n\nexport const apiGetEstimateFeeFromChain = (\n    apiURL: string,\n    data: {\n        Prv: number;\n        TokenID: string;\n    },\n) => http.post(`${apiURL}/chain/estimatefee`, data);\n\nexport const apiCheckIfValidAddressETH = (apiURL: string, address: string) =>\n    http.get(`${apiURL}/eta/is-eth-account?address=${address}`);\n\nexport const apiCheckValidAddress = (apiURL: string, address: string, currencyType: number) =>\n    http.get(`${apiURL}/ota/valid/${currencyType}/${address}`);\n\nexport const apiGenCenUnShieldAddr = (apiURL: string, data: IApiGenCenUnShieldAddr) =>\n    http.post(`${apiURL}/ota/generate`, data);\n\nexport const apiUnShield = (apiURL: string, data: IApiUnShield) => http.post(`${apiURL}/eta/add-tx-withdraw`, data);\n\nexport const apiUpdatePTokenFee = (apiURL: string, data: IApiUpdatePTokenFee) =>\n    http.post(`${apiURL}/ota/update-fee`, data);\n\nexport const apiEstimateUserFees = (apiURL: string, data: IApiEstimateUserFees) =>\n    http.post(`${apiURL}/eta/estimate-fees`, data);\n","import styled from 'styled-components';\n\nexport const Styled = styled.div``;\n","import styled from 'styled-components';\n\nexport const Styled = styled.div``;\n","import styled from 'styled-components';\n\nexport const Styled = styled.div`\n    padding-bottom: 50px;\n`;\n","import styled from 'styled-components';\n\nexport const Styled = styled.div``;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { ENVS } from 'src/configs';\n\ninterface IProps {\n    onHandleChecked: () => any;\n    label: string;\n    checked: boolean;\n}\n\nconst Styled = styled.button`\n    .icon {\n        margin-right: 5px;\n        width: 18px;\n        height: 18px;\n    }\n`;\n\nconst Checkbox = (props: IProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n    const { onHandleChecked, label, checked } = props;\n    return (\n        <Styled className=\"checkbox flex\" onClick={onHandleChecked}>\n            <div className=\"icon\">\n                <img\n                    src={`${ENVS.REACT_APP_DOMAIN_URL}/images/icons/${!checked ? 'checkbox' : 'checked-box'}.png`}\n                    alt=\"\"\n                    className=\"icon-abs\"\n                />\n            </div>\n            {label && <p className=\"fw-medium\">{label}</p>}\n        </Styled>\n    );\n};\n\nCheckbox.propTypes = {\n    onHandleChecked: PropTypes.func,\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport Spinner from 'react-bootstrap/esm/Spinner';\nimport styled from 'styled-components';\n\ninterface IProps {\n    animation: 'grow' | 'border';\n}\n\nconst Styled = styled.div`\n    &.spinner-container {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n`;\n\nconst SpinnerContainer = (props: IProps) => {\n    const { animation } = props;\n    return (\n        <Styled className=\"spinner-container\">\n            <Spinner animation={animation || 'grow'} />\n        </Styled>\n    );\n};\n\nexport default SpinnerContainer;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { themeSelector } from 'src/module/Configs';\nimport { COLORS, ITheme } from 'src/styles';\nimport styled from 'styled-components';\n\ninterface IProps {\n    customContent?: React.ElementType;\n    title: string;\n    disabled?: boolean;\n}\n\nconst Styled = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 20px;\n    height: 40px;\n    margin: auto;\n    padding: 0 11px;\n    background-color: ${(props: { theme: ITheme }) => props.theme.button};\n    color: ${(props: { theme: ITheme }) => props.theme.textButton};\n    width: 100%;\n    p.btn-title {\n    }\n    &.btn-disabled {\n        background-color: ${COLORS.colorGreyLight};\n    }\n`;\n\nconst Button = (props: IProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n    const { customContent, title, disabled, className = '', ...rest } = props;\n    const theme = useSelector(themeSelector);\n    return (\n        <Styled\n            theme={theme}\n            className={`${className} btn-container ${disabled ? 'btn-disabled' : ''} fw-regular fs-regular`}\n            {...rest}\n        >\n            {customContent || title}\n        </Styled>\n    );\n};\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n    toggleValue?: boolean;\n    onToggle?: () => void;\n}\n\nconst Styled = styled.div`\n    cursor: pointer;\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n    input {\n        opacity: 0;\n        width: 0;\n        height: 0;\n    }\n    .slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #ccc;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n    }\n    .slider:before {\n        position: absolute;\n        content: '';\n        height: 26px;\n        width: 26px;\n        left: 4px;\n        bottom: 4px;\n        background-color: white;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n    }\n    input:checked + .slider {\n        background-color: #2196f3;\n    }\n    input:focus + .slider {\n        box-shadow: 0 0 1px #2196f3;\n    }\n    input:checked + .slider:before {\n        -webkit-transform: translateX(26px);\n        -ms-transform: translateX(26px);\n        transform: translateX(26px);\n    }\n    /* Rounded sliders */\n    .slider.round {\n        border-radius: 34px;\n    }\n    .slider.round:before {\n        border-radius: 50%;\n    }\n`;\n\nconst ToggleSwitch = (props: IProps) => {\n    const { toggleValue, onToggle } = props;\n    const handleOnClick = () => {\n        if (typeof onToggle === 'function') {\n            onToggle();\n        }\n    };\n    return (\n        <Styled className=\"switch\" onClick={handleOnClick}>\n            <input type=\"checkbox\" readOnly checked={!!toggleValue} />\n            <span className=\"slider round\" />\n        </Styled>\n    );\n};\n\nexport default ToggleSwitch;\n","import { ILanguage } from './interface';\n\nconst en: ILanguage = {\n    general: {\n        copied: 'Copied',\n        copy: 'Copy',\n    },\n    home: {\n        title: 'Incognito Wallet',\n    },\n    keychain: {\n        headerTitle: 'Keychain',\n        yourKeychain: 'Your keychains',\n    },\n    wallet: {\n        headerTitle: 'Assets',\n        selectAccount: {\n            headerTitle: 'Search keychains',\n        },\n        addCoin: 'Add a coin +',\n        error: {\n            walletNotExisted: 'Wallet is not exist',\n        },\n        blockShield: {\n            totalShielded: 'Shielded Balance',\n            btnShield: 'Shield my crypto',\n        },\n    },\n    token: {\n        followToken: {\n            headerTitle: 'Add a coin',\n            addManually: 'Add manually +',\n            dontSeeYourCoin: `Don't see your coin?`,\n        },\n        addToken: {\n            headerTitle: 'Add a coin',\n            added: 'Added',\n        },\n        detail: {\n            headerTitle: '',\n            btnSend: 'Send',\n            btnReceive: 'Receive',\n        },\n        infoToken: {\n            headerTitle: 'Coin info',\n        },\n        error: {\n            tokenIdRequired: 'Token id is required',\n        },\n    },\n    account: {\n        create: {\n            title: 'Create',\n            desc: 'Create a new keychain',\n        },\n        import: {\n            title: 'Import',\n            desc: 'Import an existing keychain',\n        },\n        backup: {\n            title: 'Back up',\n            desc: 'Backup your private keys',\n            headerTitle: 'Backup your private keys',\n            copyAll: 'Copy all',\n            copied: 'Copied',\n        },\n        accountDetail: {\n            title1: 'Your incognito address',\n            title2: 'Private key',\n            title3: 'Public key',\n            title4: 'Readonly key',\n            title5: 'Validator key',\n            title6: 'Bls key',\n            title7: 'Device token',\n            title8: 'Shard',\n            keychain: 'keychain',\n            delete: 'Delete',\n        },\n        receive: {\n            headerTitle: 'Receive anonymously',\n            hook: `This is your address.\\nUse it to receive any cryptocurrency\\nfrom another Incognito address.`,\n        },\n        error: {\n            create: 'Keychain was not created! Please try again.',\n            import: 'Import keychain failed, please try again.',\n            accountNotExisted: 'Account is not exist',\n        },\n        success: {\n            create: 'Create keychain successful.',\n            import: 'Import keychain successful.',\n        },\n    },\n    setting: {\n        headerTitle: 'Settings',\n        network: {\n            title: 'Network',\n        },\n        dev: {\n            title: 'Dev Sections',\n            homeConfigs: 'Use staging home configs',\n        },\n        addressBook: {\n            title: 'Address Book',\n            desc: 'Manage your saved addresses',\n        },\n        keychain: {\n            title: 'Keychain',\n            desc: 'Manage your keychains',\n        },\n    },\n    send: {\n        headerTitle: 'Send',\n        amount: 'Enter amount',\n        toAddress: 'To',\n        incognitoAddress: 'Enter address',\n        fee: 'Fee',\n        memo: 'Memo',\n        placeholderMemo: 'Add a memo (optional)',\n        balance: 'Balance',\n        confirm: {\n            headerTitle: 'Back',\n            txId: 'TxID',\n            fee: 'Fee',\n            time: 'Time',\n            toAddress: 'To address',\n            amount: 'Amount',\n            sent: 'Sent.',\n        },\n    },\n    history: {\n        headerTitle: 'History',\n        id: 'ID',\n        fee: 'Fee',\n        status: 'Status',\n        time: 'Time',\n        toAddress: 'To address',\n        coin: 'Coin',\n    },\n    addressBook: {\n        headerTitle: 'Address book',\n        name: 'Name',\n        address: 'Address',\n        networkName: 'Network',\n        btnCreate: 'Create',\n        btnEdit: 'Edit',\n        btnRemove: 'Remove',\n        msgExist: 'Address book is exist!',\n        keychains: 'Your keychains',\n        incognito: 'Incognito addresses',\n        external: 'External addresses',\n        headerTitleCreate: 'Create',\n        headerTitleEdit: 'Edit',\n    },\n};\n\nexport default en;\n","var map = {\n\t\"./Account/Account.route.ts\": 156,\n\t\"./Account/features/AccountDetail/AccountDetail.route.ts\": 157,\n\t\"./Account/features/AccountItem/AccountItem.route.ts\": 110,\n\t\"./Account/features/BackupAccount/BackupAccount.route.ts\": 158,\n\t\"./Account/features/CreateAccount/CreateAccount.route.ts\": 159,\n\t\"./Account/features/ImportAccount/ImportAccount.route.ts\": 160,\n\t\"./Account/features/Receive/Receive.route.ts\": 161,\n\t\"./Account/features/SelectAccount/SelectAccount.route.ts\": 201,\n\t\"./AddressBook/AddressBook.route.ts\": 162,\n\t\"./AddressBook/features/Create/Create.route.ts\": 305,\n\t\"./Configs/Configs.route.ts\": 163,\n\t\"./History/History.route.ts\": 164,\n\t\"./Keychain/Keychain.route.ts\": 165,\n\t\"./Send/Send.route.ts\": 166,\n\t\"./Send/features/ConfirmTx/ConfirmTx.route.ts\": 167,\n\t\"./Setting/Setting.route.ts\": 168,\n\t\"./Setting/features/Network/Network.route.ts\": 169,\n\t\"./Token/features/AddToken/AddToken.route.ts\": 170,\n\t\"./Token/features/Detail/Detail.route.ts\": 171,\n\t\"./Token/features/TokenInfo/TokenInfo.route.ts\": 172,\n\t\"./Wallet/Wallet.route.ts\": 109\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 476;","var map = {\n\t\".\": 123,\n\t\"./\": 123,\n\t\"./Account\": 21,\n\t\"./Account/\": 21,\n\t\"./Account/Account\": 173,\n\t\"./Account/Account.actions\": 221,\n\t\"./Account/Account.actions.ts\": 221,\n\t\"./Account/Account.constant\": 38,\n\t\"./Account/Account.constant.ts\": 38,\n\t\"./Account/Account.enhance\": 392,\n\t\"./Account/Account.enhance.tsx\": 392,\n\t\"./Account/Account.interface\": 246,\n\t\"./Account/Account.interface.ts\": 246,\n\t\"./Account/Account.reducer\": 321,\n\t\"./Account/Account.reducer.ts\": 321,\n\t\"./Account/Account.route\": 156,\n\t\"./Account/Account.route.ts\": 156,\n\t\"./Account/Account.selector\": 50,\n\t\"./Account/Account.selector.ts\": 50,\n\t\"./Account/Account.styled\": 393,\n\t\"./Account/Account.styled.ts\": 393,\n\t\"./Account/Account.tsx\": 173,\n\t\"./Account/Account.useEffect\": 247,\n\t\"./Account/Account.useEffect.ts\": 247,\n\t\"./Account/features/AccountDetail\": 111,\n\t\"./Account/features/AccountDetail/\": 111,\n\t\"./Account/features/AccountDetail/AccountDetail\": 186,\n\t\"./Account/features/AccountDetail/AccountDetail.route\": 157,\n\t\"./Account/features/AccountDetail/AccountDetail.route.ts\": 157,\n\t\"./Account/features/AccountDetail/AccountDetail.tsx\": 186,\n\t\"./Account/features/AccountDetail/index\": 111,\n\t\"./Account/features/AccountDetail/index.ts\": 111,\n\t\"./Account/features/AccountItem\": 52,\n\t\"./Account/features/AccountItem/\": 52,\n\t\"./Account/features/AccountItem/AccountItem\": 231,\n\t\"./Account/features/AccountItem/AccountItem.modal\": 326,\n\t\"./Account/features/AccountItem/AccountItem.modal.tsx\": 326,\n\t\"./Account/features/AccountItem/AccountItem.route\": 110,\n\t\"./Account/features/AccountItem/AccountItem.route.ts\": 110,\n\t\"./Account/features/AccountItem/AccountItem.tsx\": 231,\n\t\"./Account/features/AccountItem/index\": 52,\n\t\"./Account/features/AccountItem/index.ts\": 52,\n\t\"./Account/features/BackupAccount\": 248,\n\t\"./Account/features/BackupAccount/\": 248,\n\t\"./Account/features/BackupAccount/BackupAccount\": 191,\n\t\"./Account/features/BackupAccount/BackupAccount.route\": 158,\n\t\"./Account/features/BackupAccount/BackupAccount.route.ts\": 158,\n\t\"./Account/features/BackupAccount/BackupAccount.styled\": 394,\n\t\"./Account/features/BackupAccount/BackupAccount.styled.ts\": 394,\n\t\"./Account/features/BackupAccount/BackupAccount.tsx\": 191,\n\t\"./Account/features/BackupAccount/index\": 248,\n\t\"./Account/features/BackupAccount/index.ts\": 248,\n\t\"./Account/features/CreateAccount\": 249,\n\t\"./Account/features/CreateAccount/\": 249,\n\t\"./Account/features/CreateAccount/CreateAccount\": 192,\n\t\"./Account/features/CreateAccount/CreateAccount.enhance\": 268,\n\t\"./Account/features/CreateAccount/CreateAccount.enhance.tsx\": 268,\n\t\"./Account/features/CreateAccount/CreateAccount.route\": 159,\n\t\"./Account/features/CreateAccount/CreateAccount.route.ts\": 159,\n\t\"./Account/features/CreateAccount/CreateAccount.styled\": 269,\n\t\"./Account/features/CreateAccount/CreateAccount.styled.ts\": 269,\n\t\"./Account/features/CreateAccount/CreateAccount.tsx\": 192,\n\t\"./Account/features/CreateAccount/index\": 249,\n\t\"./Account/features/CreateAccount/index.ts\": 249,\n\t\"./Account/features/ImportAccount\": 250,\n\t\"./Account/features/ImportAccount/\": 250,\n\t\"./Account/features/ImportAccount/ImportAccount\": 193,\n\t\"./Account/features/ImportAccount/ImportAccount.enhance\": 286,\n\t\"./Account/features/ImportAccount/ImportAccount.enhance.tsx\": 286,\n\t\"./Account/features/ImportAccount/ImportAccount.route\": 160,\n\t\"./Account/features/ImportAccount/ImportAccount.route.ts\": 160,\n\t\"./Account/features/ImportAccount/ImportAccount.styled\": 270,\n\t\"./Account/features/ImportAccount/ImportAccount.styled.ts\": 270,\n\t\"./Account/features/ImportAccount/ImportAccount.tsx\": 193,\n\t\"./Account/features/ImportAccount/index\": 250,\n\t\"./Account/features/ImportAccount/index.ts\": 250,\n\t\"./Account/features/Receive\": 126,\n\t\"./Account/features/Receive/\": 126,\n\t\"./Account/features/Receive/Receive\": 183,\n\t\"./Account/features/Receive/Receive.route\": 161,\n\t\"./Account/features/Receive/Receive.route.ts\": 161,\n\t\"./Account/features/Receive/Receive.tsx\": 183,\n\t\"./Account/features/Receive/index\": 126,\n\t\"./Account/features/Receive/index.tsx\": 126,\n\t\"./Account/features/SelectAccount\": 99,\n\t\"./Account/features/SelectAccount/\": 99,\n\t\"./Account/features/SelectAccount/SelectAccount\": 180,\n\t\"./Account/features/SelectAccount/SelectAccount.btn\": 232,\n\t\"./Account/features/SelectAccount/SelectAccount.btn.tsx\": 232,\n\t\"./Account/features/SelectAccount/SelectAccount.route\": 201,\n\t\"./Account/features/SelectAccount/SelectAccount.route.ts\": 201,\n\t\"./Account/features/SelectAccount/SelectAccount.tsx\": 180,\n\t\"./Account/features/SelectAccount/index\": 99,\n\t\"./Account/features/SelectAccount/index.ts\": 99,\n\t\"./Account/index\": 21,\n\t\"./Account/index.ts\": 21,\n\t\"./AddressBook\": 66,\n\t\"./AddressBook/\": 66,\n\t\"./AddressBook/AddressBook\": 184,\n\t\"./AddressBook/AddressBook.actions\": 128,\n\t\"./AddressBook/AddressBook.actions.ts\": 128,\n\t\"./AddressBook/AddressBook.constant\": 57,\n\t\"./AddressBook/AddressBook.constant.ts\": 57,\n\t\"./AddressBook/AddressBook.enhance\": 265,\n\t\"./AddressBook/AddressBook.enhance.tsx\": 265,\n\t\"./AddressBook/AddressBook.interface\": 236,\n\t\"./AddressBook/AddressBook.interface.ts\": 236,\n\t\"./AddressBook/AddressBook.reducer\": 322,\n\t\"./AddressBook/AddressBook.reducer.ts\": 322,\n\t\"./AddressBook/AddressBook.route\": 162,\n\t\"./AddressBook/AddressBook.route.ts\": 162,\n\t\"./AddressBook/AddressBook.selector\": 101,\n\t\"./AddressBook/AddressBook.selector.ts\": 101,\n\t\"./AddressBook/AddressBook.styled\": 395,\n\t\"./AddressBook/AddressBook.styled.ts\": 395,\n\t\"./AddressBook/AddressBook.tsx\": 184,\n\t\"./AddressBook/AddressBook.utils\": 62,\n\t\"./AddressBook/AddressBook.utils.ts\": 62,\n\t\"./AddressBook/features/Create\": 251,\n\t\"./AddressBook/features/Create/\": 251,\n\t\"./AddressBook/features/Create/Create\": 194,\n\t\"./AddressBook/features/Create/Create.enhance\": 271,\n\t\"./AddressBook/features/Create/Create.enhance.tsx\": 271,\n\t\"./AddressBook/features/Create/Create.route\": 305,\n\t\"./AddressBook/features/Create/Create.route.ts\": 305,\n\t\"./AddressBook/features/Create/Create.tsx\": 194,\n\t\"./AddressBook/features/Create/index\": 251,\n\t\"./AddressBook/features/Create/index.ts\": 251,\n\t\"./AddressBook/index\": 66,\n\t\"./AddressBook/index.ts\": 66,\n\t\"./Configs\": 14,\n\t\"./Configs/\": 14,\n\t\"./Configs/Configs\": 177,\n\t\"./Configs/Configs.actions\": 228,\n\t\"./Configs/Configs.actions.ts\": 228,\n\t\"./Configs/Configs.constant\": 91,\n\t\"./Configs/Configs.constant.ts\": 91,\n\t\"./Configs/Configs.enhance\": 396,\n\t\"./Configs/Configs.enhance.tsx\": 396,\n\t\"./Configs/Configs.interface\": 229,\n\t\"./Configs/Configs.interface.ts\": 229,\n\t\"./Configs/Configs.reducer\": 178,\n\t\"./Configs/Configs.reducer.ts\": 178,\n\t\"./Configs/Configs.route\": 163,\n\t\"./Configs/Configs.route.ts\": 163,\n\t\"./Configs/Configs.selector\": 230,\n\t\"./Configs/Configs.selector.ts\": 230,\n\t\"./Configs/Configs.styled\": 397,\n\t\"./Configs/Configs.styled.ts\": 397,\n\t\"./Configs/Configs.tsx\": 177,\n\t\"./Configs/index\": 14,\n\t\"./Configs/index.ts\": 14,\n\t\"./History\": 65,\n\t\"./History/\": 65,\n\t\"./History/History\": 195,\n\t\"./History/History.actions\": 253,\n\t\"./History/History.actions.ts\": 253,\n\t\"./History/History.constant\": 76,\n\t\"./History/History.constant.ts\": 76,\n\t\"./History/History.enhance\": 272,\n\t\"./History/History.enhance.tsx\": 272,\n\t\"./History/History.interface\": 254,\n\t\"./History/History.interface.ts\": 254,\n\t\"./History/History.item\": 133,\n\t\"./History/History.item.tsx\": 133,\n\t\"./History/History.list\": 252,\n\t\"./History/History.list.tsx\": 252,\n\t\"./History/History.reducer\": 323,\n\t\"./History/History.reducer.ts\": 323,\n\t\"./History/History.route\": 164,\n\t\"./History/History.route.ts\": 164,\n\t\"./History/History.selector\": 83,\n\t\"./History/History.selector.ts\": 83,\n\t\"./History/History.styled\": 398,\n\t\"./History/History.styled.ts\": 398,\n\t\"./History/History.tsx\": 195,\n\t\"./History/History.utils\": 207,\n\t\"./History/History.utils.ts\": 207,\n\t\"./History/index\": 65,\n\t\"./History/index.ts\": 65,\n\t\"./Keychain\": 129,\n\t\"./Keychain/\": 129,\n\t\"./Keychain/Keychain\": 185,\n\t\"./Keychain/Keychain.interface\": 237,\n\t\"./Keychain/Keychain.interface.ts\": 237,\n\t\"./Keychain/Keychain.route\": 165,\n\t\"./Keychain/Keychain.route.ts\": 165,\n\t\"./Keychain/Keychain.styled\": 266,\n\t\"./Keychain/Keychain.styled.ts\": 266,\n\t\"./Keychain/Keychain.tsx\": 185,\n\t\"./Keychain/index\": 129,\n\t\"./Keychain/index.ts\": 129,\n\t\"./Preload\": 29,\n\t\"./Preload/\": 29,\n\t\"./Preload/Preload.actions\": 124,\n\t\"./Preload/Preload.actions.ts\": 124,\n\t\"./Preload/Preload.constant\": 61,\n\t\"./Preload/Preload.constant.ts\": 61,\n\t\"./Preload/Preload.enhance\": 244,\n\t\"./Preload/Preload.enhance.tsx\": 244,\n\t\"./Preload/Preload.interface\": 399,\n\t\"./Preload/Preload.interface.ts\": 399,\n\t\"./Preload/Preload.reducer\": 174,\n\t\"./Preload/Preload.reducer.ts\": 174,\n\t\"./Preload/Preload.selector\": 98,\n\t\"./Preload/Preload.selector.ts\": 98,\n\t\"./Preload/index\": 29,\n\t\"./Preload/index.ts\": 29,\n\t\"./Send\": 134,\n\t\"./Send/\": 134,\n\t\"./Send/Send\": 196,\n\t\"./Send/Send.actions\": 59,\n\t\"./Send/Send.actions.ts\": 59,\n\t\"./Send/Send.constant\": 15,\n\t\"./Send/Send.constant.ts\": 15,\n\t\"./Send/Send.enhance\": 287,\n\t\"./Send/Send.enhance.tsx\": 287,\n\t\"./Send/Send.enhanceAddressValidator\": 279,\n\t\"./Send/Send.enhanceAddressValidator.tsx\": 279,\n\t\"./Send/Send.enhanceAmountValidator\": 280,\n\t\"./Send/Send.enhanceAmountValidator.tsx\": 280,\n\t\"./Send/Send.enhanceFee\": 282,\n\t\"./Send/Send.enhanceFee.tsx\": 282,\n\t\"./Send/Send.enhanceInit\": 281,\n\t\"./Send/Send.enhanceInit.tsx\": 281,\n\t\"./Send/Send.enhanceSend\": 278,\n\t\"./Send/Send.enhanceSend.tsx\": 278,\n\t\"./Send/Send.interface\": 256,\n\t\"./Send/Send.interface.ts\": 256,\n\t\"./Send/Send.reducer\": 324,\n\t\"./Send/Send.reducer.ts\": 324,\n\t\"./Send/Send.route\": 166,\n\t\"./Send/Send.route.ts\": 166,\n\t\"./Send/Send.selector\": 35,\n\t\"./Send/Send.selector.ts\": 35,\n\t\"./Send/Send.services\": 403,\n\t\"./Send/Send.services.ts\": 403,\n\t\"./Send/Send.styled\": 283,\n\t\"./Send/Send.styled.ts\": 283,\n\t\"./Send/Send.tsx\": 196,\n\t\"./Send/Send.utils\": 67,\n\t\"./Send/Send.utils.ts\": 67,\n\t\"./Send/features/ConfirmTx\": 136,\n\t\"./Send/features/ConfirmTx/\": 136,\n\t\"./Send/features/ConfirmTx/ConfirmTx\": 199,\n\t\"./Send/features/ConfirmTx/ConfirmTx.route\": 167,\n\t\"./Send/features/ConfirmTx/ConfirmTx.route.ts\": 167,\n\t\"./Send/features/ConfirmTx/ConfirmTx.tsx\": 199,\n\t\"./Send/features/ConfirmTx/index\": 136,\n\t\"./Send/features/ConfirmTx/index.ts\": 136,\n\t\"./Send/index\": 134,\n\t\"./Send/index.ts\": 134,\n\t\"./Setting\": 125,\n\t\"./Setting/\": 125,\n\t\"./Setting/Setting\": 179,\n\t\"./Setting/Setting.actions\": 130,\n\t\"./Setting/Setting.actions.ts\": 130,\n\t\"./Setting/Setting.constant\": 92,\n\t\"./Setting/Setting.constant.ts\": 92,\n\t\"./Setting/Setting.enhance\": 264,\n\t\"./Setting/Setting.enhance.tsx\": 264,\n\t\"./Setting/Setting.interface\": 238,\n\t\"./Setting/Setting.interface.ts\": 238,\n\t\"./Setting/Setting.reducer\": 188,\n\t\"./Setting/Setting.reducer.ts\": 188,\n\t\"./Setting/Setting.route\": 168,\n\t\"./Setting/Setting.route.ts\": 168,\n\t\"./Setting/Setting.selector\": 131,\n\t\"./Setting/Setting.selector.ts\": 131,\n\t\"./Setting/Setting.styled\": 404,\n\t\"./Setting/Setting.styled.ts\": 404,\n\t\"./Setting/Setting.tsx\": 179,\n\t\"./Setting/features/Network\": 132,\n\t\"./Setting/features/Network/\": 132,\n\t\"./Setting/features/Network/Network\": 187,\n\t\"./Setting/features/Network/Network.route\": 169,\n\t\"./Setting/features/Network/Network.route.ts\": 169,\n\t\"./Setting/features/Network/Network.styled\": 405,\n\t\"./Setting/features/Network/Network.styled.ts\": 405,\n\t\"./Setting/features/Network/Network.tsx\": 187,\n\t\"./Setting/features/Network/index\": 132,\n\t\"./Setting/features/Network/index.ts\": 132,\n\t\"./Setting/features/SettingItem\": 127,\n\t\"./Setting/features/SettingItem/\": 127,\n\t\"./Setting/features/SettingItem/SettingItem\": 235,\n\t\"./Setting/features/SettingItem/SettingItem.styled\": 263,\n\t\"./Setting/features/SettingItem/SettingItem.styled.ts\": 263,\n\t\"./Setting/features/SettingItem/SettingItem.tsx\": 235,\n\t\"./Setting/features/SettingItem/index\": 127,\n\t\"./Setting/features/SettingItem/index.ts\": 127,\n\t\"./Setting/index\": 125,\n\t\"./Setting/index.ts\": 125,\n\t\"./Token\": 13,\n\t\"./Token/\": 13,\n\t\"./Token/Token\": 75,\n\t\"./Token/Token.actions\": 239,\n\t\"./Token/Token.actions.ts\": 239,\n\t\"./Token/Token.allList\": 242,\n\t\"./Token/Token.allList.tsx\": 242,\n\t\"./Token/Token.basic\": 243,\n\t\"./Token/Token.basic.tsx\": 243,\n\t\"./Token/Token.constant\": 46,\n\t\"./Token/Token.constant.ts\": 46,\n\t\"./Token/Token.enhance\": 141,\n\t\"./Token/Token.enhance.tsx\": 141,\n\t\"./Token/Token.enhanceAllList\": 241,\n\t\"./Token/Token.enhanceAllList.tsx\": 241,\n\t\"./Token/Token.interface\": 240,\n\t\"./Token/Token.interface.ts\": 240,\n\t\"./Token/Token.list\": 112,\n\t\"./Token/Token.list.tsx\": 112,\n\t\"./Token/Token.model\": 267,\n\t\"./Token/Token.model.ts\": 267,\n\t\"./Token/Token.reducer\": 189,\n\t\"./Token/Token.reducer.ts\": 189,\n\t\"./Token/Token.selector\": 41,\n\t\"./Token/Token.selector.ts\": 41,\n\t\"./Token/Token.services\": 205,\n\t\"./Token/Token.services.ts\": 205,\n\t\"./Token/Token.styled\": 54,\n\t\"./Token/Token.styled.ts\": 54,\n\t\"./Token/Token.tsx\": 75,\n\t\"./Token/Token.utils\": 94,\n\t\"./Token/Token.utils.ts\": 94,\n\t\"./Token/features/AddToken\": 137,\n\t\"./Token/features/AddToken/\": 137,\n\t\"./Token/features/AddToken/AddToken\": 200,\n\t\"./Token/features/AddToken/AddToken.enhance\": 284,\n\t\"./Token/features/AddToken/AddToken.enhance.tsx\": 284,\n\t\"./Token/features/AddToken/AddToken.route\": 170,\n\t\"./Token/features/AddToken/AddToken.route.ts\": 170,\n\t\"./Token/features/AddToken/AddToken.styled\": 406,\n\t\"./Token/features/AddToken/AddToken.styled.ts\": 406,\n\t\"./Token/features/AddToken/AddToken.tsx\": 200,\n\t\"./Token/features/AddToken/index\": 137,\n\t\"./Token/features/AddToken/index.ts\": 137,\n\t\"./Token/features/Detail\": 100,\n\t\"./Token/features/Detail/\": 100,\n\t\"./Token/features/Detail/Detail\": 197,\n\t\"./Token/features/Detail/Detail.enhance\": 277,\n\t\"./Token/features/Detail/Detail.enhance.tsx\": 277,\n\t\"./Token/features/Detail/Detail.interface\": 255,\n\t\"./Token/features/Detail/Detail.interface.ts\": 255,\n\t\"./Token/features/Detail/Detail.route\": 171,\n\t\"./Token/features/Detail/Detail.route.ts\": 171,\n\t\"./Token/features/Detail/Detail.styled\": 407,\n\t\"./Token/features/Detail/Detail.styled.ts\": 407,\n\t\"./Token/features/Detail/Detail.tsx\": 197,\n\t\"./Token/features/Detail/index\": 100,\n\t\"./Token/features/Detail/index.ts\": 100,\n\t\"./Token/features/TokenInfo\": 135,\n\t\"./Token/features/TokenInfo/\": 135,\n\t\"./Token/features/TokenInfo/TokenInfo\": 198,\n\t\"./Token/features/TokenInfo/TokenInfo.enhance\": 274,\n\t\"./Token/features/TokenInfo/TokenInfo.enhance.tsx\": 274,\n\t\"./Token/features/TokenInfo/TokenInfo.route\": 172,\n\t\"./Token/features/TokenInfo/TokenInfo.route.ts\": 172,\n\t\"./Token/features/TokenInfo/TokenInfo.styled\": 276,\n\t\"./Token/features/TokenInfo/TokenInfo.styled.ts\": 276,\n\t\"./Token/features/TokenInfo/TokenInfo.tsx\": 198,\n\t\"./Token/features/TokenInfo/TokenInfo.verify\": 275,\n\t\"./Token/features/TokenInfo/TokenInfo.verify.tsx\": 275,\n\t\"./Token/features/TokenInfo/index\": 135,\n\t\"./Token/features/TokenInfo/index.ts\": 135,\n\t\"./Token/index\": 13,\n\t\"./Token/index.ts\": 13,\n\t\"./Wallet\": 34,\n\t\"./Wallet/\": 34,\n\t\"./Wallet/Wallet\": 327,\n\t\"./Wallet/Wallet.actions\": 257,\n\t\"./Wallet/Wallet.actions.ts\": 257,\n\t\"./Wallet/Wallet.constant\": 86,\n\t\"./Wallet/Wallet.constant.ts\": 86,\n\t\"./Wallet/Wallet.enhance\": 285,\n\t\"./Wallet/Wallet.enhance.tsx\": 285,\n\t\"./Wallet/Wallet.interface\": 245,\n\t\"./Wallet/Wallet.interface.ts\": 245,\n\t\"./Wallet/Wallet.reducer\": 325,\n\t\"./Wallet/Wallet.reducer.ts\": 325,\n\t\"./Wallet/Wallet.route\": 109,\n\t\"./Wallet/Wallet.route.ts\": 109,\n\t\"./Wallet/Wallet.selector\": 85,\n\t\"./Wallet/Wallet.selector.ts\": 85,\n\t\"./Wallet/Wallet.tsx\": 327,\n\t\"./Wallet/Wallet.utils\": 206,\n\t\"./Wallet/Wallet.utils.ts\": 206,\n\t\"./Wallet/index\": 34,\n\t\"./Wallet/index.ts\": 34,\n\t\"./index\": 123,\n\t\"./index.ts\": 123\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 477;","var map = {\n\t\"./components/Core/Toast/Toast.reducer.ts\": 102,\n\t\"./components/Modal/Modal.reducer.ts\": 320,\n\t\"./components/Templates/Templates.reducer.ts\": 570,\n\t\"./module/Account/Account.reducer.ts\": 321,\n\t\"./module/AddressBook/AddressBook.reducer.ts\": 322,\n\t\"./module/Configs/Configs.reducer.ts\": 178,\n\t\"./module/History/History.reducer.ts\": 323,\n\t\"./module/Preload/Preload.reducer.ts\": 174,\n\t\"./module/Send/Send.reducer.ts\": 324,\n\t\"./module/Setting/Setting.reducer.ts\": 188,\n\t\"./module/Token/Token.reducer.ts\": 189,\n\t\"./module/Wallet/Wallet.reducer.ts\": 325\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 569;","export interface IReducer {}\n\nconst initialState: IReducer = {};\n\nconst reducer = (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    },\n) => {\n    switch (action.type) {\n        case '': {\n            return {\n                ...state,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import React, { FunctionComponent } from 'react';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { configStore, IConfigStore } from 'src/redux/index';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { compose } from 'recompose';\nimport { AccountInstance } from 'incognito-js/build/web/browser';\nimport { IPreloadReducer, preloadSelector, withPreload } from './module/Preload';\nimport { withLayoutApp } from './components/Layout';\nimport { IWalletReducer, walletSelector } from './module/Wallet';\nimport {\n    actionFollowPopularToken,\n    actionGetPrivacyTokensBalance,\n    IEnvToken,\n    ITokenReducer,\n    tokenSelector,\n} from './module/Token';\nimport { actionGetAccountBalance, defaultAccountSelector } from './module/Account';\nimport { actionToggleToast, TOAST_CONFIGS } from './components';\n\nconst { store, persistor }: IConfigStore = configStore();\n\nconst withWallet = (WrappedComponent: React.FunctionComponent) => (props: any) => {\n    const dispatch = useDispatch();\n    const account: AccountInstance = useSelector(defaultAccountSelector);\n    const wallet: IWalletReducer = useSelector(walletSelector);\n    const preload: IPreloadReducer = useSelector(preloadSelector);\n    const tokenState: ITokenReducer = useSelector(tokenSelector);\n    const { mainnet } = preload.configs;\n    const field = mainnet ? 'mainnet' : 'testnet';\n    const envToken: IEnvToken = tokenState[field];\n    const { followedPopularIds } = envToken;\n    const handleLoadWallet = () => {\n        try {\n            if (!followedPopularIds) {\n                dispatch(actionFollowPopularToken());\n            }\n            dispatch(actionGetPrivacyTokensBalance());\n            dispatch(actionGetAccountBalance());\n        } catch (error) {\n            dispatch(\n                actionToggleToast({\n                    type: TOAST_CONFIGS.error,\n                    toggle: true,\n                    value: error,\n                }),\n            );\n        }\n    };\n    React.useEffect(() => {\n        handleLoadWallet();\n    }, [wallet, account]);\n    return <WrappedComponent {...props} />;\n};\n\nconst enhance = (WrappedComponent: FunctionComponent) => (props: any) => {\n    return (\n        <ErrorBoundary>\n            <Provider store={store}>\n                <PersistGate loading={null} persistor={persistor}>\n                    <WrappedComponent {...props} />\n                </PersistGate>\n            </Provider>\n        </ErrorBoundary>\n    );\n};\n\nexport default compose(enhance, withPreload, withWallet, withLayoutApp);\n","import React, { Suspense } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { GlobalStyled } from 'src/styles/index';\nimport routes, { IRouteProps } from 'src/module';\nimport { createMemoryHistory, createBrowserHistory } from 'history';\nimport { isDev } from 'src/configs';\nimport { useSelector } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from 'src/components/Modal';\nimport { ThemeProvider } from 'styled-components';\nimport 'animate.css';\nimport './reset.scss';\nimport { Toast } from './components';\nimport { HeaderApp } from './components/Header';\nimport { themeSelector } from './module/Configs';\nimport withApp from './App.enhance';\n\nconst history = isDev ? createBrowserHistory() : createMemoryHistory(); // Instead of createBrowserHistory();\n\nconst App: React.FunctionComponent = () => {\n    const theme = useSelector(themeSelector);\n    return (\n        <ThemeProvider theme={theme}>\n            <GlobalStyled />\n            <Router history={history}>\n                <HeaderApp />\n                <Switch>\n                    <Suspense fallback=\"...\">\n                        {routes.map((route: IRouteProps) => (\n                            <Route {...route} key={route.path} />\n                        ))}\n                    </Suspense>\n                </Switch>\n                <Modal />\n                <Toast />\n            </Router>\n        </ThemeProvider>\n    );\n};\n\nexport default withApp(React.memo(App));\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(<App />, rootEl);\n\nif (module.hot) {\n    module.hot.accept();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}